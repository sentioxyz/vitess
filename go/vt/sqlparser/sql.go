// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const EXCEPT = 57351
const SELECT = 57352
const STREAM = 57353
const VSTREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const ALL = 57367
const DISTINCT = 57368
const AS = 57369
const EXISTS = 57370
const ASC = 57371
const DESC = 57372
const INTO = 57373
const DUPLICATE = 57374
const DEFAULT = 57375
const SET = 57376
const LOCK = 57377
const UNLOCK = 57378
const KEYS = 57379
const DO = 57380
const CALL = 57381
const DISTINCTROW = 57382
const PARSER = 57383
const GENERATED = 57384
const ALWAYS = 57385
const OUTFILE = 57386
const S3 = 57387
const DATA = 57388
const LOAD = 57389
const LINES = 57390
const TERMINATED = 57391
const ESCAPED = 57392
const ENCLOSED = 57393
const DUMPFILE = 57394
const CSV = 57395
const HEADER = 57396
const MANIFEST = 57397
const OVERWRITE = 57398
const STARTING = 57399
const OPTIONALLY = 57400
const VALUES = 57401
const LAST_INSERT_ID = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const SQL_CALC_FOUND_ROWS = 57409
const JOIN = 57410
const STRAIGHT_JOIN = 57411
const LEFT = 57412
const RIGHT = 57413
const INNER = 57414
const OUTER = 57415
const CROSS = 57416
const NATURAL = 57417
const USE = 57418
const FORCE = 57419
const ON = 57420
const USING = 57421
const INPLACE = 57422
const COPY = 57423
const INSTANT = 57424
const ALGORITHM = 57425
const NONE = 57426
const SHARED = 57427
const EXCLUSIVE = 57428
const SUBQUERY_AS_EXPR = 57429
const STRING = 57430
const ID = 57431
const AT_ID = 57432
const AT_AT_ID = 57433
const HEX = 57434
const NCHAR_STRING = 57435
const INTEGRAL = 57436
const FLOAT = 57437
const DECIMAL = 57438
const HEXNUM = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BITNUM = 57442
const BIT_LITERAL = 57443
const COMPRESSION = 57444
const VALUE_ARG = 57445
const LIST_ARG = 57446
const OFFSET_ARG = 57447
const JSON_PRETTY = 57448
const JSON_STORAGE_SIZE = 57449
const JSON_STORAGE_FREE = 57450
const JSON_CONTAINS = 57451
const JSON_CONTAINS_PATH = 57452
const JSON_EXTRACT = 57453
const JSON_KEYS = 57454
const JSON_OVERLAPS = 57455
const JSON_SEARCH = 57456
const JSON_VALUE = 57457
const EXTRACT = 57458
const NULL = 57459
const TRUE = 57460
const FALSE = 57461
const OFF = 57462
const DISCARD = 57463
const IMPORT = 57464
const ENABLE = 57465
const DISABLE = 57466
const TABLESPACE = 57467
const VIRTUAL = 57468
const STORED = 57469
const BOTH = 57470
const LEADING = 57471
const TRAILING = 57472
const KILL = 57473
const EMPTY_FROM_CLAUSE = 57474
const LOWER_THAN_CHARSET = 57475
const CHARSET = 57476
const UNIQUE = 57477
const KEY = 57478
const EXPRESSION_PREC_SETTER = 57479
const OR = 57480
const XOR = 57481
const AND = 57482
const NOT = 57483
const BETWEEN = 57484
const CASE = 57485
const WHEN = 57486
const THEN = 57487
const ELSE = 57488
const END = 57489
const LE = 57490
const GE = 57491
const NE = 57492
const NULL_SAFE_EQUAL = 57493
const IS = 57494
const LIKE = 57495
const ILIKE = 57496
const REGEXP = 57497
const RLIKE = 57498
const IN = 57499
const ASSIGNMENT_OPT = 57500
const SHIFT_LEFT = 57501
const SHIFT_RIGHT = 57502
const DIV = 57503
const MOD = 57504
const UNARY = 57505
const COLLATE = 57506
const BINARY = 57507
const UNDERSCORE_ARMSCII8 = 57508
const UNDERSCORE_ASCII = 57509
const UNDERSCORE_BIG5 = 57510
const UNDERSCORE_BINARY = 57511
const UNDERSCORE_CP1250 = 57512
const UNDERSCORE_CP1251 = 57513
const UNDERSCORE_CP1256 = 57514
const UNDERSCORE_CP1257 = 57515
const UNDERSCORE_CP850 = 57516
const UNDERSCORE_CP852 = 57517
const UNDERSCORE_CP866 = 57518
const UNDERSCORE_CP932 = 57519
const UNDERSCORE_DEC8 = 57520
const UNDERSCORE_EUCJPMS = 57521
const UNDERSCORE_EUCKR = 57522
const UNDERSCORE_GB18030 = 57523
const UNDERSCORE_GB2312 = 57524
const UNDERSCORE_GBK = 57525
const UNDERSCORE_GEOSTD8 = 57526
const UNDERSCORE_GREEK = 57527
const UNDERSCORE_HEBREW = 57528
const UNDERSCORE_HP8 = 57529
const UNDERSCORE_KEYBCS2 = 57530
const UNDERSCORE_KOI8R = 57531
const UNDERSCORE_KOI8U = 57532
const UNDERSCORE_LATIN1 = 57533
const UNDERSCORE_LATIN2 = 57534
const UNDERSCORE_LATIN5 = 57535
const UNDERSCORE_LATIN7 = 57536
const UNDERSCORE_MACCE = 57537
const UNDERSCORE_MACROMAN = 57538
const UNDERSCORE_SJIS = 57539
const UNDERSCORE_SWE7 = 57540
const UNDERSCORE_TIS620 = 57541
const UNDERSCORE_UCS2 = 57542
const UNDERSCORE_UJIS = 57543
const UNDERSCORE_UTF16 = 57544
const UNDERSCORE_UTF16LE = 57545
const UNDERSCORE_UTF32 = 57546
const UNDERSCORE_UTF8 = 57547
const UNDERSCORE_UTF8MB4 = 57548
const UNDERSCORE_UTF8MB3 = 57549
const INTERVAL = 57550
const WINDOW_EXPR = 57551
const JSON_EXTRACT_OP = 57552
const JSON_UNQUOTE_EXTRACT_OP = 57553
const CREATE = 57554
const ALTER = 57555
const DROP = 57556
const RENAME = 57557
const ANALYZE = 57558
const ADD = 57559
const FLUSH = 57560
const CHANGE = 57561
const MODIFY = 57562
const DEALLOCATE = 57563
const REVERT = 57564
const QUERIES = 57565
const SCHEMA = 57566
const TABLE = 57567
const INDEX = 57568
const VIEW = 57569
const TO = 57570
const IGNORE = 57571
const IF = 57572
const PRIMARY = 57573
const COLUMN = 57574
const SPATIAL = 57575
const FULLTEXT = 57576
const KEY_BLOCK_SIZE = 57577
const CHECK = 57578
const INDEXES = 57579
const ACTION = 57580
const CASCADE = 57581
const CONSTRAINT = 57582
const FOREIGN = 57583
const NO = 57584
const REFERENCES = 57585
const RESTRICT = 57586
const SHOW = 57587
const DESCRIBE = 57588
const EXPLAIN = 57589
const DATE = 57590
const ESCAPE = 57591
const REPAIR = 57592
const OPTIMIZE = 57593
const TRUNCATE = 57594
const COALESCE = 57595
const EXCHANGE = 57596
const REBUILD = 57597
const PARTITIONING = 57598
const REMOVE = 57599
const PREPARE = 57600
const EXECUTE = 57601
const MAXVALUE = 57602
const PARTITION = 57603
const REORGANIZE = 57604
const LESS = 57605
const THAN = 57606
const PROCEDURE = 57607
const TRIGGER = 57608
const VINDEX = 57609
const VINDEXES = 57610
const DIRECTORY = 57611
const NAME = 57612
const UPGRADE = 57613
const STATUS = 57614
const VARIABLES = 57615
const WARNINGS = 57616
const CASCADED = 57617
const DEFINER = 57618
const OPTION = 57619
const SQL = 57620
const UNDEFINED = 57621
const SEQUENCE = 57622
const MERGE = 57623
const TEMPORARY = 57624
const TEMPTABLE = 57625
const INVOKER = 57626
const SECURITY = 57627
const FIRST = 57628
const AFTER = 57629
const LAST = 57630
const VITESS_MIGRATION = 57631
const CANCEL = 57632
const RETRY = 57633
const LAUNCH = 57634
const COMPLETE = 57635
const CLEANUP = 57636
const THROTTLE = 57637
const UNTHROTTLE = 57638
const EXPIRE = 57639
const RATIO = 57640
const VITESS_THROTTLER = 57641
const BEGIN = 57642
const START = 57643
const TRANSACTION = 57644
const COMMIT = 57645
const ROLLBACK = 57646
const SAVEPOINT = 57647
const RELEASE = 57648
const WORK = 57649
const CONSISTENT = 57650
const SNAPSHOT = 57651
const BIT = 57652
const TINYINT = 57653
const SMALLINT = 57654
const MEDIUMINT = 57655
const INT = 57656
const INTEGER = 57657
const BIGINT = 57658
const INTNUM = 57659
const REAL = 57660
const DOUBLE = 57661
const FLOAT_TYPE = 57662
const FLOAT4_TYPE = 57663
const FLOAT8_TYPE = 57664
const DECIMAL_TYPE = 57665
const NUMERIC = 57666
const TIME = 57667
const TIMESTAMP = 57668
const DATETIME = 57669
const YEAR = 57670
const CHAR = 57671
const VARCHAR = 57672
const BOOL = 57673
const CHARACTER = 57674
const VARBINARY = 57675
const NCHAR = 57676
const TEXT = 57677
const TINYTEXT = 57678
const MEDIUMTEXT = 57679
const LONGTEXT = 57680
const BLOB = 57681
const TINYBLOB = 57682
const MEDIUMBLOB = 57683
const LONGBLOB = 57684
const JSON = 57685
const JSON_SCHEMA_VALID = 57686
const JSON_SCHEMA_VALIDATION_REPORT = 57687
const ENUM = 57688
const GEOMETRY = 57689
const POINT = 57690
const LINESTRING = 57691
const POLYGON = 57692
const GEOMCOLLECTION = 57693
const GEOMETRYCOLLECTION = 57694
const MULTIPOINT = 57695
const MULTILINESTRING = 57696
const MULTIPOLYGON = 57697
const ASCII = 57698
const UNICODE = 57699
const NULLX = 57700
const AUTO_INCREMENT = 57701
const APPROXNUM = 57702
const SIGNED = 57703
const UNSIGNED = 57704
const ZEROFILL = 57705
const PURGE = 57706
const BEFORE = 57707
const CODE = 57708
const COLLATION = 57709
const COLUMNS = 57710
const DATABASES = 57711
const ENGINES = 57712
const EVENT = 57713
const EXTENDED = 57714
const FIELDS = 57715
const FULL = 57716
const FUNCTION = 57717
const GTID_EXECUTED = 57718
const KEYSPACES = 57719
const OPEN = 57720
const PLUGINS = 57721
const PRIVILEGES = 57722
const PROCESSLIST = 57723
const SCHEMAS = 57724
const TABLES = 57725
const TRIGGERS = 57726
const USER = 57727
const VGTID_EXECUTED = 57728
const VITESS_KEYSPACES = 57729
const VITESS_METADATA = 57730
const VITESS_MIGRATIONS = 57731
const VITESS_REPLICATION_STATUS = 57732
const VITESS_SHARDS = 57733
const VITESS_TABLETS = 57734
const VITESS_TARGET = 57735
const VSCHEMA = 57736
const VITESS_THROTTLED_APPS = 57737
const NAMES = 57738
const GLOBAL = 57739
const SESSION = 57740
const ISOLATION = 57741
const LEVEL = 57742
const READ = 57743
const WRITE = 57744
const ONLY = 57745
const REPEATABLE = 57746
const COMMITTED = 57747
const UNCOMMITTED = 57748
const SERIALIZABLE = 57749
const ADDDATE = 57750
const CURRENT_TIMESTAMP = 57751
const DATABASE = 57752
const CURRENT_DATE = 57753
const CURDATE = 57754
const DATE_ADD = 57755
const DATE_SUB = 57756
const NOW = 57757
const SUBDATE = 57758
const CURTIME = 57759
const CURRENT_TIME = 57760
const LOCALTIME = 57761
const LOCALTIMESTAMP = 57762
const CURRENT_USER = 57763
const UTC_DATE = 57764
const UTC_TIME = 57765
const UTC_TIMESTAMP = 57766
const SYSDATE = 57767
const DAY = 57768
const DAY_HOUR = 57769
const DAY_MICROSECOND = 57770
const DAY_MINUTE = 57771
const DAY_SECOND = 57772
const HOUR = 57773
const HOUR_MICROSECOND = 57774
const HOUR_MINUTE = 57775
const HOUR_SECOND = 57776
const MICROSECOND = 57777
const MINUTE = 57778
const MINUTE_MICROSECOND = 57779
const MINUTE_SECOND = 57780
const MONTH = 57781
const QUARTER = 57782
const SECOND = 57783
const SECOND_MICROSECOND = 57784
const YEAR_MONTH = 57785
const WEEK = 57786
const SQL_TSI_DAY = 57787
const SQL_TSI_WEEK = 57788
const SQL_TSI_HOUR = 57789
const SQL_TSI_MINUTE = 57790
const SQL_TSI_MONTH = 57791
const SQL_TSI_QUARTER = 57792
const SQL_TSI_SECOND = 57793
const SQL_TSI_MICROSECOND = 57794
const SQL_TSI_YEAR = 57795
const REPLACE = 57796
const CONVERT = 57797
const CAST = 57798
const SUBSTR = 57799
const SUBSTRING = 57800
const SEPARATOR = 57801
const TIMESTAMPADD = 57802
const TIMESTAMPDIFF = 57803
const WEIGHT_STRING = 57804
const LTRIM = 57805
const RTRIM = 57806
const TRIM = 57807
const JSON_ARRAY = 57808
const JSON_OBJECT = 57809
const JSON_QUOTE = 57810
const JSON_DEPTH = 57811
const JSON_TYPE = 57812
const JSON_LENGTH = 57813
const JSON_VALID = 57814
const JSON_ARRAY_APPEND = 57815
const JSON_ARRAY_INSERT = 57816
const JSON_INSERT = 57817
const JSON_MERGE = 57818
const JSON_MERGE_PATCH = 57819
const JSON_MERGE_PRESERVE = 57820
const JSON_REMOVE = 57821
const JSON_REPLACE = 57822
const JSON_SET = 57823
const JSON_UNQUOTE = 57824
const COUNT = 57825
const AVG = 57826
const MAX = 57827
const MIN = 57828
const SUM = 57829
const GROUP_CONCAT = 57830
const BIT_AND = 57831
const BIT_OR = 57832
const BIT_XOR = 57833
const STD = 57834
const STDDEV = 57835
const STDDEV_POP = 57836
const STDDEV_SAMP = 57837
const VAR_POP = 57838
const VAR_SAMP = 57839
const VARIANCE = 57840
const ANY_VALUE = 57841
const REGEXP_INSTR = 57842
const REGEXP_LIKE = 57843
const REGEXP_REPLACE = 57844
const REGEXP_SUBSTR = 57845
const ExtractValue = 57846
const UpdateXML = 57847
const GET_LOCK = 57848
const RELEASE_LOCK = 57849
const RELEASE_ALL_LOCKS = 57850
const IS_FREE_LOCK = 57851
const IS_USED_LOCK = 57852
const LOCATE = 57853
const POSITION = 57854
const ST_GeometryCollectionFromText = 57855
const ST_GeometryFromText = 57856
const ST_LineStringFromText = 57857
const ST_MultiLineStringFromText = 57858
const ST_MultiPointFromText = 57859
const ST_MultiPolygonFromText = 57860
const ST_PointFromText = 57861
const ST_PolygonFromText = 57862
const ST_GeometryCollectionFromWKB = 57863
const ST_GeometryFromWKB = 57864
const ST_LineStringFromWKB = 57865
const ST_MultiLineStringFromWKB = 57866
const ST_MultiPointFromWKB = 57867
const ST_MultiPolygonFromWKB = 57868
const ST_PointFromWKB = 57869
const ST_PolygonFromWKB = 57870
const ST_AsBinary = 57871
const ST_AsText = 57872
const ST_Dimension = 57873
const ST_Envelope = 57874
const ST_IsSimple = 57875
const ST_IsEmpty = 57876
const ST_GeometryType = 57877
const ST_X = 57878
const ST_Y = 57879
const ST_Latitude = 57880
const ST_Longitude = 57881
const ST_EndPoint = 57882
const ST_IsClosed = 57883
const ST_Length = 57884
const ST_NumPoints = 57885
const ST_StartPoint = 57886
const ST_PointN = 57887
const ST_Area = 57888
const ST_Centroid = 57889
const ST_ExteriorRing = 57890
const ST_InteriorRingN = 57891
const ST_NumInteriorRings = 57892
const ST_NumGeometries = 57893
const ST_GeometryN = 57894
const ST_LongFromGeoHash = 57895
const ST_PointFromGeoHash = 57896
const ST_LatFromGeoHash = 57897
const ST_GeoHash = 57898
const ST_AsGeoJSON = 57899
const ST_GeomFromGeoJSON = 57900
const MATCH = 57901
const AGAINST = 57902
const BOOLEAN = 57903
const LANGUAGE = 57904
const WITH = 57905
const QUERY = 57906
const EXPANSION = 57907
const WITHOUT = 57908
const VALIDATION = 57909
const UNUSED = 57910
const ARRAY = 57911
const BYTE = 57912
const CUME_DIST = 57913
const DESCRIPTION = 57914
const DENSE_RANK = 57915
const EMPTY = 57916
const FIRST_VALUE = 57917
const GROUPING = 57918
const GROUPS = 57919
const JSON_TABLE = 57920
const LAG = 57921
const LAST_VALUE = 57922
const LATERAL = 57923
const LEAD = 57924
const NTH_VALUE = 57925
const NTILE = 57926
const OF = 57927
const OVER = 57928
const PERCENT_RANK = 57929
const RANK = 57930
const RECURSIVE = 57931
const ROW_NUMBER = 57932
const SYSTEM = 57933
const WINDOW = 57934
const ACTIVE = 57935
const ADMIN = 57936
const AUTOEXTEND_SIZE = 57937
const BUCKETS = 57938
const CLONE = 57939
const COLUMN_FORMAT = 57940
const COMPONENT = 57941
const DEFINITION = 57942
const ENFORCED = 57943
const ENGINE_ATTRIBUTE = 57944
const EXCLUDE = 57945
const FOLLOWING = 57946
const GET_MASTER_PUBLIC_KEY = 57947
const HISTOGRAM = 57948
const HISTORY = 57949
const INACTIVE = 57950
const INVISIBLE = 57951
const LOCKED = 57952
const MASTER_COMPRESSION_ALGORITHMS = 57953
const MASTER_PUBLIC_KEY_PATH = 57954
const MASTER_TLS_CIPHERSUITES = 57955
const MASTER_ZSTD_COMPRESSION_LEVEL = 57956
const NESTED = 57957
const NETWORK_NAMESPACE = 57958
const NOWAIT = 57959
const NULLS = 57960
const OJ = 57961
const OLD = 57962
const OPTIONAL = 57963
const ORDINALITY = 57964
const ORGANIZATION = 57965
const OTHERS = 57966
const PARTIAL = 57967
const PATH = 57968
const PERSIST = 57969
const PERSIST_ONLY = 57970
const PRECEDING = 57971
const PRIVILEGE_CHECKS_USER = 57972
const PROCESS = 57973
const RANDOM = 57974
const REFERENCE = 57975
const REQUIRE_ROW_FORMAT = 57976
const RESOURCE = 57977
const RESPECT = 57978
const RESTART = 57979
const RETAIN = 57980
const REUSE = 57981
const ROLE = 57982
const SECONDARY = 57983
const SECONDARY_ENGINE = 57984
const SECONDARY_ENGINE_ATTRIBUTE = 57985
const SECONDARY_LOAD = 57986
const SECONDARY_UNLOAD = 57987
const SIMPLE = 57988
const SKIP = 57989
const SRID = 57990
const THREAD_PRIORITY = 57991
const TIES = 57992
const UNBOUNDED = 57993
const VCPU = 57994
const VISIBLE = 57995
const RETURNING = 57996
const FORMAT_BYTES = 57997
const FORMAT_PICO_TIME = 57998
const PS_CURRENT_THREAD_ID = 57999
const PS_THREAD_ID = 58000
const GTID_SUBSET = 58001
const GTID_SUBTRACT = 58002
const WAIT_FOR_EXECUTED_GTID_SET = 58003
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58004
const FORMAT = 58005
const TREE = 58006
const VITESS = 58007
const TRADITIONAL = 58008
const VTEXPLAIN = 58009
const VEXPLAIN = 58010
const PLAN = 58011
const LOCAL = 58012
const LOW_PRIORITY = 58013
const NO_WRITE_TO_BINLOG = 58014
const LOGS = 58015
const ERROR = 58016
const GENERAL = 58017
const HOSTS = 58018
const OPTIMIZER_COSTS = 58019
const USER_RESOURCES = 58020
const SLOW = 58021
const CHANNEL = 58022
const RELAY = 58023
const EXPORT = 58024
const CURRENT = 58025
const ROW = 58026
const ROWS = 58027
const AVG_ROW_LENGTH = 58028
const CONNECTION = 58029
const CHECKSUM = 58030
const DELAY_KEY_WRITE = 58031
const ENCRYPTION = 58032
const ENGINE = 58033
const INSERT_METHOD = 58034
const MAX_ROWS = 58035
const MIN_ROWS = 58036
const PACK_KEYS = 58037
const PASSWORD = 58038
const FIXED = 58039
const DYNAMIC = 58040
const COMPRESSED = 58041
const REDUNDANT = 58042
const COMPACT = 58043
const ROW_FORMAT = 58044
const STATS_AUTO_RECALC = 58045
const STATS_PERSISTENT = 58046
const STATS_SAMPLE_PAGES = 58047
const STORAGE = 58048
const MEMORY = 58049
const DISK = 58050
const PARTITIONS = 58051
const LINEAR = 58052
const RANGE = 58053
const LIST = 58054
const SUBPARTITION = 58055
const SUBPARTITIONS = 58056
const HASH = 58057

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"EXCEPT",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"ILIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	14, 51,
	15, 51,
	-2, 40,
	-1, 52,
	1, 163,
	733, 163,
	-2, 171,
	-1, 53,
	137, 171,
	180, 171,
	349, 171,
	-2, 527,
	-1, 61,
	37, 776,
	243, 776,
	254, 776,
	289, 790,
	290, 790,
	-2, 778,
	-1, 66,
	245, 814,
	-2, 812,
	-1, 124,
	242, 1595,
	-2, 137,
	-1, 126,
	1, 164,
	733, 164,
	-2, 171,
	-1, 137,
	138, 412,
	248, 412,
	-2, 516,
	-1, 156,
	137, 171,
	180, 171,
	349, 171,
	-2, 536,
	-1, 735,
	166, 41,
	-2, 45,
	-1, 941,
	88, 1612,
	-2, 1466,
	-1, 942,
	88, 1613,
	225, 1617,
	-2, 1467,
	-1, 943,
	225, 1616,
	-2, 42,
	-1, 1027,
	61, 890,
	-2, 905,
	-1, 1117,
	253, 43,
	258, 43,
	-2, 423,
	-1, 1202,
	1, 584,
	733, 584,
	-2, 171,
	-1, 1506,
	225, 1617,
	-2, 1467,
	-1, 1717,
	61, 891,
	-2, 910,
	-1, 1718,
	61, 892,
	-2, 911,
	-1, 1769,
	137, 171,
	180, 171,
	349, 171,
	-2, 462,
	-1, 1850,
	138, 412,
	248, 412,
	-2, 516,
	-1, 1859,
	253, 44,
	258, 44,
	-2, 424,
	-1, 2298,
	225, 1621,
	-2, 1615,
	-1, 2299,
	225, 1617,
	-2, 1613,
	-1, 2399,
	137, 171,
	180, 171,
	349, 171,
	-2, 463,
	-1, 2406,
	27, 192,
	-2, 194,
	-1, 2861,
	79, 102,
	89, 102,
	-2, 969,
	-1, 2930,
	708, 700,
	-2, 674,
	-1, 3139,
	51, 1563,
	-2, 1557,
	-1, 3954,
	708, 700,
	-2, 688,
	-1, 4041,
	91, 632,
	96, 632,
	106, 632,
	182, 632,
	183, 632,
	184, 632,
	185, 632,
	186, 632,
	187, 632,
	188, 632,
	189, 632,
	190, 632,
	191, 632,
	192, 632,
	193, 632,
	194, 632,
	195, 632,
	196, 632,
	197, 632,
	198, 632,
	199, 632,
	200, 632,
	201, 632,
	202, 632,
	203, 632,
	204, 632,
	205, 632,
	206, 632,
	207, 632,
	208, 632,
	209, 632,
	210, 632,
	211, 632,
	212, 632,
	213, 632,
	214, 632,
	215, 632,
	216, 632,
	217, 632,
	218, 632,
	219, 632,
	220, 632,
	221, 632,
	222, 632,
	223, 632,
	-2, 1985,
}

const yyPrivate = 57344

const yyLast = 56444

var yyAct = [...]int{
	957, 3616, 952, 87, 3615, 2104, 4116, 3935, 3617, 3291,
	4129, 945, 3567, 4083, 944, 2092, 4084, 3191, 2327, 4008,
	2396, 3919, 3420, 4039, 3249, 3198, 3844, 3254, 1267, 3240,
	3152, 3917, 3251, 3250, 3248, 3253, 2033, 3252, 3554, 5,
	1269, 2329, 1772, 1978, 3269, 2757, 3092, 3206, 2470, 739,
	3268, 3156, 3153, 3465, 3459, 3654, 2995, 4020, 3140, 734,
	906, 766, 905, 2821, 3271, 2367, 1732, 2895, 3150, 3985,
	1828, 3451, 2975, 2433, 3297, 2927, 2458, 2438, 2351, 2896,
	3485, 910, 2370, 2897, 42, 165, 1025, 2501, 87, 1079,
	2384, 1875, 1044, 41, 2372, 1022, 1149, 2846, 2827, 1719,
	2371, 2813, 2797, 2250, 2294, 2088, 2282, 1025, 1025, 2249,
	43, 2127, 2479, 2041, 2967, 1857, 151, 2457, 2359, 2518,
	2440, 2888, 1112, 1107, 1089, 1761, 733, 2863, 1741, 2834,
	100, 2374, 1696, 1518, 2131, 104, 2061, 2347, 105, 1444,
	1429, 1974, 1864, 1086, 1083, 749, 1118, 3155, 2455, 1956,
	1087, 2429, 2430, 1113, 1114, 1125, 1760, 1064, 1746, 1066,
	1034, 1502, 1115, 1478, 2158, 99, 2032, 1024, 736, 1028,
	3649, 1043, 2352, 108, 3907, 2795, 744, 2139, 1258, 1031,
	2295, 1029, 85, 2200, 1985, 129, 1823, 169, 1046, 1048,
	1019, 127, 1849, 1198, 134, 135, 907, 128, 1030, 1059,
	1032, 743, 1522, 93, 1265, 98, 1244, 4117, 3555, 3237,
	84, 3970, 1527, 2472, 2473, 2474, 737, 724, 2472, 107,
	106, 2950, 2949, 2516, 2918, 1054, 1058, 1941, 3547, 1018,
	1037, 4066, 2983, 2984, 669, 3965, 3966, 3971, 1692, 2048,
	130, 3510, 1154, 2047, 1080, 2046, 136, 2324, 2325, 2045,
	1151, 2044, 2043, 2016, 1214, 727, 4060, 728, 2793, 3136,
	3096, 4139, 4082, 1168, 1169, 1170, 1038, 1173, 1174, 1175,
	1176, 2563, 4107, 1179, 1180, 1181, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	725, 1074, 2, 3425, 1129, 1073, 1023, 1440, 4087, 2505,
	4122, 1128, 3944, 1104, 1021, 1020, 95, 2920, 3620, 3620,
	1045, 1047, 1103, 729, 130, 1096, 1162, 1091, 1102, 1215,
	1155, 1158, 1159, 4070, 1101, 4121, 709, 709, 2823, 3424,
	95, 95, 3259, 4068, 1461, 3966, 911, 113, 114, 115,
	2943, 118, 1171, 2504, 124, 3920, 2758, 193, 4069, 2064,
	663, 2053, 1017, 3317, 703, 1072, 1076, 909, 4067, 1072,
	1076, 909, 722, 723, 3259, 1726, 3840, 3839, 1153, 1152,
	4097, 703, 1012, 1013, 1014, 1015, 2940, 3256, 192, 1027,
	3560, 3850, 130, 3561, 961, 962, 963, 4064, 3257, 3579,
	1431, 86, 2572, 3568, 4009, 3619, 3619, 1105, 4017, 2498,
	703, 3849, 2097, 131, 703, 86, 95, 4044, 3337, 1061,
	1062, 1838, 3188, 3189, 3263, 700, 174, 961, 962, 963,
	3257, 86, 2391, 2392, 3578, 2503, 1251, 2872, 1253, 2837,
	2871, 2025, 2026, 2873, 4021, 1762, 2794, 1763, 3187, 2982,
	3667, 2569, 2390, 2966, 1239, 1240, 3263, 1222, 1234, 1262,
	4049, 1010, 1223, 1009, 2838, 3936, 1222, 2570, 2884, 2877,
	1221, 1223, 1220, 685, 1981, 2921, 1250, 1252, 4047, 95,
	3293, 1458, 171, 1459, 1460, 172, 683, 4053, 4054, 2409,
	2408, 1235, 703, 95, 1228, 86, 3208, 3209, 88, 1100,
	3325, 1207, 1208, 4048, 3323, 3949, 703, 703, 191, 95,
	3030, 703, 2830, 2831, 2561, 2024, 717, 2028, 1758, 1197,
	721, 4025, 1441, 2449, 3298, 715, 680, 2326, 2968, 1700,
	2928, 1931, 2953, 1210, 2480, 695, 1962, 2519, 3891, 3260,
	3892, 1957, 2524, 2539, 3286, 2540, 2443, 2541, 4119, 1172,
	690, 2355, 3287, 1255, 4025, 2355, 1260, 1098, 1241, 4088,
	693, 3549, 1430, 1237, 1238, 1243, 1203, 2970, 1242, 3548,
	2542, 3260, 3294, 95, 1261, 1932, 704, 1933, 1178, 1177,
	4089, 2483, 1248, 2957, 2958, 1236, 1249, 2523, 1229, 1127,
	3295, 2521, 1065, 704, 3824, 3624, 1254, 2525, 2368, 3545,
	1138, 1136, 2564, 2565, 2567, 2566, 3207, 4094, 1108, 1109,
	1147, 1982, 1109, 2167, 1146, 1145, 1144, 1143, 3210, 1142,
	1141, 1247, 704, 175, 1140, 1135, 704, 1703, 670, 2522,
	672, 686, 181, 706, 1842, 705, 676, 1479, 674, 678,
	687, 679, 3210, 673, 4140, 684, 1148, 1084, 675, 688,
	689, 692, 696, 697, 698, 694, 691, 1120, 682, 707,
	3314, 4061, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488,
	1487, 1489, 1490, 1493, 1493, 3031, 1975, 3095, 2531, 2527,
	2529, 2530, 2528, 2532, 2533, 1099, 1075, 1069, 1067, 3462,
	1075, 1069, 1067, 1126, 1084, 2456, 2442, 1060, 1082, 1120,
	1123, 1124, 2971, 1084, 704, 2509, 2508, 1117, 1121, 3230,
	1266, 2159, 1266, 1266, 3544, 1971, 2161, 1084, 704, 704,
	2166, 2162, 1121, 704, 2163, 2164, 2165, 1432, 1116, 2160,
	2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 4062,
	1836, 1165, 2952, 2353, 2354, 1759, 1835, 2353, 2354, 1834,
	1139, 1137, 1965, 2938, 1963, 1964, 166, 1966, 1967, 2988,
	2987, 1972, 1025, 1503, 1508, 1509, 1832, 1512, 1514, 1515,
	1516, 1517, 2922, 1520, 1521, 1523, 1523, 667, 1523, 1523,
	1528, 1528, 1528, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637,
	1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1648, 1649, 1650, 1651, 1652, 3943, 1256, 1500, 2502, 1653,
	2919, 1655, 1656, 1657, 1658, 1659, 1423, 1424, 1943, 1942,
	1944, 1945, 1946, 1528, 1528, 1528, 1528, 1528, 1528, 958,
	2955, 708, 3508, 3509, 1106, 1422, 1513, 3577, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
	1678, 1679, 701, 958, 958, 1493, 89, 2886, 2571, 1504,
	1068, 1445, 1493, 1863, 1068, 4023, 662, 702, 1439, 1693,
	1445, 94, 1496, 1497, 1498, 1499, 3618, 3618, 1524, 2942,
	1525, 1526, 1510, 192, 4052, 94, 2570, 2996, 3463, 1209,
	1232, 1206, 167, 1529, 1530, 4133, 1201, 4022, 4023, 179,
	1218, 94, 1224, 1225, 1226, 1227, 3261, 3262, 131, 2974,
	1219, 3408, 2500, 1095, 1961, 1725, 1097, 2798, 2800, 3265,
	1127, 174, 1699, 2941, 2446, 3932, 1263, 1264, 4051, 3499,
	4022, 1025, 1025, 3481, 1494, 1495, 1025, 1157, 3261, 3262,
	187, 2586, 1025, 1120, 1164, 2868, 2833, 1156, 2585, 1690,
	2965, 3265, 2770, 2964, 2100, 1750, 1654, 1212, 3104, 3103,
	126, 1691, 2397, 2447, 2828, 94, 668, 1493, 1490, 1455,
	2445, 2998, 3186, 1862, 2597, 3315, 1245, 171, 1455, 1127,
	172, 1726, 2140, 168, 173, 170, 176, 177, 178, 180,
	182, 183, 184, 185, 1986, 1472, 2141, 1040, 121, 186,
	188, 189, 190, 191, 2448, 1485, 1486, 1488, 1487, 1489,
	1490, 1259, 1707, 1709, 2444, 3957, 1100, 1713, 1092, 1150,
	1217, 3540, 3475, 1024, 1126, 1094, 1093, 1711, 3016, 1691,
	1712, 104, 2520, 2037, 105, 1660, 1661, 1662, 1663, 1664,
	1665, 3008, 3007, 3006, 2132, 1968, 3000, 1764, 3004, 2911,
	2999, 1697, 2997, 2977, 1100, 1196, 1127, 3002, 2976, 4098,
	2132, 2597, 2606, 3194, 1684, 1958, 3001, 1959, 1460, 108,
	1960, 122, 1459, 1460, 1098, 3663, 2977, 1451, 1127, 3515,
	1443, 2976, 1461, 1126, 3003, 3005, 1451, 2799, 3514, 1120,
	1123, 1124, 2487, 1084, 1872, 2497, 1231, 1117, 1121, 1461,
	1871, 1705, 1861, 2495, 1138, 1728, 4141, 1233, 3195, 2499,
	1461, 1839, 1840, 1841, 1136, 1855, 4090, 4131, 175, 1200,
	4132, 3500, 4130, 1127, 1710, 1246, 1036, 181, 2138, 1739,
	4135, 1461, 3197, 1926, 1706, 1708, 1694, 1877, 1848, 1878,
	3832, 1880, 1882, 1987, 1731, 1886, 1888, 1890, 1892, 1894,
	3192, 1867, 1023, 1021, 1020, 1202, 2360, 2361, 3987, 1908,
	1126, 2492, 1163, 1980, 1216, 1266, 1160, 1951, 3208, 3209,
	1949, 1755, 1756, 2492, 3574, 3193, 3575, 1866, 1916, 1917,
	3925, 2287, 1126, 3831, 1922, 1923, 3822, 1130, 1120, 1865,
	1865, 2066, 1132, 4142, 1831, 1738, 1133, 1131, 3590, 1938,
	2496, 3589, 1099, 3988, 1726, 2067, 2068, 1491, 1492, 2065,
	3199, 2137, 2494, 1845, 1858, 1846, 1844, 1134, 3522, 1458,
	3521, 1459, 1460, 3511, 1199, 3926, 3238, 1126, 3018, 1714,
	3226, 1950, 1130, 1120, 1948, 1869, 1458, 1132, 1459, 1460,
	1099, 1133, 1131, 2893, 2055, 2057, 2058, 1458, 1912, 1459,
	1460, 166, 2892, 2891, 1479, 2452, 1952, 1474, 1936, 1475,
	1935, 1976, 1904, 1937, 1934, 1907, 1924, 1909, 1458, 2056,
	1459, 1460, 1918, 1476, 1477, 1491, 1492, 1473, 3207, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1488, 1487, 1489, 1490,
	3210, 2576, 2577, 2578, 961, 962, 963, 1915, 1103, 1837,
	130, 1914, 1913, 1884, 1102, 1704, 3505, 709, 1735, 3290,
	1101, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1487,
	1489, 1490, 2875, 709, 709, 1992, 2468, 2467, 2466, 2465,
	2464, 2463, 1266, 1266, 4091, 1426, 1461, 1988, 1989, 2124,
	1461, 111, 112, 1758, 2014, 1461, 87, 2819, 4118, 87,
	3952, 1993, 3951, 110, 1736, 109, 3332, 2641, 2000, 2001,
	2002, 1483, 1484, 1485, 1486, 1488, 1487, 1489, 1490, 2013,
	1450, 1447, 1448, 1449, 1454, 1456, 1453, 1461, 1452, 1450,
	1447, 1448, 1449, 1454, 1456, 1453, 3929, 1452, 1446, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1463, 1446, 4078, 1726,
	1457, 1726, 1726, 1461, 2819, 4016, 3196, 2095, 2095, 1481,
	1482, 1483, 1484, 1485, 1486, 1488, 1487, 1489, 1490, 2093,
	2093, 2096, 1726, 1726, 3945, 4103, 1726, 42, 2819, 3995,
	42, 1726, 2819, 3991, 2059, 3978, 1726, 2116, 2105, 2106,
	2107, 2108, 2118, 2109, 2110, 2111, 2123, 2119, 2112, 2113,
	2120, 2121, 2122, 2114, 2115, 2117, 3558, 3942, 1990, 3928,
	101, 1461, 4101, 1726, 3858, 1994, 2178, 1996, 1997, 1998,
	1999, 102, 3927, 1458, 2003, 1459, 1460, 1458, 3827, 1459,
	1460, 3811, 1458, 3810, 1459, 1460, 2015, 167, 4031, 1726,
	101, 1461, 2643, 3857, 179, 2287, 1461, 103, 3662, 2284,
	3660, 102, 1457, 1726, 1461, 3586, 1690, 1689, 2286, 3835,
	1726, 1461, 2819, 3823, 1458, 2038, 1459, 1460, 1691, 2633,
	1688, 1687, 956, 3519, 1461, 85, 1726, 3815, 85, 2063,
	1461, 3558, 1726, 3814, 2593, 187, 2021, 2022, 2819, 3556,
	1458, 1461, 1459, 1460, 3504, 3299, 4029, 1726, 2069, 2492,
	1726, 3479, 1726, 2603, 2070, 3296, 1726, 2073, 2074, 2075,
	2076, 2077, 2078, 2080, 2082, 2083, 2084, 2085, 2086, 2087,
	2725, 1726, 1461, 3229, 3228, 2099, 4027, 1726, 168, 173,
	170, 176, 177, 178, 180, 182, 183, 184, 185, 3904,
	1726, 1461, 2902, 2296, 186, 188, 189, 190, 1458, 2595,
	1459, 1460, 1461, 2071, 2072, 2298, 2126, 2128, 2297, 2594,
	1504, 3219, 3218, 3216, 3217, 3902, 1726, 2283, 3214, 3215,
	2142, 2143, 2144, 2145, 2177, 2889, 2602, 2133, 1458, 2864,
	1459, 1460, 1686, 1458, 2156, 1459, 1460, 3214, 3213, 2192,
	2552, 1458, 2864, 1459, 1460, 3200, 1461, 2551, 1458, 3204,
	1459, 1460, 2843, 1726, 2570, 2951, 3203, 3899, 1726, 1461,
	2815, 1458, 2514, 1459, 1460, 1461, 2376, 1458, 2513, 1459,
	1460, 2301, 2302, 1827, 2932, 103, 3881, 1726, 1458, 2350,
	1459, 1460, 1461, 2285, 2925, 2926, 3566, 3450, 1726, 2296,
	3205, 2332, 2865, 104, 103, 3201, 105, 2819, 2818, 2929,
	3202, 2298, 2867, 2406, 2365, 2865, 2017, 2190, 1983, 1458,
	1947, 1459, 1460, 111, 112, 2570, 104, 2201, 1939, 105,
	2062, 2599, 1726, 2098, 1726, 110, 1929, 109, 1458, 2343,
	1459, 1460, 1726, 2599, 1925, 2907, 103, 1921, 1089, 1458,
	1920, 1459, 1460, 1919, 3443, 1726, 2300, 2378, 1737, 2303,
	2304, 4092, 2835, 1726, 1827, 1826, 1770, 1769, 2410, 1257,
	2411, 2412, 2413, 2414, 110, 2400, 1461, 2319, 3940, 1037,
	2401, 1089, 2415, 2416, 2417, 2418, 2421, 2422, 2423, 2424,
	2382, 2835, 2842, 1458, 3474, 1459, 1460, 2274, 2275, 2276,
	2277, 2278, 2337, 2331, 2338, 1726, 1458, 3151, 1459, 1460,
	3181, 2345, 1458, 2404, 1459, 1460, 2435, 2342, 3474, 1457,
	2570, 2481, 2405, 2441, 2493, 3476, 2363, 3983, 3956, 1458,
	2819, 1459, 1460, 2843, 2843, 2387, 2388, 2386, 3429, 3216,
	3124, 2389, 3523, 1457, 2403, 2402, 1479, 2843, 2986, 2599,
	1074, 2725, 2321, 2630, 1073, 2629, 2492, 2475, 2201, 1461,
	2358, 3440, 1726, 3474, 2478, 1730, 2322, 2451, 2098, 1461,
	2039, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488, 1487,
	1489, 1490, 2492, 86, 44, 45, 88, 2023, 2436, 2425,
	2427, 2428, 2432, 3524, 3525, 3526, 1970, 2486, 2450, 1757,
	2489, 2454, 2490, 92, 1461, 1111, 2462, 48, 76, 77,
	1110, 74, 78, 1458, 1026, 1459, 1460, 2506, 1461, 95,
	75, 4057, 3998, 2436, 2485, 2484, 2488, 3846, 1461, 1129,
	1733, 3812, 3674, 3539, 3536, 3517, 1128, 1479, 2510, 1865,
	3241, 2507, 2511, 2512, 3438, 1726, 1461, 3342, 3341, 62,
	1479, 1461, 2584, 3292, 3853, 1727, 1729, 1829, 2434, 1900,
	2645, 95, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1488,
	1487, 1489, 1490, 3288, 2575, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1488, 1487, 1489, 1490, 1461, 3243, 2517, 3400,
	1726, 3239, 95, 1461, 1479, 2933, 1458, 2431, 1459, 1460,
	1514, 2426, 1514, 3398, 1726, 2420, 1458, 83, 1459, 1460,
	1901, 1902, 1903, 3394, 1726, 2419, 1954, 1860, 2589, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1488, 1487, 1489, 1490,
	4113, 3391, 1726, 1856, 2545, 1461, 3389, 1726, 1825, 123,
	2899, 1458, 1461, 1459, 1460, 3527, 1201, 3847, 1896, 2592,
	3486, 3487, 2898, 2449, 2335, 1458, 2019, 1459, 1460, 4111,
	1461, 2298, 4085, 3964, 2297, 1458, 3886, 1459, 1460, 3489,
	3235, 3387, 1726, 3234, 1461, 3233, 3151, 2912, 3385, 1726,
	2546, 1461, 3173, 1458, 2560, 1459, 1460, 3174, 1458, 3492,
	1459, 1460, 3528, 3529, 3530, 1897, 1898, 1899, 1461, 2568,
	2899, 3491, 51, 54, 57, 56, 59, 3170, 73, 3171,
	3169, 82, 79, 3175, 3172, 2852, 2853, 3960, 2020, 3848,
	3383, 1726, 2579, 1458, 1461, 1459, 1460, 3381, 1726, 2349,
	1458, 2063, 1459, 1460, 1734, 61, 91, 90, 1461, 2341,
	71, 72, 58, 3480, 3129, 3379, 1726, 3128, 80, 81,
	2848, 2851, 2852, 2853, 2849, 2580, 2850, 2854, 2583, 3377,
	1726, 3467, 3644, 3924, 3643, 3653, 3375, 1726, 2587, 3466,
	2588, 3655, 1458, 3470, 1459, 1460, 3138, 1969, 1008, 1458,
	1461, 1459, 1460, 3373, 1726, 2605, 1461, 2903, 3212, 2882,
	63, 64, 2140, 65, 66, 67, 68, 1458, 1461, 1459,
	1460, 1167, 1166, 3307, 2581, 2582, 2141, 2898, 1461, 3371,
	1726, 1458, 3642, 1459, 1460, 2590, 1461, 2769, 1458, 1041,
	1459, 1460, 2980, 3369, 1726, 101, 1425, 1042, 2554, 2555,
	101, 2939, 103, 2557, 3472, 1458, 102, 1459, 1460, 2639,
	131, 102, 2558, 4127, 3141, 3143, 1461, 2360, 2361, 2801,
	103, 3231, 2549, 3144, 60, 1461, 2095, 4036, 3941, 3842,
	1461, 1458, 3211, 1459, 1460, 3367, 1726, 1025, 2093, 2804,
	2856, 3365, 1726, 2346, 1053, 1458, 3452, 1459, 1460, 1479,
	1461, 109, 2538, 3363, 1726, 1461, 1051, 1052, 2840, 2841,
	1461, 3127, 2802, 3361, 1726, 2537, 2536, 2376, 2612, 3126,
	1025, 2860, 3819, 2535, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1488, 1487, 1489, 1490, 2627, 2534, 1458, 1461, 1459,
	1460, 2574, 2062, 1458, 2839, 1459, 1460, 111, 112, 3912,
	3911, 3347, 1726, 3889, 3661, 1458, 3659, 1459, 1460, 110,
	3330, 1726, 3658, 3651, 89, 1458, 3541, 1459, 1460, 2820,
	111, 112, 3537, 1458, 3471, 1459, 1460, 3469, 3244, 2476,
	1843, 1050, 110, 2816, 109, 2790, 1726, 1461, 110, 42,
	2788, 1726, 3650, 2829, 1697, 2792, 2894, 3460, 2857, 2858,
	2805, 2859, 2807, 1458, 2835, 1459, 1460, 3628, 1461, 2815,
	1691, 3032, 1458, 2812, 1459, 1460, 2631, 1458, 1461, 1459,
	1460, 4115, 4114, 2763, 1726, 2878, 1461, 2832, 2333, 1751,
	2885, 2887, 2817, 1743, 2937, 2862, 1461, 1458, 4114, 1459,
	1460, 4115, 1458, 1461, 1459, 1460, 3, 1458, 3930, 1459,
	1460, 2866, 3503, 111, 112, 2869, 2441, 116, 117, 97,
	1039, 1, 2876, 2036, 2879, 110, 10, 109, 1016, 2135,
	1428, 2948, 3494, 94, 2136, 1458, 103, 1459, 1460, 2901,
	2034, 1427, 2890, 9, 2904, 2905, 1461, 2035, 3507, 4046,
	8, 681, 2323, 2740, 1726, 1695, 4086, 4042, 4043, 1940,
	2900, 1930, 2124, 2732, 1726, 3569, 2248, 3843, 3247, 1461,
	2196, 3445, 2908, 2482, 2909, 3535, 2439, 2913, 2914, 2915,
	1119, 2723, 1726, 2945, 1458, 156, 1459, 1460, 2721, 1726,
	2398, 2399, 1848, 2992, 2993, 4011, 1461, 120, 1077, 119,
	1122, 1230, 1461, 2934, 2935, 1458, 1461, 1459, 1460, 2477,
	3559, 1461, 2883, 2407, 2924, 1458, 1776, 1459, 1460, 2944,
	1774, 1775, 1773, 1458, 1778, 1459, 1460, 1777, 1461, 3316,
	2632, 2708, 1726, 1458, 1461, 1459, 1460, 3407, 70, 1461,
	1458, 2027, 1459, 1460, 2989, 1461, 716, 2855, 710, 194,
	2280, 3009, 2969, 1461, 2706, 1726, 1765, 1744, 3421, 2972,
	2116, 2105, 2106, 2107, 2108, 2118, 2109, 2110, 2111, 2123,
	2119, 2112, 2113, 2120, 2121, 2122, 2114, 2115, 2117, 1161,
	2313, 2704, 1726, 1458, 671, 1459, 1460, 2702, 1726, 3220,
	2515, 2700, 1726, 677, 1511, 1461, 3441, 1727, 2320, 2018,
	3125, 3010, 2870, 1461, 1071, 2946, 1458, 1063, 1459, 1460,
	2334, 3013, 2806, 2698, 1726, 1070, 3820, 3159, 3464, 2696,
	1726, 3137, 3139, 2822, 2694, 1726, 1461, 3142, 3135, 3923,
	2692, 1726, 1461, 1458, 2344, 1459, 1460, 3652, 3406, 1458,
	3996, 1459, 1460, 1458, 2880, 1459, 1460, 1740, 1458, 3034,
	1459, 1460, 3428, 2604, 2130, 1501, 2375, 3623, 2994, 3090,
	2978, 2054, 741, 2979, 1461, 1458, 3011, 1459, 1460, 740,
	738, 1458, 2808, 1459, 1460, 2836, 1458, 1464, 1459, 1460,
	2690, 1726, 1458, 946, 1459, 1460, 1724, 1720, 2688, 1726,
	1458, 2796, 1459, 1460, 1752, 2847, 2845, 2844, 1461, 3108,
	2547, 1721, 2990, 2991, 2383, 3488, 3097, 3484, 4038, 3099,
	2377, 2686, 1726, 2373, 2814, 897, 2376, 3402, 3025, 896,
	1461, 750, 2283, 742, 2283, 1461, 2339, 2340, 1723, 3070,
	1722, 732, 1458, 1461, 1459, 1460, 2453, 3012, 895, 3158,
	1458, 87, 1459, 1460, 2376, 2376, 2376, 2376, 2376, 2684,
	1726, 3080, 3081, 3082, 3083, 3084, 894, 3274, 3275, 2954,
	3289, 2956, 3108, 1458, 2376, 1459, 1460, 2376, 3098, 1458,
	3100, 1459, 1460, 3163, 3107, 2848, 2851, 2852, 2853, 2849,
	3180, 2850, 2854, 2682, 1726, 3486, 3487, 2881, 2285, 1461,
	2285, 3285, 1442, 3123, 1716, 726, 1461, 2378, 3132, 3119,
	1090, 1458, 3313, 1459, 1460, 2680, 1726, 3947, 2573, 1980,
	2678, 1726, 1461, 3336, 3130, 1715, 3133, 3954, 2676, 1726,
	3255, 3553, 1028, 3145, 3146, 2378, 2378, 2378, 2378, 2378,
	3236, 3264, 2930, 3162, 1029, 1458, 2469, 1459, 1460, 3165,
	3166, 3272, 3168, 3131, 3164, 2378, 3182, 3167, 2378, 3183,
	104, 1030, 3176, 105, 3120, 3121, 3122, 1458, 3184, 1459,
	1460, 69, 1458, 3190, 1459, 1460, 46, 3072, 3918, 3074,
	1458, 1461, 1459, 1460, 2674, 1726, 1461, 3223, 3984, 889,
	3222, 3339, 3221, 886, 1461, 3085, 3086, 3087, 3088, 3625,
	3626, 1461, 3627, 3093, 3094, 3224, 3225, 2669, 1726, 3967,
	3968, 3276, 3273, 3277, 885, 3969, 3148, 2185, 1438, 2441,
	3266, 1461, 1435, 4059, 2029, 3245, 96, 36, 35, 34,
	3283, 33, 32, 26, 25, 24, 1458, 1461, 1459, 1460,
	23, 22, 1461, 1458, 3154, 1459, 1460, 1461, 29, 3154,
	19, 3303, 21, 20, 3300, 3302, 3310, 18, 3258, 1458,
	4081, 1459, 1460, 4126, 125, 55, 2665, 1726, 52, 50,
	133, 2663, 1726, 132, 53, 49, 1204, 3318, 3319, 3338,
	3320, 3267, 47, 3322, 3321, 3324, 3335, 3326, 31, 30,
	17, 16, 15, 14, 13, 12, 11, 7, 6, 39,
	38, 37, 28, 27, 40, 4, 2656, 1726, 2917, 2471,
	0, 0, 1514, 0, 0, 2591, 1514, 0, 1458, 2596,
	1459, 1460, 2786, 1458, 0, 1459, 1460, 2654, 1726, 0,
	0, 1458, 2785, 1459, 1460, 3246, 0, 0, 1458, 0,
	1459, 1460, 2600, 0, 2601, 0, 0, 0, 3423, 2608,
	0, 0, 0, 2610, 2611, 3427, 0, 0, 1458, 0,
	1459, 1460, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624,
	2625, 2626, 0, 2628, 1458, 0, 1459, 1460, 0, 1458,
	0, 1459, 1460, 0, 1458, 3157, 1459, 1460, 0, 0,
	0, 0, 2376, 0, 0, 0, 2634, 2635, 2636, 2637,
	2638, 1461, 2640, 3453, 3454, 3501, 2642, 0, 3468, 3461,
	2647, 2648, 0, 2649, 3311, 3312, 2652, 0, 2653, 2655,
	2657, 2658, 2659, 2660, 2661, 2662, 2664, 2666, 2667, 2668,
	2670, 3473, 2672, 2673, 2675, 2677, 2679, 2681, 2683, 2685,
	2687, 2689, 2691, 2693, 2695, 2697, 2699, 2701, 2703, 2705,
	2707, 2709, 2710, 2711, 3493, 2713, 3495, 2715, 3490, 2717,
	2718, 3456, 2720, 2722, 2724, 3276, 3273, 3277, 2727, 3502,
	3458, 0, 2731, 2378, 3496, 1461, 2736, 2737, 2738, 2739,
	3430, 1461, 3432, 3433, 3434, 0, 2781, 1461, 0, 2750,
	2751, 2752, 2753, 2754, 2755, 1461, 0, 2759, 2760, 1461,
	3563, 3564, 3518, 3483, 3520, 2762, 0, 0, 3305, 3306,
	2768, 3512, 3513, 0, 1461, 0, 2771, 2772, 2773, 2774,
	2775, 1461, 3497, 3498, 0, 0, 0, 2782, 2783, 0,
	2784, 1461, 0, 2787, 2789, 2344, 0, 2791, 1458, 0,
	1459, 1460, 0, 1461, 0, 0, 0, 2803, 0, 0,
	0, 0, 0, 0, 0, 1461, 0, 0, 0, 1461,
	2780, 3565, 0, 0, 3546, 0, 2779, 0, 3550, 3551,
	3552, 1461, 2778, 0, 0, 0, 0, 0, 0, 0,
	2777, 0, 0, 0, 2776, 0, 0, 1461, 0, 0,
	0, 3542, 3543, 1461, 0, 0, 0, 0, 0, 2767,
	0, 0, 0, 1461, 0, 0, 2766, 0, 3581, 0,
	0, 0, 1458, 0, 1459, 1460, 2765, 0, 1458, 0,
	1459, 1460, 0, 0, 1458, 0, 1459, 1460, 2764, 1461,
	0, 0, 1458, 0, 1459, 1460, 1458, 1461, 1459, 1460,
	2761, 0, 0, 0, 2756, 0, 3631, 0, 3632, 3633,
	3634, 1458, 0, 1459, 1460, 0, 2749, 0, 1458, 0,
	1459, 1460, 3641, 1461, 3645, 3646, 0, 0, 1458, 0,
	1459, 1460, 2748, 0, 0, 3621, 0, 0, 2747, 1461,
	1458, 0, 1459, 1460, 3647, 0, 1461, 3158, 2746, 87,
	0, 3158, 1458, 0, 1459, 1460, 1458, 0, 1459, 1460,
	1461, 0, 0, 0, 1461, 0, 0, 2095, 1458, 0,
	1459, 1460, 0, 1461, 2745, 0, 0, 0, 3585, 2093,
	3676, 1461, 2744, 3648, 1458, 3668, 1459, 1460, 3657, 3656,
	1458, 0, 1459, 1460, 0, 1461, 0, 3664, 3666, 0,
	1458, 0, 1459, 1460, 0, 0, 1724, 1720, 2743, 0,
	0, 0, 0, 0, 0, 0, 3826, 0, 0, 0,
	0, 1721, 0, 3680, 2742, 0, 1458, 0, 1459, 1460,
	42, 2741, 0, 0, 1458, 0, 1459, 1460, 0, 0,
	0, 0, 0, 0, 0, 2735, 1717, 1718, 1723, 2734,
	1722, 0, 0, 0, 0, 0, 3818, 3817, 2733, 0,
	1458, 0, 1459, 1460, 3833, 0, 2730, 3845, 3816, 0,
	0, 0, 0, 3838, 3837, 0, 1458, 0, 1459, 1460,
	2729, 0, 0, 1458, 0, 1459, 1460, 3883, 3020, 3021,
	3022, 3023, 3024, 2095, 3884, 3677, 3678, 1458, 3670, 1459,
	1460, 1458, 0, 1459, 1460, 2093, 3887, 0, 3029, 0,
	1458, 3612, 1459, 1460, 3828, 3829, 3830, 0, 1458, 0,
	1459, 1460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1458, 0, 1459, 1460, 0, 0, 3158, 0,
	0, 3154, 3890, 0, 3672, 0, 3893, 3821, 0, 0,
	0, 0, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569,
	1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579,
	1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589,
	1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599,
	1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609,
	1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619,
	1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1629, 1630,
	1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640,
	1641, 1642, 1643, 1649, 1650, 1651, 1652, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 730, 3934, 3157, 3888, 3931, 1461, 3157, 0, 3916,
	3913, 3914, 0, 3915, 0, 3948, 1461, 0, 0, 0,
	1461, 0, 0, 0, 0, 1698, 0, 0, 0, 0,
	0, 0, 0, 87, 3933, 0, 3160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1461, 0, 0, 0,
	1461, 0, 0, 0, 3178, 0, 0, 0, 3937, 1461,
	3950, 0, 0, 0, 3953, 0, 0, 0, 0, 3955,
	0, 0, 3825, 0, 0, 0, 0, 0, 1461, 0,
	3922, 0, 1461, 0, 665, 0, 0, 0, 0, 0,
	0, 2728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2726, 0, 0, 1011, 2719, 0, 0, 0, 0,
	0, 1049, 0, 0, 42, 1056, 1056, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3973, 3993, 0, 3974,
	0, 2716, 87, 0, 0, 2714, 0, 0, 3982, 0,
	3939, 0, 0, 1458, 2712, 1459, 1460, 0, 1085, 0,
	0, 3989, 0, 1458, 0, 1459, 1460, 1458, 0, 1459,
	1460, 0, 0, 2671, 3999, 0, 0, 2651, 3997, 4002,
	0, 4024, 4007, 4010, 3958, 3845, 4013, 4004, 4003, 4001,
	4006, 3309, 4005, 1458, 0, 1459, 1460, 1458, 0, 1459,
	1460, 0, 0, 0, 3157, 4034, 1458, 0, 1459, 1460,
	0, 4037, 0, 0, 4045, 3327, 3328, 4055, 3329, 0,
	3331, 3333, 4050, 42, 0, 1458, 4063, 1459, 1460, 1458,
	0, 1459, 1460, 4024, 3340, 0, 0, 4076, 0, 3344,
	3345, 3346, 3348, 3349, 3350, 3351, 3352, 3353, 3354, 3355,
	3356, 3357, 3358, 3359, 3360, 3362, 3364, 3366, 3368, 3370,
	3372, 3374, 3376, 3378, 3380, 3382, 3384, 3386, 3388, 3390,
	3392, 3393, 3395, 3396, 3397, 3399, 4096, 4099, 3401, 4065,
	3403, 3404, 3405, 4080, 2095, 3409, 3410, 3411, 3412, 3413,
	3414, 3415, 3416, 3417, 3418, 3419, 2093, 4109, 4112, 4105,
	4110, 4108, 4106, 1980, 3426, 4075, 4095, 0, 3431, 3994,
	4024, 192, 3435, 3436, 1461, 3437, 3439, 4128, 3442, 3444,
	3962, 3446, 3447, 3448, 3449, 4136, 4134, 3154, 3972, 3455,
	1461, 0, 0, 0, 0, 0, 131, 0, 153, 0,
	0, 0, 2095, 0, 0, 4145, 4146, 0, 4144, 174,
	0, 0, 0, 3884, 2093, 4143, 4120, 0, 0, 0,
	0, 3946, 0, 0, 3477, 3478, 0, 0, 3482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 1461, 0, 0, 0, 959, 152, 2287, 1461, 0,
	960, 0, 0, 0, 4071, 4093, 0, 0, 0, 2650,
	2094, 0, 0, 0, 0, 171, 0, 0, 172, 0,
	0, 0, 0, 0, 0, 2646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 140, 141, 163,
	162, 191, 0, 0, 0, 0, 0, 0, 0, 1461,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1458, 0, 1459, 1460, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2644, 1458, 0, 1459,
	1460, 0, 0, 2609, 3557, 0, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1458, 3576,
	1459, 1460, 3580, 0, 2598, 1458, 0, 1459, 1460, 0,
	0, 0, 0, 157, 138, 160, 145, 137, 0, 158,
	159, 0, 0, 0, 0, 0, 175, 0, 0, 3591,
	0, 0, 0, 0, 0, 181, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 147, 142, 143, 144, 148, 1458, 0, 1459, 1460,
	0, 0, 139, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3614, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3622, 0, 0, 0,
	0, 0, 0, 0, 3629, 0, 0, 0, 4079, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2923, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 0, 153, 0, 0, 0, 0, 1205, 0,
	1211, 0, 0, 1213, 174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 152, 0, 1462, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1434, 3834,
	171, 0, 0, 172, 0, 0, 0, 0, 3841, 0,
	0, 0, 0, 1519, 0, 161, 0, 0, 0, 0,
	0, 0, 1851, 1852, 163, 162, 191, 0, 3851, 3852,
	0, 3854, 0, 3855, 3856, 1781, 0, 0, 3859, 3860,
	3861, 3862, 3863, 3864, 3865, 3866, 3867, 3868, 3869, 3870,
	3871, 3872, 3873, 3874, 3875, 3876, 3877, 3878, 3879, 3880,
	0, 3882, 3885, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3894, 3895, 3896,
	3897, 3898, 3900, 3901, 3903, 3905, 3906, 3908, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1794,
	0, 0, 0, 154, 0, 3938, 155, 0, 157, 1853,
	160, 0, 1850, 0, 158, 159, 0, 0, 0, 0,
	0, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 1810, 1811, 1812, 1813, 1814, 1815, 0, 1816,
	1817, 1819, 1820, 1818, 1821, 1822, 1795, 1796, 1797, 1798,
	1779, 1780, 1808, 187, 1782, 0, 1783, 1784, 1785, 1786,
	1787, 1788, 1789, 1790, 1791, 0, 0, 1792, 1799, 1800,
	1801, 1802, 0, 1803, 1804, 1805, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 173, 170, 176,
	177, 178, 180, 182, 183, 184, 185, 0, 0, 0,
	0, 0, 186, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1742, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3963,
	0, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	0, 1830, 0, 0, 0, 0, 1793, 0, 0, 0,
	0, 0, 0, 3979, 1771, 0, 0, 0, 0, 3980,
	3981, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3992, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 942, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4018, 4019, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4026, 4028, 4030, 0, 0, 0, 0, 0, 0,
	0, 0, 1809, 0, 0, 0, 0, 1910, 0, 0,
	0, 0, 0, 0, 0, 0, 4058, 197, 0, 0,
	197, 0, 0, 0, 714, 0, 0, 0, 0, 720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1984,
	197, 0, 1955, 0, 0, 0, 0, 0, 154, 0,
	0, 155, 0, 0, 4077, 0, 197, 0, 0, 0,
	0, 0, 0, 1781, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1991, 0, 0, 0, 0,
	167, 0, 1995, 720, 197, 720, 0, 179, 4100, 4102,
	4104, 0, 0, 2006, 2007, 2008, 2009, 2010, 2011, 2012,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4125, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4137,
	4138, 0, 0, 0, 0, 0, 0, 1794, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 173, 170, 176, 177, 178, 180, 182, 183,
	184, 185, 0, 0, 0, 0, 0, 186, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	1810, 1811, 1812, 1813, 1814, 1815, 0, 1816, 1817, 1819,
	1820, 1818, 1821, 1822, 1795, 1796, 1797, 1798, 1779, 1780,
	1808, 0, 1782, 0, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 0, 0, 1792, 1799, 1800, 1801, 1802,
	0, 1803, 1804, 1805, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2049,
	2050, 2051, 2052, 0, 0, 0, 0, 0, 0, 2042,
	0, 0, 0, 0, 2060, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2101, 2102, 0, 0, 0, 0, 2125, 1056, 1056, 2129,
	0, 0, 0, 2134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2146, 2147,
	2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 0, 2157,
	0, 0, 0, 2179, 2180, 2181, 2182, 2183, 2184, 2186,
	0, 2191, 0, 2193, 2194, 2195, 0, 2197, 2198, 2199,
	0, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210,
	2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220,
	2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230,
	2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240,
	2241, 2242, 2243, 2244, 2245, 2246, 2247, 2251, 2252, 2253,
	2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263,
	2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273,
	1809, 0, 0, 0, 0, 2279, 0, 2281, 0, 2288,
	2289, 2290, 2291, 2292, 2293, 1056, 0, 1056, 1056, 1056,
	1056, 1056, 0, 0, 0, 0, 0, 0, 2305, 2306,
	2307, 2308, 2309, 2310, 2311, 2312, 0, 2314, 2315, 2316,
	2317, 2318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1056, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2356, 2357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2395, 0, 0, 2362,
	0, 0, 0, 0, 0, 0, 0, 2366, 0, 2369,
	0, 0, 2042, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 197, 0, 197, 0, 0, 197,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 153, 0, 2437, 0, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 0, 0,
	0, 720, 95, 720, 720, 959, 0, 0, 0, 947,
	960, 961, 962, 963, 948, 0, 0, 949, 950, 0,
	951, 0, 0, 720, 197, 0, 0, 164, 0, 0,
	0, 0, 0, 152, 956, 964, 965, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 1506, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 1852, 163, 162, 191, 0,
	0, 0, 0, 0, 3278, 3279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 0, 0,
	2042, 0, 0, 0, 0, 0, 0, 2526, 0, 0,
	0, 0, 0, 0, 0, 0, 2543, 2544, 0, 0,
	2548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2553, 0, 0, 0, 0, 0, 0, 2556, 3280,
	157, 1853, 160, 0, 1850, 0, 158, 159, 0, 0,
	0, 0, 0, 175, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 2559, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 0, 3281, 3282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2613, 2614, 2615, 2616, 0, 0,
	0, 197, 0, 0, 0, 720, 720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	912, 0, 0, 0, 0, 0, 916, 1519, 0, 0,
	913, 914, 0, 0, 0, 915, 917, 0, 720, 0,
	0, 197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 720, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 720, 0, 0,
	0, 0, 161, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 720, 720, 0, 720,
	0, 720, 720, 0, 720, 720, 720, 720, 720, 720,
	0, 0, 0, 0, 0, 0, 0, 1506, 0, 0,
	1506, 720, 1506, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 720, 0, 197, 0, 0, 0, 0, 0,
	1742, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	154, 197, 0, 155, 0, 0, 0, 0, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 720, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 2861, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 941, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2910, 0, 699, 0, 0, 0, 0, 0, 719,
	0, 0, 0, 168, 173, 170, 176, 177, 178, 180,
	182, 183, 184, 185, 0, 0, 0, 0, 0, 186,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 719, 0, 719, 0, 2959, 2960, 2961,
	2962, 2963, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 720, 720, 0, 0, 0, 0, 0,
	0, 2042, 2973, 0, 0, 0, 720, 2985, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2981, 0, 0, 0,
	0, 1056, 0, 0, 3014, 3015, 0, 0, 3017, 0,
	0, 3019, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3026, 3027, 3028, 0, 720, 0, 0, 0, 0,
	0, 0, 0, 3033, 0, 1506, 3035, 3036, 3037, 0,
	0, 0, 3038, 3039, 0, 0, 3040, 0, 3041, 0,
	0, 0, 1506, 0, 0, 3042, 0, 3043, 0, 0,
	0, 3044, 0, 3045, 0, 0, 3046, 0, 3047, 0,
	3048, 0, 3049, 0, 3050, 0, 3051, 0, 3052, 0,
	3053, 0, 3054, 0, 3055, 0, 3056, 0, 3057, 0,
	3058, 0, 3059, 0, 3060, 0, 3061, 0, 3062, 0,
	3063, 0, 0, 0, 3064, 0, 3065, 0, 3066, 0,
	0, 3067, 0, 3068, 0, 3069, 0, 2251, 3071, 0,
	0, 3073, 0, 0, 3075, 3076, 3077, 3078, 0, 0,
	0, 0, 3079, 2251, 2251, 2251, 2251, 2251, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3089, 0,
	0, 0, 0, 0, 0, 0, 3102, 0, 0, 3106,
	0, 1056, 0, 0, 0, 0, 0, 0, 3109, 3110,
	3111, 3112, 3113, 3114, 0, 0, 0, 3115, 3116, 0,
	3117, 0, 3118, 0, 0, 0, 2299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3149, 0, 0,
	197, 0, 0, 0, 0, 720, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3179, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 0, 720, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 720,
	0, 0, 2299, 197, 0, 197, 0, 197, 197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3232, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3270, 0, 0, 0, 0, 720,
	0, 0, 0, 0, 0, 0, 0, 0, 3284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 3301, 0, 0,
	3304, 0, 720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 720,
	0, 0, 0, 0, 720, 0, 0, 0, 720, 720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 959, 0, 0, 0, 0, 960,
	0, 0, 0, 0, 0, 0, 197, 0, 0, 2094,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 197, 0, 0, 197, 0, 197, 0,
	0, 719, 1421, 719, 719, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 719, 0, 0, 0, 0, 0, 0,
	0, 3457, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 720,
	0, 0, 0, 0, 1505, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3516, 0, 0, 0,
	1506, 3538, 2299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3531, 0, 0, 3532,
	3533, 3534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3582, 0, 3583, 0, 0, 3584, 0, 0,
	3587, 3588, 0, 0, 0, 0, 0, 0, 0, 3592,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3593, 0, 3594, 0, 3595, 0, 3596,
	0, 3597, 0, 3598, 1505, 3599, 0, 3600, 0, 3601,
	0, 3602, 0, 3603, 0, 3604, 0, 3605, 0, 3606,
	0, 3607, 0, 3608, 0, 0, 3609, 0, 0, 0,
	3610, 0, 3611, 0, 0, 0, 0, 0, 3613, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3630, 0, 0, 0, 719, 719, 0, 0, 0,
	3635, 0, 3636, 3637, 0, 3638, 0, 3639, 0, 0,
	0, 0, 3640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 3665, 719, 0,
	0, 0, 0, 720, 0, 0, 0, 0, 3673, 0,
	0, 3675, 0, 719, 720, 0, 0, 0, 0, 0,
	0, 0, 0, 3679, 1824, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 0, 0, 0, 197, 3813,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 719, 0, 1859,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	1505, 1870, 0, 0, 1873, 1874, 719, 719, 0, 719,
	0, 719, 719, 0, 719, 719, 719, 719, 719, 719,
	0, 0, 0, 0, 0, 0, 0, 1505, 1905, 1906,
	1505, 719, 1505, 0, 1911, 0, 0, 0, 0, 0,
	0, 720, 0, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 719, 0, 720, 0,
	0, 0, 0, 0, 0, 720, 0, 0, 0, 1973,
	0, 0, 719, 0, 720, 0, 0, 0, 0, 899,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 3921, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 197, 197, 197, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 197, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 0, 666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1035, 0, 0, 720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1057, 1057, 0, 0, 0, 0, 0,
	0, 0, 666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 720, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 719, 719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3961, 719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3959, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 3975, 0, 0, 3976, 0, 3977, 0, 0, 0,
	0, 0, 720, 0, 0, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1505, 0, 0, 0, 0,
	0, 0, 0, 0, 2103, 0, 0, 0, 0, 0,
	0, 0, 1505, 720, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	0, 720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 720, 0, 0, 0, 1506,
	0, 0, 720, 720, 1506, 197, 197, 197, 197, 197,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	4056, 0, 0, 197, 0, 197, 0, 0, 197, 197,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4072,
	0, 4073, 0, 4074, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 720, 0, 0,
	1506, 0, 0, 0, 0, 720, 719, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 4123, 0, 4124, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 197, 0, 0, 0,
	0, 0, 0, 0, 0, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 719,
	0, 0, 719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 719,
	0, 0, 0, 0, 0, 0, 2459, 2460, 2461, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 719, 0, 0, 0,
	0, 0, 719, 1868, 0, 0, 1868, 0, 1868, 0,
	0, 0, 0, 0, 2491, 0, 0, 0, 0, 0,
	0, 0, 666, 0, 666, 0, 0, 666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 0, 719,
	0, 0, 0, 0, 719, 0, 0, 0, 719, 719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 0, 197, 197, 197, 0, 0,
	0, 0, 0, 0, 0, 720, 720, 0, 0, 0,
	0, 0, 1507, 0, 0, 0, 0, 0, 0, 0,
	0, 898, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 720, 720, 720, 720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 0, 719, 1081, 0, 1088, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1507, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1506, 0, 0, 0,
	0, 720, 0, 720, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1035, 0, 0, 0, 0, 0, 0,
	0, 720, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 720, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 0, 0, 0, 0, 0, 0, 0, 666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 719, 0, 0, 0, 0, 1507, 0,
	0, 0, 0, 0, 719, 0, 0, 0, 0, 0,
	0, 0, 0, 720, 0, 0, 0, 720, 720, 0,
	0, 0, 0, 0, 0, 1507, 0, 0, 1507, 0,
	1507, 666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 0, 0, 2874,
	0, 1927, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 666, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1979, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	0, 719, 0, 0, 0, 0, 666, 0, 0, 0,
	0, 0, 0, 0, 0, 2004, 2005, 666, 666, 666,
	666, 666, 666, 666, 0, 0, 0, 0, 719, 0,
	0, 0, 0, 0, 0, 719, 0, 0, 0, 1868,
	1868, 0, 0, 0, 719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1505, 2947, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 720, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 720, 0, 0, 719, 0, 0, 0, 0,
	0, 0, 1506, 0, 720, 0, 0, 0, 0, 0,
	0, 0, 0, 666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 720, 2299,
	0, 1268, 0, 1268, 1268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	720, 0, 0, 1433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 720, 0, 0, 0, 0,
	0, 0, 0, 1507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1057, 1057, 0, 0, 0,
	1507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 720, 0, 0,
	719, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 719, 0, 0, 0, 0, 0, 0, 720,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 720, 0,
	720, 0, 0, 719, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 719, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 719, 0, 0, 0, 1505,
	0, 0, 719, 719, 1505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1057, 1979, 1057, 1057, 1057, 1057, 1057,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1927, 0,
	0, 0, 0, 0, 0, 0, 0, 719, 0, 0,
	1505, 0, 0, 0, 0, 719, 1057, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1035, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 666, 0, 0, 0, 0, 0, 0,
	1979, 666, 0, 666, 0, 666, 2385, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3308, 0, 0, 0,
	0, 0, 0, 0, 0, 1701, 1702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1766, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 719, 0, 0, 0, 0, 1081, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1876, 1876, 0, 1876,
	0, 1876, 1876, 0, 1885, 1876, 1876, 1876, 1876, 1876,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1081, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 666, 0, 1953, 0, 0, 0,
	0, 666, 0, 0, 0, 0, 0, 0, 0, 0,
	666, 666, 1977, 0, 666, 0, 2550, 0, 0, 0,
	0, 3506, 0, 0, 0, 666, 0, 0, 0, 0,
	0, 0, 666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1268, 0, 666, 0,
	0, 0, 0, 0, 0, 719, 719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 719, 719, 719, 719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 0,
	1979, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1268, 1268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2030, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2089, 1505, 0, 0, 0,
	0, 719, 0, 719, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 719, 666, 0, 0, 0, 0, 0, 0, 0,
	1927, 0, 0, 0, 0, 0, 0, 719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	719, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 666, 0, 0, 0,
	0, 666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1268, 0, 0, 0,
	0, 0, 0, 719, 0, 0, 0, 719, 719, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 666, 719, 0, 0, 0,
	0, 0, 2916, 0, 0, 2336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2348, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 1748,
	0, 0, 1268, 0, 0, 0, 0, 0, 0, 0,
	0, 666, 666, 666, 666, 666, 0, 0, 0, 0,
	0, 0, 1081, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 666, 666, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1088,
	0, 0, 0, 0, 719, 0, 0, 0, 0, 1057,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1081, 0, 0, 0,
	0, 0, 1088, 0, 0, 0, 0, 0, 719, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1081,
	0, 0, 0, 0, 2089, 0, 0, 0, 2089, 2089,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 719, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1505, 0, 719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 719, 719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	719, 0, 0, 0, 0, 0, 0, 0, 0, 1057,
	0, 0, 0, 0, 0, 719, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2562,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 666, 0, 719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1507, 0, 719,
	0, 0, 1507, 666, 666, 666, 666, 666, 0, 0,
	0, 0, 0, 0, 0, 3177, 0, 0, 719, 0,
	719, 1927, 1268, 666, 0, 0, 666, 3185, 1979, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 666, 0, 0, 666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2824, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 666, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	666, 2906, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	666, 0, 0, 666, 666, 666, 0, 0, 2348, 0,
	0, 0, 0, 0, 0, 2931, 0, 0, 0, 0,
	0, 0, 0, 0, 2936, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3701, 3703, 3702, 3766, 3767, 3768, 3769, 3770, 3771,
	3772, 791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2089, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2089, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1927, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3091, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1927, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 0, 0, 0, 3707, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3134, 0, 3715, 3716, 0, 0, 3791, 3790, 3789,
	0, 0, 3787, 3788, 3786, 1268, 0, 0, 0, 0,
	0, 0, 3161, 1876, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3792, 912, 0,
	767, 768, 3793, 3794, 916, 3795, 770, 771, 913, 914,
	0, 765, 769, 915, 917, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1081, 0, 0,
	0, 0, 0, 0, 0, 2348, 0, 0, 0, 3698,
	3699, 3700, 3704, 3705, 3706, 3717, 3764, 3765, 3773, 3775,
	868, 3774, 3776, 3777, 3778, 3781, 3782, 3783, 3784, 3779,
	3780, 3785, 3681, 3685, 3682, 3683, 3684, 3696, 3686, 3687,
	3688, 3689, 3690, 3691, 3692, 3693, 3694, 3695, 3697, 3796,
	3797, 3798, 3799, 3800, 3801, 3710, 3714, 3713, 3711, 3712,
	3708, 3709, 3736, 3735, 3737, 3738, 3739, 3740, 3741, 3742,
	3744, 3743, 3745, 3746, 3747, 3748, 3749, 3750, 3718, 3719,
	3722, 3723, 3721, 3720, 3724, 3733, 3734, 3725, 3726, 3727,
	3728, 3729, 3730, 3732, 3731, 3751, 3752, 3753, 3754, 3755,
	3757, 3756, 3760, 3761, 3759, 3758, 3763, 3762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	918, 0, 919, 0, 923, 0, 0, 0, 925, 924,
	0, 926, 888, 887, 0, 0, 920, 921, 1927, 922,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 666, 0, 0,
	0, 0, 3422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3802, 3803, 3804, 3805, 3806, 3807,
	3808, 3809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4012, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1927, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2348, 2348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3570, 3571, 3572, 3573, 0, 0,
	0, 0, 1979, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3669, 0, 3671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3836, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3909, 0, 0, 0, 3909, 3909, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2348, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2348, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2348, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1268, 1268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4032, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4040, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3986, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2348,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 3422, 0,
	4040, 1403, 1404, 1389, 522, 0, 1331, 1407, 1300, 1319,
	1417, 1322, 1325, 1368, 1278, 1346, 413, 1316, 1271, 1304,
	1273, 1311, 1274, 1302, 1333, 271, 1299, 1391, 1350, 1406,
	364, 268, 1280, 1305, 427, 1321, 205, 1370, 483, 253,
	375, 372, 577, 283, 274, 270, 251, 317, 383, 425,
	512, 419, 1413, 368, 1356, 0, 493, 398, 0, 0,
	0, 1335, 1395, 1344, 1382, 1330, 1369, 1288, 1355, 1408,
	1317, 1365, 1409, 323, 249, 325, 204, 410, 494, 287,
	0, 0, 0, 0, 4014, 943, 0, 0, 0, 0,
	4015, 0, 0, 0, 0, 239, 0, 0, 246, 0,
	0, 0, 349, 358, 357, 338, 339, 341, 343, 348,
	355, 361, 1313, 1362, 1402, 1314, 1364, 266, 321, 273,
	265, 574, 1414, 1394, 1277, 1343, 1401, 1338, 0, 0,
	230, 1405, 1337, 0, 1367, 0, 1420, 1272, 1358, 0,
	1275, 1279, 1416, 1399, 1308, 276, 0, 0, 0, 0,
	0, 0, 0, 1334, 1345, 0, 1379, 1383, 1328, 0,
	0, 0, 0, 0, 0, 0, 0, 1306, 0, 1354,
	0, 0, 0, 1284, 1276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1332, 0, 0,
	0, 0, 1287, 0, 1307, 1380, 0, 1270, 298, 1281,
	399, 258, 0, 450, 1387, 1398, 1329, 618, 1400, 1327,
	1326, 1374, 1285, 1393, 1320, 363, 1283, 330, 199, 226,
	0, 1318, 409, 458, 470, 1392, 1303, 1312, 254, 1310,
	468, 423, 596, 234, 285, 455, 429, 466, 437, 288,
	1353, 1372, 467, 370, 579, 447, 593, 619, 620, 264,
	403, 605, 516, 613, 637, 227, 261, 417, 501, 599,
	490, 395, 575, 576, 329, 489, 296, 203, 367, 625,
	225, 476, 369, 243, 232, 581, 602, 290, 453, 632,
	214, 511, 591, 240, 480, 0, 0, 640, 248, 500,
	216, 588, 499, 391, 326, 327, 215, 0, 454, 269,
	294, 0, 0, 259, 412, 583, 584, 257, 641, 229,
	612, 221, 1282, 611, 405, 578, 589, 392, 381, 220,
	587, 390, 380, 334, 353, 354, 281, 307, 444, 373,
	445, 306, 308, 401, 400, 402, 208, 600, 0, 209,
	0, 495, 601, 642, 449, 213, 235, 236, 238, 1298,
	280, 284, 292, 295, 303, 304, 313, 365, 416, 443,
	439, 448, 1388, 573, 594, 606, 617, 623, 624, 626,
	627, 628, 629, 630, 633, 631, 404, 311, 491, 333,
	371, 1377, 1419, 422, 469, 241, 598, 492, 201, 1292,
	1297, 1290, 0, 255, 256, 1359, 569, 1293, 1291, 1348,
	1349, 1294, 1410, 1411, 1412, 1396, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 638, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 1381, 1286, 0, 1295, 1296, 1390,
	585, 586, 661, 382, 482, 595, 335, 347, 350, 340,
	359, 0, 360, 336, 337, 342, 344, 345, 346, 351,
	352, 356, 362, 250, 211, 388, 396, 572, 312, 217,
	218, 219, 518, 519, 520, 521, 609, 610, 614, 206,
	459, 460, 461, 462, 293, 604, 309, 465, 464, 331,
	332, 377, 446, 534, 536, 547, 551, 553, 555, 561,
	564, 535, 537, 548, 552, 554, 556, 562, 565, 524,
	526, 528, 530, 543, 542, 539, 567, 568, 545, 550,
	529, 541, 546, 559, 566, 563, 523, 527, 531, 540,
	558, 557, 538, 549, 560, 544, 532, 525, 533, 1352,
	198, 222, 366, 1415, 451, 289, 639, 608, 603, 207,
	224, 1289, 263, 1301, 1309, 1315, 1323, 1324, 1336, 1339,
	1340, 1341, 1342, 1360, 1361, 1363, 1371, 1373, 1376, 1378,
	1385, 1397, 1418, 200, 202, 210, 223, 233, 237, 244,
	262, 277, 279, 286, 299, 310, 318, 319, 322, 328,
	378, 384, 385, 386, 387, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 615, 621, 477, 301, 302, 441, 442, 314,
	315, 635, 636, 300, 592, 622, 590, 634, 616, 435,
	376, 1351, 1357, 379, 282, 305, 320, 1366, 607, 498,
	228, 463, 291, 252, 1384, 1386, 212, 247, 231, 260,
	275, 278, 324, 389, 397, 426, 431, 297, 272, 245,
	456, 242, 481, 513, 514, 515, 517, 393, 267, 430,
	1347, 1375, 374, 570, 571, 316, 394, 0, 0, 0,
	1403, 1404, 1389, 522, 0, 1331, 1407, 1300, 1319, 1417,
	1322, 1325, 1368, 1278, 1346, 413, 1316, 1271, 1304, 1273,
	1311, 1274, 1302, 1333, 271, 1299, 1391, 1350, 1406, 364,
	268, 1280, 1305, 427, 1321, 205, 1370, 483, 253, 375,
	372, 577, 283, 274, 270, 251, 317, 383, 425, 512,
	419, 1413, 368, 1356, 0, 493, 398, 0, 0, 0,
	1335, 1395, 1344, 1382, 1330, 1369, 1288, 1355, 1408, 1317,
	1365, 1409, 323, 249, 325, 204, 410, 494, 287, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 349, 358, 357, 338, 339, 341, 343, 348, 355,
	361, 1313, 1362, 1402, 1314, 1364, 266, 321, 273, 265,
	574, 1414, 1394, 1277, 1343, 1401, 1338, 0, 0, 230,
	1405, 1337, 0, 1367, 0, 1420, 1272, 1358, 0, 1275,
	1279, 1416, 1399, 1308, 276, 0, 0, 0, 0, 0,
	0, 0, 1334, 1345, 0, 1379, 1383, 1328, 0, 0,
	0, 0, 0, 0, 3186, 0, 1306, 0, 1354, 0,
	0, 0, 1284, 1276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1332, 0, 0, 0,
	0, 1287, 0, 1307, 1380, 0, 1270, 298, 1281, 399,
	258, 0, 450, 1387, 1398, 1329, 618, 1400, 1327, 1326,
	1374, 1285, 1393, 1320, 363, 1283, 330, 199, 226, 0,
	1318, 409, 458, 470, 1392, 1303, 1312, 254, 1310, 468,
	423, 596, 234, 285, 455, 429, 466, 437, 288, 1353,
	1372, 467, 370, 579, 447, 593, 619, 620, 264, 403,
	605, 516, 613, 637, 227, 261, 417, 501, 599, 490,
	395, 575, 576, 329, 489, 296, 203, 367, 625, 225,
	476, 369, 243, 232, 581, 602, 290, 453, 632, 214,
	511, 591, 240, 480, 0, 0, 640, 248, 500, 216,
	588, 499, 391, 326, 327, 215, 0, 454, 269, 294,
	0, 0, 259, 412, 583, 584, 257, 641, 229, 612,
	221, 1282, 611, 405, 578, 589, 392, 381, 220, 587,
	390, 380, 334, 353, 354, 281, 307, 444, 373, 445,
	306, 308, 401, 400, 402, 208, 600, 0, 209, 0,
	495, 601, 642, 449, 213, 235, 236, 238, 1298, 280,
	284, 292, 295, 303, 304, 313, 365, 416, 443, 439,
	448, 1388, 573, 594, 606, 617, 623, 624, 626, 627,
	628, 629, 630, 633, 631, 404, 311, 491, 333, 371,
	1377, 1419, 422, 469, 241, 598, 492, 201, 1292, 1297,
	1290, 0, 255, 256, 1359, 569, 1293, 1291, 1348, 1349,
	1294, 1410, 1411, 1412, 1396, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 638, 502, 508, 503, 504, 505, 506,
	507, 0, 509, 1381, 1286, 0, 1295, 1296, 1390, 585,
	586, 661, 382, 482, 595, 335, 347, 350, 340, 359,
	0, 360, 336, 337, 342, 344, 345, 346, 351, 352,
	356, 362, 250, 211, 388, 396, 572, 312, 217, 218,
	219, 518, 519, 520, 521, 609, 610, 614, 206, 459,
	460, 461, 462, 293, 604, 309, 465, 464, 331, 332,
	377, 446, 534, 536, 547, 551, 553, 555, 561, 564,
	535, 537, 548, 552, 554, 556, 562, 565, 524, 526,
	528, 530, 543, 542, 539, 567, 568, 545, 550, 529,
	541, 546, 559, 566, 563, 523, 527, 531, 540, 558,
	557, 538, 549, 560, 544, 532, 525, 533, 1352, 198,
	222, 366, 1415, 451, 289, 639, 608, 603, 207, 224,
	1289, 263, 1301, 1309, 1315, 1323, 1324, 1336, 1339, 1340,
	1341, 1342, 1360, 1361, 1363, 1371, 1373, 1376, 1378, 1385,
	1397, 1418, 200, 202, 210, 223, 233, 237, 244, 262,
	277, 279, 286, 299, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 301, 302, 441, 442, 314, 315,
	635, 636, 300, 592, 622, 590, 634, 616, 435, 376,
	1351, 1357, 379, 282, 305, 320, 1366, 607, 498, 228,
	463, 291, 252, 1384, 1386, 212, 247, 231, 260, 275,
	278, 324, 389, 397, 426, 431, 297, 272, 245, 456,
	242, 481, 513, 514, 515, 517, 393, 267, 430, 1347,
	1375, 374, 570, 571, 316, 394, 0, 0, 0, 1403,
	1404, 1389, 522, 0, 1331, 1407, 1300, 1319, 1417, 1322,
	1325, 1368, 1278, 1346, 413, 1316, 1271, 1304, 1273, 1311,
	1274, 1302, 1333, 271, 1299, 1391, 1350, 1406, 364, 268,
	1280, 1305, 427, 1321, 205, 1370, 483, 253, 375, 372,
	577, 283, 274, 270, 251, 317, 383, 425, 512, 419,
	1413, 368, 1356, 0, 493, 398, 0, 0, 0, 1335,
	1395, 1344, 1382, 1330, 1369, 1288, 1355, 1408, 1317, 1365,
	1409, 323, 249, 325, 204, 410, 494, 287, 0, 0,
	0, 0, 0, 709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 246, 0, 0, 0,
	349, 358, 357, 338, 339, 341, 343, 348, 355, 361,
	1313, 1362, 1402, 1314, 1364, 266, 321, 273, 265, 574,
	1414, 1394, 1277, 1343, 1401, 1338, 0, 0, 230, 1405,
	1337, 0, 1367, 0, 1420, 1272, 1358, 0, 1275, 1279,
	1416, 1399, 1308, 276, 0, 0, 0, 0, 0, 0,
	0, 1334, 1345, 0, 1379, 1383, 1328, 0, 0, 0,
	0, 0, 0, 3147, 0, 1306, 0, 1354, 0, 0,
	0, 1284, 1276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1332, 0, 0, 0, 0,
	1287, 0, 1307, 1380, 0, 1270, 298, 1281, 399, 258,
	0, 450, 1387, 1398, 1329, 618, 1400, 1327, 1326, 1374,
	1285, 1393, 1320, 363, 1283, 330, 199, 226, 0, 1318,
	409, 458, 470, 1392, 1303, 1312, 254, 1310, 468, 423,
	596, 234, 285, 455, 429, 466, 437, 288, 1353, 1372,
	467, 370, 579, 447, 593, 619, 620, 264, 403, 605,
	516, 613, 637, 227, 261, 417, 501, 599, 490, 395,
	575, 576, 329, 489, 296, 203, 367, 625, 225, 476,
	369, 243, 232, 581, 602, 290, 453, 632, 214, 511,
	591, 240, 480, 0, 0, 640, 248, 500, 216, 588,
	499, 391, 326, 327, 215, 0, 454, 269, 294, 0,
	0, 259, 412, 583, 584, 257, 641, 229, 612, 221,
	1282, 611, 405, 578, 589, 392, 381, 220, 587, 390,
	380, 334, 353, 354, 281, 307, 444, 373, 445, 306,
	308, 401, 400, 402, 208, 600, 0, 209, 0, 495,
	601, 642, 449, 213, 235, 236, 238, 1298, 280, 284,
	292, 295, 303, 304, 313, 365, 416, 443, 439, 448,
	1388, 573, 594, 606, 617, 623, 624, 626, 627, 628,
	629, 630, 633, 631, 404, 311, 491, 333, 371, 1377,
	1419, 422, 469, 241, 598, 492, 201, 1292, 1297, 1290,
	0, 255, 256, 1359, 569, 1293, 1291, 1348, 1349, 1294,
	1410, 1411, 1412, 1396, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 638, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 1381, 1286, 0, 1295, 1296, 1390, 585, 586,
	661, 382, 482, 595, 335, 347, 350, 340, 359, 0,
	360, 336, 337, 342, 344, 345, 346, 351, 352, 356,
	362, 250, 211, 388, 396, 572, 312, 217, 218, 219,
	518, 519, 520, 521, 609, 610, 614, 206, 459, 460,
	461, 462, 293, 604, 309, 465, 464, 331, 332, 377,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 1352, 198, 222,
	366, 1415, 451, 289, 639, 608, 603, 207, 224, 1289,
	263, 1301, 1309, 1315, 1323, 1324, 1336, 1339, 1340, 1341,
	1342, 1360, 1361, 1363, 1371, 1373, 1376, 1378, 1385, 1397,
	1418, 200, 202, 210, 223, 233, 237, 244, 262, 277,
	279, 286, 299, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	615, 621, 477, 301, 302, 441, 442, 314, 315, 635,
	636, 300, 592, 622, 590, 634, 616, 435, 376, 1351,
	1357, 379, 282, 305, 320, 1366, 607, 498, 228, 463,
	291, 252, 1384, 1386, 212, 247, 231, 260, 275, 278,
	324, 389, 397, 426, 431, 297, 272, 245, 456, 242,
	481, 513, 514, 515, 517, 393, 267, 430, 1347, 1375,
	374, 570, 571, 316, 394, 0, 0, 0, 1403, 1404,
	1389, 522, 0, 1331, 1407, 1300, 1319, 1417, 1322, 1325,
	1368, 1278, 1346, 413, 1316, 1271, 1304, 1273, 1311, 1274,
	1302, 1333, 271, 1299, 1391, 1350, 1406, 364, 268, 1280,
	1305, 427, 1321, 205, 1370, 483, 253, 375, 372, 577,
	283, 274, 270, 251, 317, 383, 425, 512, 419, 1413,
	368, 1356, 0, 493, 398, 0, 0, 0, 1335, 1395,
	1344, 1382, 1330, 1369, 1288, 1355, 1408, 1317, 1365, 1409,
	323, 249, 325, 204, 410, 494, 287, 0, 0, 0,
	0, 0, 943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 349,
	358, 357, 338, 339, 341, 343, 348, 355, 361, 1313,
	1362, 1402, 1314, 1364, 266, 321, 273, 265, 574, 1414,
	1394, 1277, 1343, 1401, 1338, 0, 0, 230, 1405, 1337,
	0, 1367, 0, 1420, 1272, 1358, 0, 1275, 1279, 1416,
	1399, 1308, 276, 0, 0, 0, 0, 0, 0, 0,
	1334, 1345, 0, 1379, 1383, 1328, 0, 0, 0, 0,
	0, 0, 2364, 0, 1306, 0, 1354, 0, 0, 0,
	1284, 1276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1332, 0, 0, 0, 0, 1287,
	0, 1307, 1380, 0, 1270, 298, 1281, 399, 258, 0,
	450, 1387, 1398, 1329, 618, 1400, 1327, 1326, 1374, 1285,
	1393, 1320, 363, 1283, 330, 199, 226, 0, 1318, 409,
	458, 470, 1392, 1303, 1312, 254, 1310, 468, 423, 596,
	234, 285, 455, 429, 466, 437, 288, 1353, 1372, 467,
	370, 579, 447, 593, 619, 620, 264, 403, 605, 516,
	613, 637, 227, 261, 417, 501, 599, 490, 395, 575,
	576, 329, 489, 296, 203, 367, 625, 225, 476, 369,
	243, 232, 581, 602, 290, 453, 632, 214, 511, 591,
	240, 480, 0, 0, 640, 248, 500, 216, 588, 499,
	391, 326, 327, 215, 0, 454, 269, 294, 0, 0,
	259, 412, 583, 584, 257, 641, 229, 612, 221, 1282,
	611, 405, 578, 589, 392, 381, 220, 587, 390, 380,
	334, 353, 354, 281, 307, 444, 373, 445, 306, 308,
	401, 400, 402, 208, 600, 0, 209, 0, 495, 601,
	642, 449, 213, 235, 236, 238, 1298, 280, 284, 292,
	295, 303, 304, 313, 365, 416, 443, 439, 448, 1388,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 311, 491, 333, 371, 1377, 1419,
	422, 469, 241, 598, 492, 201, 1292, 1297, 1290, 0,
	255, 256, 1359, 569, 1293, 1291, 1348, 1349, 1294, 1410,
	1411, 1412, 1396, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 1381, 1286, 0, 1295, 1296, 1390, 585, 586, 661,
	382, 482, 595, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	250, 211, 388, 396, 572, 312, 217, 218, 219, 518,
	519, 520, 521, 609, 610, 614, 206, 459, 460, 461,
	462, 293, 604, 309, 465, 464, 331, 332, 377, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 1352, 198, 222, 366,
	1415, 451, 289, 639, 608, 603, 207, 224, 1289, 263,
	1301, 1309, 1315, 1323, 1324, 1336, 1339, 1340, 1341, 1342,
	1360, 1361, 1363, 1371, 1373, 1376, 1378, 1385, 1397, 1418,
	200, 202, 210, 223, 233, 237, 244, 262, 277, 279,
	286, 299, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 484, 485,
	486, 487, 488, 496, 497, 510, 580, 582, 597, 615,
	621, 477, 301, 302, 441, 442, 314, 315, 635, 636,
	300, 592, 622, 590, 634, 616, 435, 376, 1351, 1357,
	379, 282, 305, 320, 1366, 607, 498, 228, 463, 291,
	252, 1384, 1386, 212, 247, 231, 260, 275, 278, 324,
	389, 397, 426, 431, 297, 272, 245, 456, 242, 481,
	513, 514, 515, 517, 393, 267, 430, 1347, 1375, 374,
	570, 571, 316, 394, 0, 0, 0, 1403, 1404, 1389,
	522, 0, 1331, 1407, 1300, 1319, 1417, 1322, 1325, 1368,
	1278, 1346, 413, 1316, 1271, 1304, 1273, 1311, 1274, 1302,
	1333, 271, 1299, 1391, 1350, 1406, 364, 268, 1280, 1305,
	427, 1321, 205, 1370, 483, 253, 375, 372, 577, 283,
	274, 270, 251, 317, 383, 425, 512, 419, 1413, 368,
	1356, 0, 493, 398, 0, 0, 0, 1335, 1395, 1344,
	1382, 1330, 1369, 1288, 1355, 1408, 1317, 1365, 1409, 323,
	249, 325, 204, 410, 494, 287, 0, 95, 0, 0,
	0, 709, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 246, 0, 0, 0, 349, 358,
	357, 338, 339, 341, 343, 348, 355, 361, 1313, 1362,
	1402, 1314, 1364, 266, 321, 273, 265, 574, 1414, 1394,
	1277, 1343, 1401, 1338, 0, 0, 230, 1405, 1337, 0,
	1367, 0, 1420, 1272, 1358, 0, 1275, 1279, 1416, 1399,
	1308, 276, 0, 0, 0, 0, 0, 0, 0, 1334,
	1345, 0, 1379, 1383, 1328, 0, 0, 0, 0, 0,
	0, 0, 0, 1306, 0, 1354, 0, 0, 0, 1284,
	1276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1332, 0, 0, 0, 0, 1287, 0,
	1307, 1380, 0, 1270, 298, 1281, 399, 258, 0, 450,
	1387, 1398, 1329, 618, 1400, 1327, 1326, 1374, 1285, 1393,
	1320, 363, 1283, 330, 199, 226, 0, 1318, 409, 458,
	470, 1392, 1303, 1312, 254, 1310, 468, 423, 596, 234,
	285, 455, 429, 466, 437, 288, 1353, 1372, 467, 370,
	579, 447, 593, 619, 620, 264, 403, 605, 516, 613,
	637, 227, 261, 417, 501, 599, 490, 395, 575, 576,
	329, 489, 296, 203, 367, 625, 225, 476, 369, 243,
	232, 581, 602, 290, 453, 632, 214, 511, 591, 240,
	480, 0, 0, 640, 248, 500, 216, 588, 499, 391,
	326, 327, 215, 0, 454, 269, 294, 0, 0, 259,
	412, 583, 584, 257, 641, 229, 612, 221, 1282, 611,
	405, 578, 589, 392, 381, 220, 587, 390, 380, 334,
	353, 354, 281, 307, 444, 373, 445, 306, 308, 401,
	400, 402, 208, 600, 0, 209, 0, 495, 601, 642,
	449, 213, 235, 236, 238, 1298, 280, 284, 292, 295,
	303, 304, 313, 365, 416, 443, 439, 448, 1388, 573,
	594, 606, 617, 623, 624, 626, 627, 628, 629, 630,
	633, 631, 404, 311, 491, 333, 371, 1377, 1419, 422,
	469, 241, 598, 492, 201, 1292, 1297, 1290, 0, 255,
	256, 1359, 569, 1293, 1291, 1348, 1349, 1294, 1410, 1411,
	1412, 1396, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	638, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	1381, 1286, 0, 1295, 1296, 1390, 585, 586, 661, 382,
	482, 595, 335, 347, 350, 340, 359, 0, 360, 336,
	337, 342, 344, 345, 346, 351, 352, 356, 362, 250,
	211, 388, 396, 572, 312, 217, 218, 219, 518, 519,
	520, 521, 609, 610, 614, 206, 459, 460, 461, 462,
	293, 604, 309, 465, 464, 331, 332, 377, 446, 534,
	536, 547, 551, 553, 555, 561, 564, 535, 537, 548,
	552, 554, 556, 562, 565, 524, 526, 528, 530, 543,
	542, 539, 567, 568, 545, 550, 529, 541, 546, 559,
	566, 563, 523, 527, 531, 540, 558, 557, 538, 549,
	560, 544, 532, 525, 533, 1352, 198, 222, 366, 1415,
	451, 289, 639, 608, 603, 207, 224, 1289, 263, 1301,
	1309, 1315, 1323, 1324, 1336, 1339, 1340, 1341, 1342, 1360,
	1361, 1363, 1371, 1373, 1376, 1378, 1385, 1397, 1418, 200,
	202, 210, 223, 233, 237, 244, 262, 277, 279, 286,
	299, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 615, 621,
	477, 301, 302, 441, 442, 314, 315, 635, 636, 300,
	592, 622, 590, 634, 616, 435, 376, 1351, 1357, 379,
	282, 305, 320, 1366, 607, 498, 228, 463, 291, 252,
	1384, 1386, 212, 247, 231, 260, 275, 278, 324, 389,
	397, 426, 431, 297, 272, 245, 456, 242, 481, 513,
	514, 515, 517, 393, 267, 430, 1347, 1375, 374, 570,
	571, 316, 394, 0, 0, 0, 1403, 1404, 1389, 522,
	0, 1331, 1407, 1300, 1319, 1417, 1322, 1325, 1368, 1278,
	1346, 413, 1316, 1271, 1304, 1273, 1311, 1274, 1302, 1333,
	271, 1299, 1391, 1350, 1406, 364, 268, 1280, 1305, 427,
	1321, 205, 1370, 483, 253, 375, 372, 577, 283, 274,
	270, 251, 317, 383, 425, 512, 419, 1413, 368, 1356,
	0, 493, 398, 0, 0, 0, 1335, 1395, 1344, 1382,
	1330, 1369, 1288, 1355, 1408, 1317, 1365, 1409, 323, 249,
	325, 204, 410, 494, 287, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 1313, 1362, 1402,
	1314, 1364, 266, 321, 273, 265, 574, 1414, 1394, 1277,
	1343, 1401, 1338, 0, 0, 230, 1405, 1337, 0, 1367,
	0, 1420, 1272, 1358, 0, 1275, 1279, 1416, 1399, 1308,
	276, 0, 0, 0, 0, 0, 0, 0, 1334, 1345,
	0, 1379, 1383, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 1306, 0, 1354, 0, 0, 0, 1284, 1276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1332, 0, 0, 0, 0, 1287, 0, 1307,
	1380, 0, 1270, 298, 1281, 399, 258, 0, 450, 1387,
	1398, 1329, 618, 1400, 1327, 1326, 1374, 1285, 1393, 1320,
	363, 1283, 330, 199, 226, 0, 1318, 409, 458, 470,
	1392, 1303, 1312, 254, 1310, 468, 423, 596, 234, 285,
	455, 429, 466, 437, 288, 1353, 1372, 467, 370, 579,
	447, 593, 619, 620, 264, 403, 605, 516, 613, 637,
	227, 261, 417, 501, 599, 490, 395, 575, 576, 329,
	489, 296, 203, 367, 625, 225, 476, 369, 243, 232,
	581, 602, 290, 453, 632, 214, 511, 591, 240, 480,
	0, 0, 640, 248, 500, 216, 588, 499, 391, 326,
	327, 215, 0, 454, 269, 294, 0, 0, 259, 412,
	583, 584, 257, 641, 229, 612, 221, 1282, 611, 405,
	578, 589, 392, 381, 220, 587, 390, 380, 334, 353,
	354, 281, 307, 444, 373, 445, 306, 308, 401, 400,
	402, 208, 600, 0, 209, 0, 495, 601, 642, 449,
	213, 235, 236, 238, 1298, 280, 284, 292, 295, 303,
	304, 313, 365, 416, 443, 439, 448, 1388, 573, 594,
	606, 617, 623, 624, 626, 627, 628, 629, 630, 633,
	631, 404, 311, 491, 333, 371, 1377, 1419, 422, 469,
	241, 598, 492, 201, 1292, 1297, 1290, 0, 255, 256,
	1359, 569, 1293, 1291, 1348, 1349, 1294, 1410, 1411, 1412,
	1396, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 638,
	502, 508, 503, 504, 505, 506, 507, 0, 509, 1381,
	1286, 0, 1295, 1296, 1390, 585, 586, 661, 382, 482,
	595, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 250, 211,
	388, 396, 572, 312, 217, 218, 219, 518, 519, 520,
	521, 609, 610, 614, 206, 459, 460, 461, 462, 293,
	604, 309, 465, 464, 331, 332, 377, 446, 534, 536,
	547, 551, 553, 555, 561, 564, 535, 537, 548, 552,
	554, 556, 562, 565, 524, 526, 528, 530, 543, 542,
	539, 567, 568, 545, 550, 529, 541, 546, 559, 566,
	563, 523, 527, 531, 540, 558, 557, 538, 549, 560,
	544, 532, 525, 533, 1352, 198, 222, 366, 1415, 451,
	289, 639, 608, 603, 207, 224, 1289, 263, 1301, 1309,
	1315, 1323, 1324, 1336, 1339, 1340, 1341, 1342, 1360, 1361,
	1363, 1371, 1373, 1376, 1378, 1385, 1397, 1418, 200, 202,
	210, 223, 233, 237, 244, 262, 277, 279, 286, 299,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 484, 485, 486, 487,
	488, 496, 497, 510, 580, 582, 597, 615, 621, 477,
	301, 302, 441, 442, 314, 315, 635, 636, 300, 592,
	622, 590, 634, 616, 435, 376, 1351, 1357, 379, 282,
	305, 320, 1366, 607, 498, 228, 463, 291, 252, 1384,
	1386, 212, 247, 231, 260, 275, 278, 324, 389, 397,
	426, 431, 297, 272, 245, 456, 242, 481, 513, 514,
	515, 517, 393, 267, 430, 1347, 1375, 374, 570, 571,
	316, 394, 0, 0, 0, 1403, 1404, 1389, 522, 0,
	1331, 1407, 1300, 1319, 1417, 1322, 1325, 1368, 1278, 1346,
	413, 1316, 1271, 1304, 1273, 1311, 1274, 1302, 1333, 271,
	1299, 1391, 1350, 1406, 364, 268, 1280, 1305, 427, 1321,
	205, 1370, 483, 253, 375, 372, 577, 283, 274, 270,
	251, 317, 383, 425, 512, 419, 1413, 368, 1356, 0,
	493, 398, 0, 0, 0, 1335, 1395, 1344, 1382, 1330,
	1369, 1288, 1355, 1408, 1317, 1365, 1409, 323, 249, 325,
	204, 410, 494, 287, 0, 0, 0, 0, 0, 709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 246, 0, 0, 0, 349, 358, 357, 338,
	339, 341, 343, 348, 355, 361, 1313, 1362, 1402, 1314,
	1364, 266, 321, 273, 265, 574, 1414, 1394, 1277, 1343,
	1401, 1338, 0, 0, 230, 1405, 1337, 0, 1367, 0,
	1420, 1272, 1358, 0, 1275, 1279, 1416, 1399, 1308, 276,
	0, 0, 0, 0, 0, 0, 0, 1334, 1345, 0,
	1379, 1383, 1328, 0, 0, 0, 0, 0, 0, 0,
	0, 1306, 0, 1354, 0, 0, 0, 1284, 1276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1332, 0, 0, 0, 0, 1287, 0, 1307, 1380,
	0, 1270, 298, 1281, 399, 258, 0, 450, 1387, 1398,
	1329, 618, 1400, 1327, 1326, 1374, 1285, 1393, 1320, 363,
	1283, 330, 199, 226, 0, 1318, 409, 458, 470, 1392,
	1303, 1312, 254, 1310, 468, 423, 596, 234, 285, 455,
	429, 466, 437, 288, 1353, 1372, 467, 370, 579, 447,
	593, 619, 620, 264, 403, 605, 516, 613, 637, 227,
	261, 417, 501, 599, 490, 395, 575, 576, 329, 489,
	296, 203, 367, 625, 225, 476, 369, 243, 232, 581,
	602, 290, 453, 632, 214, 511, 591, 240, 480, 0,
	0, 640, 248, 500, 216, 588, 499, 391, 326, 327,
	215, 0, 454, 269, 294, 0, 0, 259, 412, 583,
	584, 257, 641, 229, 612, 221, 1282, 611, 405, 578,
	589, 392, 381, 220, 587, 390, 380, 334, 353, 354,
	281, 307, 444, 373, 445, 306, 308, 401, 400, 402,
	208, 600, 0, 209, 0, 495, 601, 642, 449, 213,
	235, 236, 238, 1298, 280, 284, 292, 295, 303, 304,
	313, 365, 416, 443, 439, 448, 1388, 573, 594, 606,
	617, 623, 624, 626, 627, 628, 629, 630, 633, 631,
	404, 311, 491, 333, 371, 1377, 1419, 422, 469, 241,
	598, 492, 201, 1292, 1297, 1290, 0, 255, 256, 1359,
	569, 1293, 1291, 1348, 1349, 1294, 1410, 1411, 1412, 1396,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 638, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 1381, 1286,
	0, 1295, 1296, 1390, 585, 586, 661, 382, 482, 595,
	335, 347, 350, 340, 359, 0, 360, 336, 337, 342,
	344, 345, 346, 351, 352, 356, 362, 250, 211, 388,
	396, 572, 312, 217, 218, 219, 518, 519, 520, 521,
	609, 610, 614, 206, 459, 460, 461, 462, 293, 604,
	309, 465, 464, 331, 332, 377, 446, 534, 536, 547,
	551, 553, 555, 561, 564, 535, 537, 548, 552, 554,
	556, 562, 565, 524, 526, 528, 530, 543, 542, 539,
	567, 568, 545, 550, 529, 541, 546, 559, 566, 563,
	523, 527, 531, 540, 558, 557, 538, 549, 560, 544,
	532, 525, 533, 1352, 198, 222, 366, 1415, 451, 289,
	639, 608, 603, 207, 224, 1289, 263, 1301, 1309, 1315,
	1323, 1324, 1336, 1339, 1340, 1341, 1342, 1360, 1361, 1363,
	1371, 1373, 1376, 1378, 1385, 1397, 1418, 200, 202, 210,
	223, 233, 237, 244, 262, 277, 279, 286, 299, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 301,
	302, 441, 442, 314, 315, 635, 636, 300, 592, 622,
	590, 634, 616, 435, 376, 1351, 1357, 379, 282, 305,
	320, 1366, 607, 498, 228, 463, 291, 252, 1384, 1386,
	212, 247, 231, 260, 275, 278, 324, 389, 397, 426,
	431, 297, 272, 245, 456, 242, 481, 513, 514, 515,
	517, 393, 267, 430, 1347, 1375, 374, 570, 571, 316,
	394, 0, 0, 0, 1403, 1404, 1389, 522, 0, 1331,
	1407, 1300, 1319, 1417, 1322, 1325, 1368, 1278, 1346, 413,
	1316, 1271, 1304, 1273, 1311, 1274, 1302, 1333, 271, 1299,
	1391, 1350, 1406, 364, 268, 1280, 1305, 427, 1321, 205,
	1370, 483, 253, 375, 372, 577, 283, 274, 270, 251,
	317, 383, 425, 512, 419, 1413, 368, 1356, 0, 493,
	398, 0, 0, 0, 1335, 1395, 1344, 1382, 1330, 1369,
	1288, 1355, 1408, 1317, 1365, 1409, 323, 249, 325, 204,
	410, 494, 287, 0, 0, 0, 0, 0, 943, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 1313, 1362, 1402, 1314, 1364,
	266, 321, 273, 265, 574, 1414, 1394, 1277, 1343, 1401,
	1338, 0, 0, 230, 1405, 1337, 0, 1367, 0, 1420,
	1272, 1358, 0, 1275, 1279, 1416, 1399, 1308, 276, 0,
	0, 0, 0, 0, 0, 0, 1334, 1345, 0, 1379,
	1383, 1328, 0, 0, 0, 0, 0, 0, 0, 0,
	1306, 0, 1354, 0, 0, 0, 1284, 1276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1332, 0, 0, 0, 0, 1287, 0, 1307, 1380, 0,
	1270, 298, 1281, 399, 258, 0, 450, 1387, 1398, 1329,
	618, 1400, 1327, 1326, 1374, 1285, 1393, 1320, 363, 1283,
	330, 199, 226, 0, 1318, 409, 458, 470, 1392, 1303,
	1312, 254, 1310, 468, 423, 596, 234, 285, 455, 429,
	466, 437, 288, 1353, 1372, 467, 370, 579, 447, 593,
	619, 620, 264, 403, 605, 516, 613, 637, 227, 261,
	417, 501, 599, 490, 395, 575, 576, 329, 489, 296,
	203, 367, 625, 225, 476, 369, 243, 232, 581, 602,
	290, 453, 632, 214, 511, 591, 240, 480, 0, 0,
	640, 248, 500, 216, 588, 499, 391, 326, 327, 215,
	0, 454, 269, 294, 0, 0, 259, 412, 583, 584,
	257, 641, 229, 612, 221, 1282, 611, 405, 578, 589,
	392, 381, 220, 587, 390, 380, 334, 353, 354, 281,
	307, 444, 373, 445, 306, 308, 401, 400, 402, 208,
	600, 0, 209, 0, 495, 601, 642, 449, 213, 235,
	236, 238, 1298, 280, 284, 292, 295, 303, 304, 313,
	365, 416, 443, 439, 448, 1388, 573, 594, 606, 617,
	623, 624, 626, 627, 628, 629, 630, 633, 631, 404,
	311, 491, 333, 371, 1377, 1419, 422, 469, 241, 598,
	492, 201, 1292, 1297, 1290, 0, 255, 256, 1359, 569,
	1293, 1291, 1348, 1349, 1294, 1410, 1411, 1412, 1396, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 638, 502, 508,
	503, 504, 505, 506, 507, 0, 509, 1381, 1286, 0,
	1295, 1296, 1390, 585, 586, 661, 382, 482, 595, 335,
	347, 350, 340, 359, 0, 360, 336, 337, 342, 344,
	345, 346, 351, 352, 356, 362, 250, 211, 388, 396,
	572, 312, 217, 218, 219, 518, 519, 520, 521, 609,
	610, 614, 206, 459, 460, 461, 462, 293, 604, 309,
	465, 464, 331, 332, 377, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 1352, 198, 222, 366, 1415, 451, 289, 639,
	608, 603, 207, 224, 1289, 263, 1301, 1309, 1315, 1323,
	1324, 1336, 1339, 1340, 1341, 1342, 1360, 1361, 1363, 1371,
	1373, 1376, 1378, 1385, 1397, 1418, 200, 202, 210, 223,
	233, 237, 244, 262, 277, 279, 286, 299, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 484, 485, 486, 487, 488, 496,
	497, 510, 580, 582, 597, 615, 621, 477, 301, 302,
	441, 442, 314, 315, 635, 636, 300, 592, 622, 590,
	634, 616, 435, 376, 1351, 1357, 379, 282, 305, 320,
	1366, 607, 498, 228, 463, 291, 252, 1384, 1386, 212,
	247, 231, 260, 275, 278, 324, 389, 397, 426, 431,
	297, 272, 245, 456, 242, 481, 513, 514, 515, 517,
	393, 267, 430, 1347, 1375, 374, 570, 571, 316, 394,
	0, 0, 0, 0, 0, 0, 522, 0, 763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 751, 0, 0, 0, 271, 756, 0,
	0, 0, 364, 268, 0, 0, 427, 0, 205, 0,
	483, 253, 375, 372, 577, 283, 274, 270, 251, 317,
	383, 425, 512, 419, 762, 368, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 758, 759, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 249, 325, 204, 410,
	494, 287, 0, 95, 0, 0, 959, 943, 735, 909,
	947, 960, 961, 962, 963, 948, 0, 239, 949, 950,
	246, 951, 0, 908, 793, 795, 794, 858, 859, 860,
	861, 862, 863, 864, 791, 956, 964, 965, 0, 266,
	321, 273, 265, 574, 0, 0, 2187, 2188, 2189, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	731, 748, 0, 761, 0, 0, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 745, 746, 0, 0, 0,
	0, 903, 0, 747, 0, 0, 755, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 399, 258, 0, 450, 902, 0, 0, 618,
	0, 0, 900, 0, 0, 0, 0, 363, 0, 330,
	199, 226, 0, 0, 409, 458, 470, 0, 0, 0,
	953, 0, 468, 423, 596, 234, 285, 455, 429, 466,
	437, 288, 0, 0, 467, 370, 579, 447, 593, 619,
	620, 264, 403, 605, 516, 613, 637, 227, 261, 417,
	501, 599, 490, 395, 575, 576, 329, 489, 296, 203,
	367, 625, 225, 476, 369, 243, 232, 581, 602, 290,
	453, 632, 214, 511, 591, 240, 480, 0, 0, 640,
	248, 500, 216, 588, 499, 391, 326, 327, 215, 0,
	454, 269, 294, 0, 0, 259, 412, 954, 955, 257,
	641, 799, 612, 221, 0, 611, 405, 578, 589, 392,
	381, 220, 587, 390, 380, 334, 807, 808, 281, 307,
	884, 883, 882, 306, 308, 880, 881, 879, 208, 600,
	0, 209, 0, 495, 601, 642, 449, 213, 235, 236,
	238, 0, 280, 284, 292, 295, 303, 304, 313, 365,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 311,
	491, 333, 371, 0, 0, 422, 469, 241, 598, 492,
	890, 912, 901, 767, 768, 891, 892, 916, 893, 770,
	771, 913, 914, 764, 765, 769, 915, 917, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 904, 754, 753, 0,
	760, 0, 789, 790, 792, 796, 797, 798, 809, 856,
	857, 865, 867, 868, 866, 869, 870, 871, 874, 875,
	876, 877, 872, 873, 878, 772, 776, 773, 774, 775,
	787, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 788, 927, 928, 929, 930, 931, 932, 802, 806,
	805, 803, 804, 800, 801, 828, 827, 829, 830, 831,
	832, 833, 834, 836, 835, 837, 838, 839, 840, 841,
	842, 810, 811, 814, 815, 813, 812, 816, 825, 826,
	817, 818, 819, 820, 821, 822, 824, 823, 843, 844,
	845, 846, 847, 849, 848, 852, 853, 851, 850, 855,
	854, 752, 198, 222, 366, 0, 451, 289, 639, 608,
	603, 207, 224, 918, 263, 919, 0, 923, 0, 0,
	0, 925, 924, 0, 926, 888, 887, 0, 0, 920,
	921, 0, 922, 0, 0, 200, 202, 210, 223, 233,
	237, 244, 262, 277, 279, 286, 299, 310, 318, 319,
	322, 328, 378, 384, 385, 386, 387, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 615, 621, 477, 933, 934, 935,
	936, 937, 938, 939, 940, 300, 592, 622, 590, 634,
	616, 435, 376, 0, 0, 379, 282, 305, 320, 0,
	607, 498, 228, 463, 291, 252, 958, 0, 212, 247,
	231, 260, 275, 278, 324, 389, 397, 426, 431, 297,
	272, 245, 456, 242, 481, 513, 514, 515, 517, 393,
	267, 430, 394, 0, 374, 570, 571, 316, 0, 522,
	0, 763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 751, 0, 0, 0,
	271, 756, 0, 0, 0, 364, 268, 0, 0, 427,
	0, 205, 0, 483, 253, 375, 372, 577, 283, 274,
	270, 251, 317, 383, 425, 512, 419, 762, 368, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 758, 759,
	0, 0, 0, 0, 0, 0, 2393, 0, 323, 249,
	325, 204, 410, 494, 287, 0, 95, 0, 0, 959,
	943, 735, 909, 947, 960, 961, 962, 963, 948, 0,
	239, 949, 950, 246, 951, 0, 908, 793, 795, 794,
	858, 859, 860, 861, 862, 863, 864, 791, 956, 964,
	965, 2394, 266, 321, 273, 265, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 731, 748, 0, 761, 0, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 746,
	0, 0, 0, 0, 903, 0, 747, 0, 0, 755,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 757, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 399, 258, 0, 450, 902,
	0, 0, 618, 0, 0, 900, 0, 0, 0, 0,
	363, 0, 330, 199, 226, 0, 0, 409, 458, 470,
	0, 0, 0, 953, 0, 468, 423, 596, 234, 285,
	455, 429, 466, 437, 288, 0, 0, 467, 370, 579,
	447, 593, 619, 620, 264, 403, 605, 516, 613, 637,
	227, 261, 417, 501, 599, 490, 395, 575, 576, 329,
	489, 296, 203, 367, 625, 225, 476, 369, 243, 232,
	581, 602, 290, 453, 632, 214, 511, 591, 240, 480,
	0, 0, 640, 248, 500, 216, 588, 499, 391, 326,
	327, 215, 0, 454, 269, 294, 0, 0, 259, 412,
	954, 955, 257, 641, 799, 612, 221, 0, 611, 405,
	578, 589, 392, 381, 220, 587, 390, 380, 334, 807,
	808, 281, 307, 884, 883, 882, 306, 308, 880, 881,
	879, 208, 600, 0, 209, 0, 495, 601, 642, 449,
	213, 235, 236, 238, 0, 280, 284, 292, 295, 303,
	304, 313, 365, 416, 443, 439, 448, 0, 573, 594,
	606, 617, 623, 624, 626, 627, 628, 629, 630, 633,
	631, 404, 311, 491, 333, 371, 0, 0, 422, 469,
	241, 598, 492, 890, 912, 901, 767, 768, 891, 892,
	916, 893, 770, 771, 913, 914, 764, 765, 769, 915,
	917, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 638,
	502, 508, 503, 504, 505, 506, 507, 0, 509, 904,
	754, 753, 0, 760, 0, 789, 790, 792, 796, 797,
	798, 809, 856, 857, 865, 867, 868, 866, 869, 870,
	871, 874, 875, 876, 877, 872, 873, 878, 772, 776,
	773, 774, 775, 787, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 788, 927, 928, 929, 930, 931,
	932, 802, 806, 805, 803, 804, 800, 801, 828, 827,
	829, 830, 831, 832, 833, 834, 836, 835, 837, 838,
	839, 840, 841, 842, 810, 811, 814, 815, 813, 812,
	816, 825, 826, 817, 818, 819, 820, 821, 822, 824,
	823, 843, 844, 845, 846, 847, 849, 848, 852, 853,
	851, 850, 855, 854, 752, 198, 222, 366, 0, 451,
	289, 639, 608, 603, 207, 224, 918, 263, 919, 0,
	923, 0, 0, 0, 925, 924, 0, 926, 888, 887,
	0, 0, 920, 921, 0, 922, 0, 0, 200, 202,
	210, 223, 233, 237, 244, 262, 277, 279, 286, 299,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 484, 485, 486, 487,
	488, 496, 497, 510, 580, 582, 597, 615, 621, 477,
	933, 934, 935, 936, 937, 938, 939, 940, 300, 592,
	622, 590, 634, 616, 435, 376, 0, 0, 379, 282,
	305, 320, 0, 607, 498, 228, 463, 291, 252, 958,
	0, 212, 247, 231, 260, 275, 278, 324, 389, 397,
	426, 431, 297, 272, 245, 456, 242, 481, 513, 514,
	515, 517, 393, 267, 430, 394, 0, 374, 570, 571,
	316, 86, 522, 0, 763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 751,
	0, 0, 0, 271, 756, 0, 0, 0, 364, 268,
	0, 0, 427, 0, 205, 0, 483, 253, 375, 372,
	577, 283, 274, 270, 251, 317, 383, 425, 512, 419,
	762, 368, 0, 0, 493, 398, 0, 0, 0, 0,
	0, 758, 759, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 249, 325, 204, 410, 494, 287, 0, 95,
	0, 0, 959, 943, 735, 909, 947, 960, 961, 962,
	963, 948, 0, 239, 949, 950, 246, 951, 0, 908,
	793, 795, 794, 858, 859, 860, 861, 862, 863, 864,
	791, 956, 964, 965, 0, 266, 321, 273, 265, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 731, 748, 0, 761,
	0, 0, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 745, 746, 0, 0, 0, 0, 903, 0, 747,
	0, 0, 755, 966, 967, 968, 969, 970, 971, 972,
	973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 399, 258,
	0, 450, 902, 0, 0, 618, 0, 0, 900, 0,
	0, 0, 0, 363, 0, 330, 199, 226, 0, 0,
	409, 458, 470, 0, 0, 0, 953, 0, 468, 423,
	596, 234, 285, 455, 429, 466, 437, 288, 0, 0,
	467, 370, 579, 447, 593, 619, 620, 264, 403, 605,
	516, 613, 637, 227, 261, 417, 501, 599, 490, 395,
	575, 576, 329, 489, 296, 203, 367, 625, 225, 476,
	369, 243, 232, 581, 602, 290, 453, 632, 214, 511,
	591, 240, 480, 0, 0, 640, 248, 500, 216, 588,
	499, 391, 326, 327, 215, 0, 454, 269, 294, 0,
	0, 259, 412, 954, 955, 257, 641, 799, 612, 221,
	0, 611, 405, 578, 589, 392, 381, 220, 587, 390,
	380, 334, 807, 808, 281, 307, 884, 883, 882, 306,
	308, 880, 881, 879, 208, 600, 0, 209, 0, 495,
	601, 642, 449, 213, 235, 236, 238, 0, 280, 284,
	292, 295, 303, 304, 313, 365, 416, 443, 439, 448,
	0, 573, 594, 606, 617, 623, 624, 626, 627, 628,
	629, 630, 633, 631, 404, 311, 491, 333, 371, 0,
	0, 422, 469, 241, 598, 492, 890, 912, 901, 767,
	768, 891, 892, 916, 893, 770, 771, 913, 914, 764,
	765, 769, 915, 917, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 638, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 904, 754, 753, 0, 760, 0, 789, 790,
	792, 796, 797, 798, 809, 856, 857, 865, 867, 868,
	866, 869, 870, 871, 874, 875, 876, 877, 872, 873,
	878, 772, 776, 773, 774, 775, 787, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 788, 927, 928,
	929, 930, 931, 932, 802, 806, 805, 803, 804, 800,
	801, 828, 827, 829, 830, 831, 832, 833, 834, 836,
	835, 837, 838, 839, 840, 841, 842, 810, 811, 814,
	815, 813, 812, 816, 825, 826, 817, 818, 819, 820,
	821, 822, 824, 823, 843, 844, 845, 846, 847, 849,
	848, 852, 853, 851, 850, 855, 854, 752, 198, 222,
	366, 94, 451, 289, 639, 608, 603, 207, 224, 918,
	263, 919, 0, 923, 0, 0, 0, 925, 924, 0,
	926, 888, 887, 0, 0, 920, 921, 0, 922, 0,
	0, 200, 202, 210, 223, 233, 237, 244, 262, 277,
	279, 286, 299, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	615, 621, 477, 933, 934, 935, 936, 937, 938, 939,
	940, 300, 592, 622, 590, 634, 616, 435, 376, 0,
	0, 379, 282, 305, 320, 0, 607, 498, 228, 463,
	291, 252, 958, 0, 212, 247, 231, 260, 275, 278,
	324, 389, 397, 426, 431, 297, 272, 245, 456, 242,
	481, 513, 514, 515, 517, 393, 267, 430, 394, 0,
	374, 570, 571, 316, 0, 522, 0, 763, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 751, 0, 0, 0, 271, 756, 0, 0,
	0, 364, 268, 0, 0, 427, 0, 205, 0, 483,
	253, 375, 372, 577, 283, 274, 270, 251, 317, 383,
	425, 512, 419, 762, 368, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 758, 759, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 249, 325, 204, 410, 494,
	287, 0, 95, 0, 0, 959, 943, 735, 909, 947,
	960, 961, 962, 963, 948, 0, 239, 949, 950, 246,
	951, 0, 908, 793, 795, 794, 858, 859, 860, 861,
	862, 863, 864, 791, 956, 964, 965, 0, 266, 321,
	273, 265, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 731,
	748, 0, 761, 0, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 746, 0, 0, 0, 0,
	903, 0, 747, 0, 0, 755, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 399, 258, 0, 450, 902, 0, 0, 618, 0,
	0, 900, 0, 0, 0, 0, 363, 0, 330, 199,
	226, 0, 0, 409, 458, 470, 0, 0, 0, 953,
	0, 468, 423, 596, 234, 285, 455, 429, 466, 437,
	288, 4000, 0, 467, 370, 579, 447, 593, 619, 620,
	264, 403, 605, 516, 613, 637, 227, 261, 417, 501,
	599, 490, 395, 575, 576, 329, 489, 296, 203, 367,
	625, 225, 476, 369, 243, 232, 581, 602, 290, 453,
	632, 214, 511, 591, 240, 480, 0, 0, 640, 248,
	500, 216, 588, 499, 391, 326, 327, 215, 0, 454,
	269, 294, 0, 0, 259, 412, 954, 955, 257, 641,
	799, 612, 221, 0, 611, 405, 578, 589, 392, 381,
	220, 587, 390, 380, 334, 807, 808, 281, 307, 884,
	883, 882, 306, 308, 880, 881, 879, 208, 600, 0,
	209, 0, 495, 601, 642, 449, 213, 235, 236, 238,
	0, 280, 284, 292, 295, 303, 304, 313, 365, 416,
	443, 439, 448, 0, 573, 594, 606, 617, 623, 624,
	626, 627, 628, 629, 630, 633, 631, 404, 311, 491,
	333, 371, 0, 0, 422, 469, 241, 598, 492, 890,
	912, 901, 767, 768, 891, 892, 916, 893, 770, 771,
	913, 914, 764, 765, 769, 915, 917, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 638, 502, 508, 503, 504,
	505, 506, 507, 0, 509, 904, 754, 753, 0, 760,
	0, 789, 790, 792, 796, 797, 798, 809, 856, 857,
	865, 867, 868, 866, 869, 870, 871, 874, 875, 876,
	877, 872, 873, 878, 772, 776, 773, 774, 775, 787,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	788, 927, 928, 929, 930, 931, 932, 802, 806, 805,
	803, 804, 800, 801, 828, 827, 829, 830, 831, 832,
	833, 834, 836, 835, 837, 838, 839, 840, 841, 842,
	810, 811, 814, 815, 813, 812, 816, 825, 826, 817,
	818, 819, 820, 821, 822, 824, 823, 843, 844, 845,
	846, 847, 849, 848, 852, 853, 851, 850, 855, 854,
	752, 198, 222, 366, 0, 451, 289, 639, 608, 603,
	207, 224, 918, 263, 919, 0, 923, 0, 0, 0,
	925, 924, 0, 926, 888, 887, 0, 0, 920, 921,
	0, 922, 0, 0, 200, 202, 210, 223, 233, 237,
	244, 262, 277, 279, 286, 299, 310, 318, 319, 322,
	328, 378, 384, 385, 386, 387, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 484, 485, 486, 487, 488, 496, 497, 510,
	580, 582, 597, 615, 621, 477, 933, 934, 935, 936,
	937, 938, 939, 940, 300, 592, 622, 590, 634, 616,
	435, 376, 0, 0, 379, 282, 305, 320, 0, 607,
	498, 228, 463, 291, 252, 958, 0, 212, 247, 231,
	260, 275, 278, 324, 389, 397, 426, 431, 297, 272,
	245, 456, 242, 481, 513, 514, 515, 517, 393, 267,
	430, 394, 0, 374, 570, 571, 316, 0, 522, 0,
	763, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 751, 0, 0, 0, 271,
	756, 0, 0, 0, 364, 268, 0, 0, 427, 0,
	205, 0, 483, 253, 375, 372, 577, 283, 274, 270,
	251, 317, 383, 425, 512, 419, 762, 368, 0, 0,
	493, 398, 0, 0, 0, 0, 0, 758, 759, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 249, 325,
	204, 410, 494, 287, 0, 95, 0, 1726, 959, 943,
	735, 909, 947, 960, 961, 962, 963, 948, 0, 239,
	949, 950, 246, 951, 0, 908, 793, 795, 794, 858,
	859, 860, 861, 862, 863, 864, 791, 956, 964, 965,
	0, 266, 321, 273, 265, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 731, 748, 0, 761, 0, 0, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 745, 746, 0,
	0, 0, 0, 903, 0, 747, 0, 0, 755, 966,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 399, 258, 0, 450, 902, 0,
	0, 618, 0, 0, 900, 0, 0, 0, 0, 363,
	0, 330, 199, 226, 0, 0, 409, 458, 470, 0,
	0, 0, 953, 0, 468, 423, 596, 234, 285, 455,
	429, 466, 437, 288, 0, 0, 467, 370, 579, 447,
	593, 619, 620, 264, 403, 605, 516, 613, 637, 227,
	261, 417, 501, 599, 490, 395, 575, 576, 329, 489,
	296, 203, 367, 625, 225, 476, 369, 243, 232, 581,
	602, 290, 453, 632, 214, 511, 591, 240, 480, 0,
	0, 640, 248, 500, 216, 588, 499, 391, 326, 327,
	215, 0, 454, 269, 294, 0, 0, 259, 412, 954,
	955, 257, 641, 799, 612, 221, 0, 611, 405, 578,
	589, 392, 381, 220, 587, 390, 380, 334, 807, 808,
	281, 307, 884, 883, 882, 306, 308, 880, 881, 879,
	208, 600, 0, 209, 0, 495, 601, 642, 449, 213,
	235, 236, 238, 0, 280, 284, 292, 295, 303, 304,
	313, 365, 416, 443, 439, 448, 0, 573, 594, 606,
	617, 623, 624, 626, 627, 628, 629, 630, 633, 631,
	404, 311, 491, 333, 371, 0, 0, 422, 469, 241,
	598, 492, 890, 912, 901, 767, 768, 891, 892, 916,
	893, 770, 771, 913, 914, 764, 765, 769, 915, 917,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 638, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 904, 754,
	753, 0, 760, 0, 789, 790, 792, 796, 797, 798,
	809, 856, 857, 865, 867, 868, 866, 869, 870, 871,
	874, 875, 876, 877, 872, 873, 878, 772, 776, 773,
	774, 775, 787, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 788, 927, 928, 929, 930, 931, 932,
	802, 806, 805, 803, 804, 800, 801, 828, 827, 829,
	830, 831, 832, 833, 834, 836, 835, 837, 838, 839,
	840, 841, 842, 810, 811, 814, 815, 813, 812, 816,
	825, 826, 817, 818, 819, 820, 821, 822, 824, 823,
	843, 844, 845, 846, 847, 849, 848, 852, 853, 851,
	850, 855, 854, 752, 198, 222, 366, 0, 451, 289,
	639, 608, 603, 207, 224, 918, 263, 919, 0, 923,
	0, 0, 0, 925, 924, 0, 926, 888, 887, 0,
	0, 920, 921, 0, 922, 0, 0, 200, 202, 210,
	223, 233, 237, 244, 262, 277, 279, 286, 299, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 933,
	934, 935, 936, 937, 938, 939, 940, 300, 592, 622,
	590, 634, 616, 435, 376, 0, 0, 379, 282, 305,
	320, 0, 607, 498, 228, 463, 291, 252, 958, 0,
	212, 247, 231, 260, 275, 278, 324, 389, 397, 426,
	431, 297, 272, 245, 456, 242, 481, 513, 514, 515,
	517, 393, 267, 430, 394, 0, 374, 570, 571, 316,
	0, 522, 0, 763, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 751, 0,
	0, 0, 271, 756, 0, 0, 0, 364, 268, 0,
	0, 427, 0, 205, 0, 483, 253, 375, 372, 577,
	283, 274, 270, 251, 317, 383, 425, 512, 419, 762,
	368, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	758, 759, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 249, 325, 204, 410, 494, 287, 0, 95, 0,
	0, 959, 943, 735, 909, 947, 960, 961, 962, 963,
	948, 0, 239, 949, 950, 246, 951, 0, 908, 793,
	795, 794, 858, 859, 860, 861, 862, 863, 864, 791,
	956, 964, 965, 0, 266, 321, 273, 265, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 731, 748, 0, 761, 0,
	0, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	745, 746, 1055, 0, 0, 0, 903, 0, 747, 0,
	0, 755, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 757, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 399, 258, 0,
	450, 902, 0, 0, 618, 0, 0, 900, 0, 0,
	0, 0, 363, 0, 330, 199, 226, 0, 0, 409,
	458, 470, 0, 0, 0, 953, 0, 468, 423, 596,
	234, 285, 455, 429, 466, 437, 288, 0, 0, 467,
	370, 579, 447, 593, 619, 620, 264, 403, 605, 516,
	613, 637, 227, 261, 417, 501, 599, 490, 395, 575,
	576, 329, 489, 296, 203, 367, 625, 225, 476, 369,
	243, 232, 581, 602, 290, 453, 632, 214, 511, 591,
	240, 480, 0, 0, 640, 248, 500, 216, 588, 499,
	391, 326, 327, 215, 0, 454, 269, 294, 0, 0,
	259, 412, 954, 955, 257, 641, 799, 612, 221, 0,
	611, 405, 578, 589, 392, 381, 220, 587, 390, 380,
	334, 807, 808, 281, 307, 884, 883, 882, 306, 308,
	880, 881, 879, 208, 600, 0, 209, 0, 495, 601,
	642, 449, 213, 235, 236, 238, 0, 280, 284, 292,
	295, 303, 304, 313, 365, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 311, 491, 333, 371, 0, 0,
	422, 469, 241, 598, 492, 890, 912, 901, 767, 768,
	891, 892, 916, 893, 770, 771, 913, 914, 764, 765,
	769, 915, 917, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 904, 754, 753, 0, 760, 0, 789, 790, 792,
	796, 797, 798, 809, 856, 857, 865, 867, 868, 866,
	869, 870, 871, 874, 875, 876, 877, 872, 873, 878,
	772, 776, 773, 774, 775, 787, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 788, 927, 928, 929,
	930, 931, 932, 802, 806, 805, 803, 804, 800, 801,
	828, 827, 829, 830, 831, 832, 833, 834, 836, 835,
	837, 838, 839, 840, 841, 842, 810, 811, 814, 815,
	813, 812, 816, 825, 826, 817, 818, 819, 820, 821,
	822, 824, 823, 843, 844, 845, 846, 847, 849, 848,
	852, 853, 851, 850, 855, 854, 752, 198, 222, 366,
	0, 451, 289, 639, 608, 603, 207, 224, 918, 263,
	919, 0, 923, 0, 0, 0, 925, 924, 0, 926,
	888, 887, 0, 0, 920, 921, 0, 922, 0, 0,
	200, 202, 210, 223, 233, 237, 244, 262, 277, 279,
	286, 299, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 484, 485,
	486, 487, 488, 496, 497, 510, 580, 582, 597, 615,
	621, 477, 933, 934, 935, 936, 937, 938, 939, 940,
	300, 592, 622, 590, 634, 616, 435, 376, 0, 0,
	379, 282, 305, 320, 0, 607, 498, 228, 463, 291,
	252, 958, 0, 212, 247, 231, 260, 275, 278, 324,
	389, 397, 426, 431, 297, 272, 245, 456, 242, 481,
	513, 514, 515, 517, 393, 267, 430, 394, 0, 374,
	570, 571, 316, 0, 522, 0, 763, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 751, 0, 0, 0, 271, 756, 0, 0, 0,
	364, 268, 0, 0, 427, 0, 205, 0, 483, 253,
	375, 372, 577, 283, 274, 270, 251, 317, 383, 425,
	512, 419, 762, 368, 0, 0, 493, 398, 0, 0,
	0, 0, 0, 758, 759, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 249, 325, 204, 410, 494, 287,
	0, 95, 0, 0, 959, 943, 735, 909, 947, 960,
	961, 962, 963, 948, 0, 239, 949, 950, 246, 951,
	0, 908, 793, 795, 794, 858, 859, 860, 861, 862,
	863, 864, 791, 956, 964, 965, 0, 266, 321, 273,
	265, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 731, 748,
	0, 761, 0, 0, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 745, 746, 0, 0, 0, 0, 903,
	0, 747, 0, 0, 755, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	399, 258, 0, 450, 902, 0, 0, 618, 0, 0,
	900, 0, 0, 0, 0, 363, 0, 330, 199, 226,
	0, 0, 409, 458, 470, 0, 0, 0, 953, 0,
	468, 423, 596, 234, 285, 455, 429, 466, 437, 288,
	0, 0, 467, 370, 579, 447, 593, 619, 620, 264,
	403, 605, 516, 613, 637, 227, 261, 417, 501, 599,
	490, 395, 575, 576, 329, 489, 296, 203, 367, 625,
	225, 476, 369, 243, 232, 581, 602, 290, 453, 632,
	214, 511, 591, 240, 480, 0, 0, 640, 248, 500,
	216, 588, 499, 391, 326, 327, 215, 0, 454, 269,
	294, 0, 0, 259, 412, 954, 955, 257, 641, 799,
	612, 221, 0, 611, 405, 578, 589, 392, 381, 220,
	587, 390, 380, 334, 807, 808, 281, 307, 884, 883,
	882, 306, 308, 880, 881, 879, 208, 600, 0, 209,
	0, 495, 601, 642, 449, 213, 235, 236, 238, 0,
	280, 284, 292, 295, 303, 304, 313, 365, 416, 443,
	439, 448, 0, 573, 594, 606, 617, 623, 624, 626,
	627, 628, 629, 630, 633, 631, 404, 311, 491, 333,
	371, 0, 0, 422, 469, 241, 598, 492, 890, 912,
	901, 767, 768, 891, 892, 916, 893, 770, 771, 913,
	914, 764, 765, 769, 915, 917, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 638, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 904, 754, 753, 0, 760, 0,
	789, 790, 792, 796, 797, 798, 809, 856, 857, 865,
	867, 868, 866, 869, 870, 871, 874, 875, 876, 877,
	872, 873, 878, 772, 776, 773, 774, 775, 787, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 788,
	927, 928, 929, 930, 931, 932, 802, 806, 805, 803,
	804, 800, 801, 828, 827, 829, 830, 831, 832, 833,
	834, 836, 835, 837, 838, 839, 840, 841, 842, 810,
	811, 814, 815, 813, 812, 816, 825, 826, 817, 818,
	819, 820, 821, 822, 824, 823, 843, 844, 845, 846,
	847, 849, 848, 852, 853, 851, 850, 855, 854, 752,
	198, 222, 366, 0, 451, 289, 639, 608, 603, 207,
	224, 918, 263, 919, 0, 923, 0, 0, 0, 925,
	924, 0, 926, 888, 887, 0, 0, 920, 921, 0,
	922, 0, 0, 200, 202, 210, 223, 233, 237, 244,
	262, 277, 279, 286, 299, 310, 318, 319, 322, 328,
	378, 384, 385, 386, 387, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 615, 621, 477, 933, 934, 935, 936, 937,
	938, 939, 940, 300, 592, 622, 590, 634, 616, 435,
	376, 0, 0, 379, 282, 305, 320, 0, 607, 498,
	228, 463, 291, 252, 958, 0, 212, 247, 231, 260,
	275, 278, 324, 389, 397, 426, 431, 297, 272, 245,
	456, 242, 481, 513, 514, 515, 517, 393, 267, 430,
	394, 0, 374, 570, 571, 316, 0, 522, 0, 763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 751, 0, 0, 0, 271, 756,
	0, 0, 0, 364, 268, 0, 0, 427, 0, 205,
	0, 483, 253, 375, 372, 577, 283, 274, 270, 251,
	317, 383, 425, 512, 419, 762, 368, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 758, 759, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 249, 325, 204,
	410, 494, 287, 0, 95, 0, 0, 959, 943, 735,
	909, 947, 960, 961, 962, 963, 948, 0, 239, 949,
	950, 246, 951, 0, 908, 793, 795, 794, 858, 859,
	860, 861, 862, 863, 864, 791, 956, 964, 965, 0,
	266, 321, 273, 265, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 731, 748, 0, 761, 0, 0, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 745, 746, 0, 0,
	0, 0, 903, 0, 747, 0, 0, 755, 966, 967,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	3105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 399, 258, 0, 450, 902, 0, 0,
	618, 0, 0, 900, 0, 0, 0, 0, 363, 0,
	330, 199, 226, 0, 0, 409, 458, 470, 0, 0,
	0, 953, 0, 468, 423, 596, 234, 285, 455, 429,
	466, 437, 288, 0, 0, 467, 370, 579, 447, 593,
	619, 620, 264, 403, 605, 516, 613, 637, 227, 261,
	417, 501, 599, 490, 395, 575, 576, 329, 489, 296,
	203, 367, 625, 225, 476, 369, 243, 232, 581, 602,
	290, 453, 632, 214, 511, 591, 240, 480, 0, 0,
	640, 248, 500, 216, 588, 499, 391, 326, 327, 215,
	0, 454, 269, 294, 0, 0, 259, 412, 954, 955,
	257, 641, 799, 612, 221, 0, 611, 405, 578, 589,
	392, 381, 220, 587, 390, 380, 334, 807, 808, 281,
	307, 884, 883, 882, 306, 308, 880, 881, 879, 208,
	600, 0, 209, 0, 495, 601, 642, 449, 213, 235,
	236, 238, 0, 280, 284, 292, 295, 303, 304, 313,
	365, 416, 443, 439, 448, 0, 573, 594, 606, 617,
	623, 624, 626, 627, 628, 629, 630, 633, 631, 404,
	311, 491, 333, 371, 0, 0, 422, 469, 241, 598,
	492, 890, 912, 901, 767, 768, 891, 892, 916, 893,
	770, 771, 913, 914, 764, 765, 769, 915, 917, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 638, 502, 508,
	503, 504, 505, 506, 507, 0, 509, 904, 754, 753,
	0, 760, 0, 789, 790, 792, 796, 797, 798, 809,
	856, 857, 865, 867, 868, 866, 869, 870, 871, 874,
	875, 876, 877, 872, 873, 878, 772, 776, 773, 774,
	775, 787, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 788, 927, 928, 929, 930, 931, 932, 802,
	806, 805, 803, 804, 800, 801, 828, 827, 829, 830,
	831, 832, 833, 834, 836, 835, 837, 838, 839, 840,
	841, 842, 810, 811, 814, 815, 813, 812, 816, 825,
	826, 817, 818, 819, 820, 821, 822, 824, 823, 843,
	844, 845, 846, 847, 849, 848, 852, 853, 851, 850,
	855, 854, 752, 198, 222, 366, 0, 451, 289, 639,
	608, 603, 207, 224, 918, 263, 919, 0, 923, 0,
	0, 0, 925, 924, 0, 926, 888, 887, 0, 0,
	920, 921, 0, 922, 0, 0, 200, 202, 210, 223,
	233, 237, 244, 262, 277, 279, 286, 299, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 484, 485, 486, 487, 488, 496,
	497, 510, 580, 582, 597, 615, 621, 477, 933, 934,
	935, 936, 937, 938, 939, 940, 300, 592, 622, 590,
	634, 616, 435, 376, 0, 0, 379, 282, 305, 320,
	0, 607, 498, 228, 463, 291, 252, 958, 0, 212,
	247, 231, 260, 275, 278, 324, 389, 397, 426, 431,
	297, 272, 245, 456, 242, 481, 513, 514, 515, 517,
	393, 267, 430, 394, 0, 374, 570, 571, 316, 0,
	522, 0, 763, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 751, 0, 0,
	0, 271, 756, 0, 0, 0, 364, 268, 0, 0,
	427, 0, 205, 0, 483, 253, 375, 372, 577, 283,
	274, 270, 251, 317, 383, 425, 512, 419, 762, 368,
	0, 0, 493, 398, 0, 0, 0, 0, 0, 758,
	759, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	249, 325, 204, 410, 494, 287, 0, 95, 0, 0,
	959, 943, 735, 909, 947, 960, 961, 962, 963, 948,
	0, 239, 949, 950, 246, 951, 0, 908, 793, 795,
	794, 858, 859, 860, 861, 862, 863, 864, 791, 956,
	964, 965, 0, 266, 321, 273, 265, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 731, 748, 0, 761, 0, 0,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 745,
	746, 0, 0, 0, 0, 903, 0, 747, 0, 0,
	755, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 3101, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 399, 258, 0, 450,
	902, 0, 0, 618, 0, 0, 900, 0, 0, 0,
	0, 363, 0, 330, 199, 226, 0, 0, 409, 458,
	470, 0, 0, 0, 953, 0, 468, 423, 596, 234,
	285, 455, 429, 466, 437, 288, 0, 0, 467, 370,
	579, 447, 593, 619, 620, 264, 403, 605, 516, 613,
	637, 227, 261, 417, 501, 599, 490, 395, 575, 576,
	329, 489, 296, 203, 367, 625, 225, 476, 369, 243,
	232, 581, 602, 290, 453, 632, 214, 511, 591, 240,
	480, 0, 0, 640, 248, 500, 216, 588, 499, 391,
	326, 327, 215, 0, 454, 269, 294, 0, 0, 259,
	412, 954, 955, 257, 641, 799, 612, 221, 0, 611,
	405, 578, 589, 392, 381, 220, 587, 390, 380, 334,
	807, 808, 281, 307, 884, 883, 882, 306, 308, 880,
	881, 879, 208, 600, 0, 209, 0, 495, 601, 642,
	449, 213, 235, 236, 238, 0, 280, 284, 292, 295,
	303, 304, 313, 365, 416, 443, 439, 448, 0, 573,
	594, 606, 617, 623, 624, 626, 627, 628, 629, 630,
	633, 631, 404, 311, 491, 333, 371, 0, 0, 422,
	469, 241, 598, 492, 890, 912, 901, 767, 768, 891,
	892, 916, 893, 770, 771, 913, 914, 764, 765, 769,
	915, 917, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	638, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	904, 754, 753, 0, 760, 0, 789, 790, 792, 796,
	797, 798, 809, 856, 857, 865, 867, 868, 866, 869,
	870, 871, 874, 875, 876, 877, 872, 873, 878, 772,
	776, 773, 774, 775, 787, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 788, 927, 928, 929, 930,
	931, 932, 802, 806, 805, 803, 804, 800, 801, 828,
	827, 829, 830, 831, 832, 833, 834, 836, 835, 837,
	838, 839, 840, 841, 842, 810, 811, 814, 815, 813,
	812, 816, 825, 826, 817, 818, 819, 820, 821, 822,
	824, 823, 843, 844, 845, 846, 847, 849, 848, 852,
	853, 851, 850, 855, 854, 752, 198, 222, 366, 0,
	451, 289, 639, 608, 603, 207, 224, 918, 263, 919,
	0, 923, 0, 0, 0, 925, 924, 0, 926, 888,
	887, 0, 0, 920, 921, 0, 922, 0, 0, 200,
	202, 210, 223, 233, 237, 244, 262, 277, 279, 286,
	299, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 615, 621,
	477, 933, 934, 935, 936, 937, 938, 939, 940, 300,
	592, 622, 590, 634, 616, 435, 376, 0, 0, 379,
	282, 305, 320, 0, 607, 498, 228, 463, 291, 252,
	958, 0, 212, 247, 231, 260, 275, 278, 324, 389,
	397, 426, 431, 297, 272, 245, 456, 242, 481, 513,
	514, 515, 517, 393, 267, 430, 394, 0, 374, 570,
	571, 316, 0, 522, 0, 763, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	751, 0, 0, 0, 271, 756, 0, 0, 0, 364,
	268, 0, 0, 427, 0, 205, 0, 483, 253, 375,
	372, 577, 283, 274, 270, 251, 317, 383, 425, 512,
	419, 762, 368, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 758, 759, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 249, 325, 204, 410, 494, 287, 0,
	95, 0, 0, 959, 943, 1076, 909, 947, 960, 961,
	962, 963, 948, 0, 239, 949, 950, 246, 951, 0,
	908, 793, 795, 794, 858, 859, 860, 861, 862, 863,
	864, 791, 956, 964, 965, 0, 266, 321, 273, 265,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 748, 0,
	761, 0, 0, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 746, 0, 0, 0, 0, 903, 0,
	747, 0, 0, 755, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 757, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 399,
	258, 0, 450, 902, 0, 0, 618, 0, 0, 900,
	0, 0, 0, 0, 363, 0, 330, 199, 226, 0,
	0, 409, 458, 470, 0, 0, 0, 953, 0, 468,
	423, 596, 234, 285, 455, 429, 466, 437, 288, 0,
	0, 467, 370, 579, 447, 593, 619, 620, 264, 403,
	605, 516, 613, 637, 227, 261, 417, 501, 599, 490,
	395, 575, 576, 329, 489, 296, 203, 367, 625, 225,
	476, 369, 243, 232, 581, 602, 290, 453, 632, 214,
	511, 591, 240, 480, 0, 0, 640, 248, 500, 216,
	588, 499, 391, 326, 327, 215, 0, 454, 269, 294,
	0, 0, 259, 412, 954, 955, 257, 641, 799, 612,
	221, 0, 611, 405, 578, 589, 392, 381, 220, 587,
	390, 380, 334, 807, 808, 281, 307, 884, 883, 882,
	306, 308, 880, 881, 879, 208, 600, 0, 209, 0,
	495, 601, 642, 449, 213, 235, 236, 238, 0, 280,
	284, 292, 295, 303, 304, 313, 365, 416, 443, 439,
	448, 0, 573, 594, 606, 617, 623, 624, 626, 627,
	628, 629, 630, 633, 631, 404, 311, 491, 333, 371,
	0, 0, 422, 469, 241, 598, 492, 890, 912, 901,
	767, 768, 891, 892, 916, 893, 770, 771, 913, 914,
	764, 765, 769, 915, 917, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 638, 502, 508, 503, 504, 505, 506,
	507, 0, 509, 904, 754, 753, 0, 760, 0, 789,
	790, 792, 796, 797, 798, 809, 856, 857, 865, 867,
	868, 866, 869, 870, 871, 874, 875, 876, 877, 872,
	873, 878, 772, 776, 773, 774, 775, 787, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 788, 927,
	928, 929, 930, 931, 932, 802, 806, 805, 803, 804,
	800, 801, 828, 827, 829, 830, 831, 832, 833, 834,
	836, 835, 837, 838, 839, 840, 841, 842, 810, 811,
	814, 815, 813, 812, 816, 825, 826, 817, 818, 819,
	820, 821, 822, 824, 823, 843, 844, 845, 846, 847,
	849, 848, 852, 853, 851, 850, 855, 854, 752, 198,
	222, 366, 0, 451, 289, 639, 608, 603, 207, 224,
	918, 263, 919, 0, 923, 0, 0, 0, 925, 924,
	0, 926, 888, 887, 0, 0, 920, 921, 0, 922,
	0, 0, 200, 202, 210, 223, 233, 237, 244, 262,
	277, 279, 286, 299, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 933, 934, 935, 936, 937, 938,
	939, 940, 300, 592, 622, 590, 634, 616, 435, 376,
	0, 0, 379, 282, 305, 320, 0, 607, 498, 228,
	463, 291, 252, 958, 0, 212, 247, 231, 260, 275,
	278, 324, 389, 397, 426, 431, 297, 272, 245, 456,
	242, 481, 513, 514, 515, 517, 393, 267, 430, 394,
	0, 374, 570, 571, 316, 0, 522, 0, 763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 751, 0, 0, 0, 271, 756, 0,
	0, 0, 364, 268, 0, 0, 427, 0, 205, 0,
	483, 253, 375, 372, 577, 283, 274, 270, 251, 317,
	383, 425, 512, 419, 762, 368, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 758, 759, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 249, 325, 204, 410,
	494, 287, 0, 95, 0, 0, 959, 943, 1076, 909,
	947, 960, 961, 962, 963, 948, 0, 239, 949, 950,
	246, 951, 0, 908, 793, 795, 794, 858, 859, 860,
	861, 862, 863, 864, 791, 956, 964, 965, 0, 266,
	321, 273, 265, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 748, 0, 761, 0, 0, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 745, 746, 0, 0, 0,
	0, 903, 0, 747, 0, 0, 755, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 2081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 399, 258, 0, 450, 902, 0, 0, 618,
	0, 0, 900, 0, 0, 0, 0, 363, 0, 330,
	199, 226, 0, 0, 409, 458, 470, 0, 0, 0,
	953, 0, 468, 423, 596, 234, 285, 455, 429, 466,
	437, 288, 0, 0, 467, 370, 579, 447, 593, 619,
	620, 264, 403, 605, 516, 613, 637, 227, 261, 417,
	501, 599, 490, 395, 575, 576, 329, 489, 296, 203,
	367, 625, 225, 476, 369, 243, 232, 581, 602, 290,
	453, 632, 214, 511, 591, 240, 480, 0, 0, 640,
	248, 500, 216, 588, 499, 391, 326, 327, 215, 0,
	454, 269, 294, 0, 0, 259, 412, 954, 955, 257,
	641, 799, 612, 221, 0, 611, 405, 578, 589, 392,
	381, 220, 587, 390, 380, 334, 807, 808, 281, 307,
	884, 883, 882, 306, 308, 880, 881, 879, 208, 600,
	0, 209, 0, 495, 601, 642, 449, 213, 235, 236,
	238, 0, 280, 284, 292, 295, 303, 304, 313, 365,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 311,
	491, 333, 371, 0, 0, 422, 469, 241, 598, 492,
	890, 912, 901, 767, 768, 891, 892, 916, 893, 770,
	771, 913, 914, 764, 765, 769, 915, 917, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 904, 754, 753, 0,
	760, 0, 789, 790, 792, 796, 797, 798, 809, 856,
	857, 865, 867, 868, 866, 869, 870, 871, 874, 875,
	876, 877, 872, 873, 878, 772, 776, 773, 774, 775,
	787, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 788, 927, 928, 929, 930, 931, 932, 802, 806,
	805, 803, 804, 800, 801, 828, 827, 829, 830, 831,
	832, 833, 834, 836, 835, 837, 838, 839, 840, 841,
	842, 810, 811, 814, 815, 813, 812, 816, 825, 826,
	817, 818, 819, 820, 821, 822, 824, 823, 843, 844,
	845, 846, 847, 849, 848, 852, 853, 851, 850, 855,
	854, 752, 198, 222, 366, 0, 451, 289, 639, 608,
	603, 207, 224, 918, 263, 919, 0, 923, 0, 0,
	0, 925, 924, 0, 926, 888, 887, 0, 0, 920,
	921, 0, 922, 0, 0, 200, 202, 210, 223, 233,
	237, 244, 262, 277, 279, 286, 299, 310, 318, 319,
	322, 328, 378, 384, 385, 386, 387, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 615, 621, 477, 933, 934, 935,
	936, 937, 938, 939, 940, 300, 592, 622, 590, 634,
	616, 435, 376, 0, 0, 379, 282, 305, 320, 0,
	607, 498, 228, 463, 291, 252, 958, 0, 212, 247,
	231, 260, 275, 278, 324, 389, 397, 426, 431, 297,
	272, 245, 456, 242, 481, 513, 514, 515, 517, 393,
	267, 430, 394, 0, 374, 570, 571, 316, 0, 522,
	0, 763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 751, 0, 0, 0,
	271, 756, 0, 0, 0, 364, 268, 0, 0, 427,
	0, 205, 0, 483, 253, 375, 372, 577, 283, 274,
	270, 251, 317, 383, 425, 512, 419, 762, 368, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 758, 759,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 249,
	325, 204, 410, 494, 287, 0, 95, 0, 0, 959,
	943, 1076, 909, 947, 960, 961, 962, 963, 948, 0,
	239, 949, 950, 246, 951, 0, 908, 793, 795, 794,
	858, 859, 860, 861, 862, 863, 864, 791, 956, 964,
	965, 0, 266, 321, 273, 265, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 748, 0, 761, 0, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 746,
	0, 0, 0, 0, 903, 0, 747, 0, 0, 755,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 2079, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 399, 258, 0, 450, 902,
	0, 0, 618, 0, 0, 900, 0, 0, 0, 0,
	363, 0, 330, 199, 226, 0, 0, 409, 458, 470,
	0, 0, 0, 953, 0, 468, 423, 596, 234, 285,
	455, 429, 466, 437, 288, 0, 0, 467, 370, 579,
	447, 593, 619, 620, 264, 403, 605, 516, 613, 637,
	227, 261, 417, 501, 599, 490, 395, 575, 576, 329,
	489, 296, 203, 367, 625, 225, 476, 369, 243, 232,
	581, 602, 290, 453, 632, 214, 511, 591, 240, 480,
	0, 0, 640, 248, 500, 216, 588, 499, 391, 326,
	327, 215, 0, 454, 269, 294, 0, 0, 259, 412,
	954, 955, 257, 641, 799, 612, 221, 0, 611, 405,
	578, 589, 392, 381, 220, 587, 390, 380, 334, 807,
	808, 281, 307, 884, 883, 882, 306, 308, 880, 881,
	879, 208, 600, 0, 209, 0, 495, 601, 642, 449,
	213, 235, 236, 238, 0, 280, 284, 292, 295, 303,
	304, 313, 365, 416, 443, 439, 448, 0, 573, 594,
	606, 617, 623, 624, 626, 627, 628, 629, 630, 633,
	631, 404, 311, 491, 333, 371, 0, 0, 422, 469,
	241, 598, 492, 890, 912, 901, 767, 768, 891, 892,
	916, 893, 770, 771, 913, 914, 764, 765, 769, 915,
	917, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 638,
	502, 508, 503, 504, 505, 506, 507, 0, 509, 904,
	754, 753, 0, 760, 0, 789, 790, 792, 796, 797,
	798, 809, 856, 857, 865, 867, 868, 866, 869, 870,
	871, 874, 875, 876, 877, 872, 873, 878, 772, 776,
	773, 774, 775, 787, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 788, 927, 928, 929, 930, 931,
	932, 802, 806, 805, 803, 804, 800, 801, 828, 827,
	829, 830, 831, 832, 833, 834, 836, 835, 837, 838,
	839, 840, 841, 842, 810, 811, 814, 815, 813, 812,
	816, 825, 826, 817, 818, 819, 820, 821, 822, 824,
	823, 843, 844, 845, 846, 847, 849, 848, 852, 853,
	851, 850, 855, 854, 752, 198, 222, 366, 0, 451,
	289, 639, 608, 603, 207, 224, 918, 263, 919, 0,
	923, 0, 0, 0, 925, 924, 0, 926, 888, 887,
	0, 0, 920, 921, 0, 922, 0, 0, 200, 202,
	210, 223, 233, 237, 244, 262, 277, 279, 286, 299,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 484, 485, 486, 487,
	488, 496, 497, 510, 580, 582, 597, 615, 621, 477,
	933, 934, 935, 936, 937, 938, 939, 940, 300, 592,
	622, 590, 634, 616, 435, 376, 0, 0, 379, 282,
	305, 320, 0, 607, 498, 228, 463, 291, 252, 958,
	0, 212, 247, 231, 260, 275, 278, 324, 389, 397,
	426, 431, 297, 272, 245, 456, 242, 481, 513, 514,
	515, 517, 393, 267, 430, 394, 0, 374, 570, 571,
	316, 0, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 364, 268,
	0, 0, 427, 0, 205, 0, 483, 253, 375, 372,
	577, 283, 274, 270, 251, 317, 383, 425, 512, 419,
	0, 368, 0, 0, 493, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 249, 325, 204, 410, 494, 287, 0, 0,
	0, 0, 0, 709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 246, 0, 0, 0,
	349, 358, 357, 338, 339, 341, 343, 348, 355, 361,
	0, 0, 0, 0, 0, 266, 321, 273, 265, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	1127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 399, 258,
	0, 450, 0, 0, 1126, 618, 0, 0, 0, 0,
	0, 1123, 1124, 363, 1084, 330, 199, 226, 1117, 1121,
	409, 458, 470, 0, 0, 0, 254, 0, 468, 423,
	596, 234, 285, 455, 429, 466, 437, 288, 0, 0,
	467, 370, 579, 447, 593, 619, 620, 264, 403, 605,
	516, 613, 637, 227, 261, 417, 501, 599, 490, 395,
	575, 576, 329, 489, 296, 203, 367, 625, 225, 476,
	369, 243, 232, 581, 602, 290, 453, 632, 214, 511,
	591, 240, 480, 0, 0, 640, 248, 500, 216, 588,
	499, 391, 326, 327, 215, 0, 454, 269, 294, 0,
	0, 259, 412, 583, 584, 257, 641, 229, 612, 221,
	0, 611, 405, 578, 589, 392, 381, 220, 587, 390,
	380, 334, 353, 354, 281, 307, 444, 373, 445, 306,
	308, 401, 400, 402, 208, 600, 0, 209, 0, 495,
	601, 642, 449, 213, 235, 236, 238, 0, 280, 284,
	292, 295, 303, 304, 313, 365, 416, 443, 439, 448,
	0, 573, 594, 606, 617, 623, 624, 626, 627, 628,
	629, 630, 633, 631, 404, 311, 491, 333, 371, 0,
	0, 422, 469, 241, 598, 492, 201, 0, 0, 0,
	0, 255, 256, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 638, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 0, 0, 0, 0, 0, 0, 585, 586,
	661, 382, 482, 595, 335, 347, 350, 340, 359, 0,
	360, 336, 337, 342, 344, 345, 346, 351, 352, 356,
	362, 250, 211, 388, 396, 572, 312, 217, 218, 219,
	518, 519, 520, 521, 609, 610, 614, 206, 459, 460,
	461, 462, 293, 604, 309, 465, 464, 331, 332, 377,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 198, 222,
	366, 0, 451, 289, 639, 608, 603, 207, 224, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 210, 223, 233, 237, 244, 262, 277,
	279, 286, 299, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	615, 621, 477, 301, 302, 441, 442, 314, 315, 635,
	636, 300, 592, 622, 590, 634, 616, 435, 376, 0,
	0, 379, 282, 305, 320, 0, 607, 498, 228, 463,
	291, 252, 0, 0, 212, 247, 231, 260, 275, 278,
	324, 389, 397, 426, 431, 297, 272, 245, 456, 242,
	481, 513, 514, 515, 517, 393, 267, 430, 394, 0,
	374, 570, 571, 316, 0, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 364, 268, 0, 0, 427, 0, 205, 0, 483,
	253, 375, 372, 577, 283, 274, 270, 251, 317, 383,
	425, 512, 419, 0, 368, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 249, 325, 204, 410, 494,
	287, 0, 0, 0, 0, 1686, 943, 0, 0, 1683,
	0, 0, 0, 0, 1681, 0, 239, 1682, 1680, 246,
	1685, 0, 908, 349, 358, 357, 338, 339, 341, 343,
	348, 355, 361, 0, 0, 0, 0, 0, 266, 321,
	273, 265, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 399, 258, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 330, 199,
	226, 0, 0, 409, 458, 470, 0, 0, 0, 254,
	0, 468, 423, 596, 234, 285, 455, 429, 466, 437,
	288, 0, 0, 467, 370, 579, 447, 593, 619, 620,
	264, 403, 605, 516, 613, 637, 227, 261, 417, 501,
	599, 490, 395, 575, 576, 329, 489, 296, 203, 367,
	625, 225, 476, 369, 243, 232, 581, 602, 290, 453,
	632, 214, 511, 591, 240, 480, 0, 0, 640, 248,
	500, 216, 588, 499, 391, 326, 327, 215, 0, 454,
	269, 294, 0, 0, 259, 412, 583, 584, 257, 641,
	229, 612, 221, 0, 611, 405, 578, 589, 392, 381,
	220, 587, 390, 380, 334, 353, 354, 281, 307, 444,
	373, 445, 306, 308, 401, 400, 402, 208, 600, 0,
	209, 0, 495, 601, 642, 449, 213, 235, 236, 238,
	0, 280, 284, 292, 295, 303, 304, 313, 365, 416,
	443, 439, 448, 0, 573, 594, 606, 617, 623, 624,
	626, 627, 628, 629, 630, 633, 631, 404, 311, 491,
	333, 371, 0, 0, 422, 469, 241, 598, 492, 201,
	0, 0, 0, 0, 255, 256, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 638, 502, 508, 503, 504,
	505, 506, 507, 0, 509, 0, 0, 0, 0, 0,
	0, 585, 586, 661, 382, 482, 595, 335, 347, 350,
	340, 359, 0, 360, 336, 337, 342, 344, 345, 346,
	351, 352, 356, 362, 250, 211, 388, 396, 572, 312,
	217, 218, 219, 518, 519, 520, 521, 609, 610, 614,
	206, 459, 460, 461, 462, 293, 604, 309, 465, 464,
	331, 332, 377, 446, 534, 536, 547, 551, 553, 555,
	561, 564, 535, 537, 548, 552, 554, 556, 562, 565,
	524, 526, 528, 530, 543, 542, 539, 567, 568, 545,
	550, 529, 541, 546, 559, 566, 563, 523, 527, 531,
	540, 558, 557, 538, 549, 560, 544, 532, 525, 533,
	0, 198, 222, 366, 0, 451, 289, 639, 608, 603,
	207, 224, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 202, 210, 223, 233, 237,
	244, 262, 277, 279, 286, 299, 310, 318, 319, 322,
	328, 378, 384, 385, 386, 387, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 484, 485, 486, 487, 488, 496, 497, 510,
	580, 582, 597, 615, 621, 477, 301, 302, 441, 442,
	314, 315, 635, 636, 300, 592, 622, 590, 634, 616,
	435, 376, 0, 0, 379, 282, 305, 320, 0, 607,
	498, 228, 463, 291, 252, 0, 0, 212, 247, 231,
	260, 275, 278, 324, 389, 397, 426, 431, 297, 272,
	245, 456, 242, 481, 513, 514, 515, 517, 393, 267,
	430, 394, 0, 374, 570, 571, 316, 86, 522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 364, 268, 0, 0, 427, 0,
	205, 0, 483, 253, 375, 372, 577, 283, 274, 270,
	251, 317, 383, 425, 512, 419, 0, 368, 0, 0,
	493, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 249, 325,
	204, 410, 494, 287, 0, 95, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 246, 0, 0, 0, 349, 358, 357, 338,
	339, 341, 343, 348, 355, 361, 0, 0, 0, 0,
	0, 266, 321, 273, 265, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 399, 258, 0, 450, 0, 0,
	0, 618, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 330, 199, 226, 0, 0, 409, 458, 470, 0,
	0, 0, 254, 0, 468, 423, 596, 234, 285, 455,
	429, 466, 437, 288, 0, 0, 467, 370, 579, 447,
	593, 619, 620, 264, 403, 605, 516, 613, 637, 227,
	261, 417, 501, 599, 490, 395, 575, 576, 329, 489,
	296, 203, 367, 625, 225, 476, 369, 243, 232, 581,
	602, 290, 453, 632, 214, 511, 591, 240, 480, 0,
	0, 640, 248, 500, 216, 588, 499, 391, 326, 327,
	215, 0, 454, 269, 294, 0, 0, 259, 412, 583,
	584, 257, 641, 229, 612, 221, 0, 611, 405, 578,
	589, 392, 381, 220, 587, 390, 380, 334, 353, 354,
	281, 307, 444, 373, 445, 306, 308, 401, 400, 402,
	208, 600, 0, 209, 0, 495, 601, 642, 449, 213,
	235, 236, 238, 0, 280, 284, 292, 295, 303, 304,
	313, 365, 416, 443, 439, 448, 0, 573, 594, 606,
	617, 623, 624, 626, 627, 628, 629, 630, 633, 631,
	404, 311, 491, 333, 371, 0, 0, 422, 469, 241,
	598, 492, 201, 0, 0, 0, 0, 255, 256, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 638, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 0, 0,
	0, 0, 0, 0, 585, 586, 661, 382, 482, 595,
	335, 347, 350, 340, 359, 0, 360, 336, 337, 342,
	344, 345, 346, 351, 352, 356, 362, 250, 211, 388,
	396, 572, 312, 217, 218, 219, 518, 519, 520, 521,
	609, 610, 614, 206, 459, 460, 461, 462, 293, 604,
	309, 465, 464, 331, 332, 377, 446, 534, 536, 547,
	551, 553, 555, 561, 564, 535, 537, 548, 552, 554,
	556, 562, 565, 524, 526, 528, 530, 543, 542, 539,
	567, 568, 545, 550, 529, 541, 546, 559, 566, 563,
	523, 527, 531, 540, 558, 557, 538, 549, 560, 544,
	532, 525, 533, 0, 198, 222, 366, 94, 451, 289,
	639, 608, 603, 207, 224, 0, 263, 0, 0, 0,
	0, 0, 2380, 0, 0, 2379, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 210,
	223, 233, 237, 244, 262, 277, 279, 286, 299, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 301,
	302, 441, 442, 314, 315, 635, 636, 300, 592, 622,
	590, 634, 616, 435, 376, 0, 0, 379, 282, 305,
	320, 0, 607, 498, 228, 463, 291, 252, 0, 0,
	212, 247, 231, 260, 275, 278, 324, 389, 397, 426,
	431, 297, 272, 245, 456, 242, 481, 513, 514, 515,
	517, 393, 267, 430, 1745, 0, 374, 570, 571, 316,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 1747, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 364, 268, 0,
	0, 427, 0, 205, 0, 483, 253, 375, 372, 577,
	283, 274, 270, 251, 317, 383, 425, 512, 419, 0,
	368, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 249, 325, 204, 410, 494, 287, 0, 0, 0,
	0, 1749, 709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 349,
	358, 357, 338, 339, 341, 343, 348, 355, 361, 0,
	0, 0, 0, 0, 266, 321, 273, 265, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 1458, 0, 1459, 1460, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 399, 258, 0,
	450, 0, 0, 0, 618, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 330, 199, 226, 0, 0, 409,
	458, 470, 0, 0, 0, 254, 0, 468, 423, 596,
	234, 285, 455, 429, 466, 437, 288, 0, 0, 467,
	370, 579, 447, 593, 619, 620, 264, 403, 605, 516,
	613, 637, 227, 261, 417, 501, 599, 490, 395, 575,
	576, 329, 489, 296, 203, 367, 625, 225, 476, 369,
	243, 232, 581, 602, 290, 453, 632, 214, 511, 591,
	240, 480, 0, 0, 640, 248, 500, 216, 588, 499,
	391, 326, 327, 215, 0, 454, 269, 294, 0, 0,
	259, 412, 583, 584, 257, 641, 229, 612, 221, 0,
	611, 405, 578, 589, 392, 381, 220, 587, 390, 380,
	334, 353, 354, 281, 307, 444, 373, 445, 306, 308,
	401, 400, 402, 208, 600, 0, 209, 0, 495, 601,
	642, 449, 213, 235, 236, 238, 0, 280, 284, 292,
	295, 303, 304, 313, 365, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 311, 491, 333, 371, 0, 0,
	422, 469, 241, 598, 492, 201, 0, 0, 0, 0,
	255, 256, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 0, 585, 586, 661,
	382, 482, 595, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	250, 211, 388, 396, 572, 312, 217, 218, 219, 518,
	519, 520, 521, 609, 610, 614, 206, 459, 460, 461,
	462, 293, 604, 309, 465, 464, 331, 332, 377, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 0, 198, 222, 366,
	0, 451, 289, 639, 608, 603, 207, 224, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 202, 210, 223, 233, 237, 244, 262, 277, 279,
	286, 299, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 484, 485,
	486, 487, 488, 496, 497, 510, 580, 582, 597, 615,
	621, 477, 301, 302, 441, 442, 314, 315, 635, 636,
	300, 592, 622, 590, 634, 616, 435, 376, 0, 0,
	379, 282, 305, 320, 0, 607, 498, 228, 463, 291,
	252, 0, 0, 212, 247, 231, 260, 275, 278, 324,
	389, 397, 426, 431, 297, 272, 245, 456, 242, 481,
	513, 514, 515, 517, 393, 267, 430, 394, 0, 374,
	570, 571, 316, 86, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	364, 268, 0, 0, 427, 0, 205, 0, 483, 253,
	375, 372, 577, 283, 274, 270, 251, 317, 383, 425,
	512, 419, 0, 368, 0, 0, 493, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 249, 325, 204, 410, 494, 287,
	0, 95, 0, 1726, 0, 709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 246, 0,
	0, 0, 349, 358, 357, 338, 339, 341, 343, 348,
	355, 361, 0, 0, 0, 0, 0, 266, 321, 273,
	265, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	399, 258, 0, 450, 0, 0, 0, 618, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 330, 199, 226,
	0, 0, 409, 458, 470, 0, 0, 0, 254, 0,
	468, 423, 596, 234, 285, 455, 429, 466, 437, 288,
	0, 0, 467, 370, 579, 447, 593, 619, 620, 264,
	403, 605, 516, 613, 637, 227, 261, 417, 501, 599,
	490, 395, 575, 576, 329, 489, 296, 203, 367, 625,
	225, 476, 369, 243, 232, 581, 602, 290, 453, 632,
	214, 511, 591, 240, 480, 0, 0, 640, 248, 500,
	216, 588, 499, 391, 326, 327, 215, 0, 454, 269,
	294, 0, 0, 259, 412, 583, 584, 257, 641, 229,
	612, 221, 0, 611, 405, 578, 589, 392, 381, 220,
	587, 390, 380, 334, 353, 354, 281, 307, 444, 373,
	445, 306, 308, 401, 400, 402, 208, 600, 0, 209,
	0, 495, 601, 642, 449, 213, 235, 236, 238, 0,
	280, 284, 292, 295, 303, 304, 313, 365, 416, 443,
	439, 448, 0, 573, 594, 606, 617, 623, 624, 626,
	627, 628, 629, 630, 633, 631, 404, 311, 491, 333,
	371, 0, 0, 422, 469, 241, 598, 492, 201, 0,
	0, 0, 0, 255, 256, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 638, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 0, 0, 0, 0, 0, 0,
	585, 586, 661, 382, 482, 595, 335, 347, 350, 340,
	359, 0, 360, 336, 337, 342, 344, 345, 346, 351,
	352, 356, 362, 250, 211, 388, 396, 572, 312, 217,
	218, 219, 518, 519, 520, 521, 609, 610, 614, 206,
	459, 460, 461, 462, 293, 604, 309, 465, 464, 331,
	332, 377, 446, 534, 536, 547, 551, 553, 555, 561,
	564, 535, 537, 548, 552, 554, 556, 562, 565, 524,
	526, 528, 530, 543, 542, 539, 567, 568, 545, 550,
	529, 541, 546, 559, 566, 563, 523, 527, 531, 540,
	558, 557, 538, 549, 560, 544, 532, 525, 533, 0,
	198, 222, 366, 94, 451, 289, 639, 608, 603, 207,
	224, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 210, 223, 233, 237, 244,
	262, 277, 279, 286, 299, 310, 318, 319, 322, 328,
	378, 384, 385, 386, 387, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 615, 621, 477, 301, 302, 441, 442, 314,
	315, 635, 636, 300, 592, 622, 590, 634, 616, 435,
	376, 0, 0, 379, 282, 305, 320, 0, 607, 498,
	228, 463, 291, 252, 0, 0, 212, 247, 231, 260,
	275, 278, 324, 389, 397, 426, 431, 297, 272, 245,
	456, 242, 481, 513, 514, 515, 517, 393, 267, 430,
	394, 0, 374, 570, 571, 316, 0, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 364, 268, 0, 0, 427, 0, 205,
	0, 483, 253, 375, 372, 577, 283, 274, 270, 251,
	317, 383, 425, 512, 419, 0, 368, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 249, 325, 204,
	410, 494, 287, 0, 95, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 0, 0, 0,
	266, 321, 273, 265, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 399, 258, 0, 450, 0, 0, 0,
	618, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 199, 226, 0, 0, 409, 458, 470, 0, 0,
	0, 254, 0, 468, 423, 596, 234, 285, 455, 429,
	466, 437, 288, 0, 0, 467, 370, 579, 447, 593,
	619, 620, 264, 403, 605, 516, 613, 637, 227, 261,
	417, 501, 599, 490, 395, 575, 576, 329, 489, 296,
	203, 367, 625, 225, 476, 369, 243, 232, 581, 602,
	290, 453, 632, 214, 511, 591, 240, 480, 0, 0,
	640, 248, 500, 216, 588, 499, 391, 326, 327, 215,
	0, 454, 269, 294, 0, 0, 259, 412, 583, 584,
	257, 641, 229, 612, 221, 0, 611, 405, 578, 589,
	392, 381, 220, 587, 390, 380, 334, 353, 354, 281,
	307, 444, 373, 445, 306, 308, 401, 400, 402, 208,
	600, 0, 209, 0, 495, 601, 642, 449, 213, 235,
	236, 238, 0, 280, 284, 292, 295, 303, 304, 313,
	365, 416, 443, 439, 448, 0, 573, 594, 606, 617,
	623, 624, 626, 627, 628, 629, 630, 633, 631, 404,
	311, 491, 333, 371, 0, 0, 422, 469, 241, 598,
	492, 201, 0, 0, 0, 0, 255, 256, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 638, 502, 508,
	503, 504, 505, 506, 507, 0, 509, 0, 0, 0,
	0, 0, 0, 585, 586, 661, 382, 482, 595, 335,
	347, 350, 340, 359, 0, 360, 336, 337, 342, 344,
	345, 346, 351, 352, 356, 362, 250, 211, 388, 396,
	572, 312, 217, 218, 219, 518, 519, 520, 521, 609,
	610, 614, 206, 459, 460, 461, 462, 293, 604, 309,
	465, 464, 331, 332, 377, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 198, 222, 366, 0, 451, 289, 639,
	608, 603, 207, 224, 0, 263, 0, 0, 0, 0,
	0, 2380, 0, 0, 2379, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 202, 210, 223,
	233, 237, 244, 262, 277, 279, 286, 299, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 484, 485, 486, 487, 488, 496,
	497, 510, 580, 582, 597, 615, 621, 477, 301, 302,
	441, 442, 314, 315, 635, 636, 300, 592, 622, 590,
	634, 616, 435, 376, 0, 0, 379, 282, 305, 320,
	0, 607, 498, 228, 463, 291, 252, 0, 0, 212,
	247, 231, 260, 275, 278, 324, 389, 397, 426, 431,
	297, 272, 245, 456, 242, 481, 513, 514, 515, 517,
	393, 267, 430, 394, 0, 374, 570, 571, 316, 0,
	522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 2330, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 364, 268, 0, 0,
	427, 0, 205, 0, 483, 253, 375, 372, 577, 283,
	274, 270, 251, 317, 383, 425, 512, 419, 0, 368,
	0, 0, 493, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	249, 325, 204, 410, 494, 287, 0, 0, 0, 0,
	1928, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 246, 0, 0, 0, 349, 358,
	357, 338, 339, 341, 343, 348, 355, 361, 0, 0,
	0, 0, 0, 266, 321, 273, 265, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 399, 258, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 330, 199, 226, 0, 0, 409, 458,
	470, 0, 0, 0, 254, 0, 468, 423, 596, 234,
	285, 455, 429, 466, 437, 288, 0, 2328, 467, 370,
	579, 447, 593, 619, 620, 264, 403, 605, 516, 613,
	637, 227, 261, 417, 501, 599, 490, 395, 575, 576,
	329, 489, 296, 203, 367, 625, 225, 476, 369, 243,
	232, 581, 602, 290, 453, 632, 214, 511, 591, 240,
	480, 0, 0, 640, 248, 500, 216, 588, 499, 391,
	326, 327, 215, 0, 454, 269, 294, 0, 0, 259,
	412, 583, 584, 257, 641, 229, 612, 221, 0, 611,
	405, 578, 589, 392, 381, 220, 587, 390, 380, 334,
	353, 354, 281, 307, 444, 373, 445, 306, 308, 401,
	400, 402, 208, 600, 0, 209, 0, 495, 601, 642,
	449, 213, 235, 236, 238, 0, 280, 284, 292, 295,
	303, 304, 313, 365, 416, 443, 439, 448, 0, 573,
	594, 606, 617, 623, 624, 626, 627, 628, 629, 630,
	633, 631, 404, 311, 491, 333, 371, 0, 0, 422,
	469, 241, 598, 492, 201, 0, 0, 0, 0, 255,
	256, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	638, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	0, 0, 0, 0, 0, 0, 585, 586, 661, 382,
	482, 595, 335, 347, 350, 340, 359, 0, 360, 336,
	337, 342, 344, 345, 346, 351, 352, 356, 362, 250,
	211, 388, 396, 572, 312, 217, 218, 219, 518, 519,
	520, 521, 609, 610, 614, 206, 459, 460, 461, 462,
	293, 604, 309, 465, 464, 331, 332, 377, 446, 534,
	536, 547, 551, 553, 555, 561, 564, 535, 537, 548,
	552, 554, 556, 562, 565, 524, 526, 528, 530, 543,
	542, 539, 567, 568, 545, 550, 529, 541, 546, 559,
	566, 563, 523, 527, 531, 540, 558, 557, 538, 549,
	560, 544, 532, 525, 533, 0, 198, 222, 366, 0,
	451, 289, 639, 608, 603, 207, 224, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 210, 223, 233, 237, 244, 262, 277, 279, 286,
	299, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 615, 621,
	477, 301, 302, 441, 442, 314, 315, 635, 636, 300,
	592, 622, 590, 634, 616, 435, 376, 0, 0, 379,
	282, 305, 320, 0, 607, 498, 228, 463, 291, 252,
	0, 0, 212, 247, 231, 260, 275, 278, 324, 389,
	397, 426, 431, 297, 272, 245, 456, 242, 481, 513,
	514, 515, 517, 393, 267, 430, 394, 0, 374, 570,
	571, 316, 0, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 364,
	268, 0, 0, 427, 0, 205, 0, 483, 253, 375,
	372, 577, 283, 274, 270, 251, 317, 383, 425, 512,
	419, 0, 368, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 249, 325, 204, 410, 494, 287, 0,
	0, 0, 0, 0, 709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 349, 358, 357, 338, 339, 341, 343, 348, 355,
	361, 0, 0, 0, 0, 0, 266, 321, 273, 265,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 1078, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 399,
	258, 0, 450, 0, 0, 0, 618, 0, 0, 0,
	0, 0, 0, 0, 363, 1084, 330, 199, 226, 1082,
	0, 409, 458, 470, 0, 0, 0, 254, 0, 468,
	423, 596, 234, 285, 455, 429, 466, 437, 288, 0,
	0, 467, 370, 579, 447, 593, 619, 620, 264, 403,
	605, 516, 613, 637, 227, 261, 417, 501, 599, 490,
	395, 575, 576, 329, 489, 296, 203, 367, 625, 225,
	476, 369, 243, 232, 581, 602, 290, 453, 632, 214,
	511, 591, 240, 480, 0, 0, 640, 248, 500, 216,
	588, 499, 391, 326, 327, 215, 0, 454, 269, 294,
	0, 0, 259, 412, 583, 584, 257, 641, 229, 612,
	221, 0, 611, 405, 578, 589, 392, 381, 220, 587,
	390, 380, 334, 353, 354, 281, 307, 444, 373, 445,
	306, 308, 401, 400, 402, 208, 600, 0, 209, 0,
	495, 601, 642, 449, 213, 235, 236, 238, 0, 280,
	284, 292, 295, 303, 304, 313, 365, 416, 443, 439,
	448, 0, 573, 594, 606, 617, 623, 624, 626, 627,
	628, 629, 630, 633, 631, 404, 311, 491, 333, 371,
	0, 0, 422, 469, 241, 598, 492, 201, 0, 0,
	0, 0, 255, 256, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 638, 502, 508, 503, 504, 505, 506,
	507, 0, 509, 0, 0, 0, 0, 0, 0, 585,
	586, 661, 382, 482, 595, 335, 347, 350, 340, 359,
	0, 360, 336, 337, 342, 344, 345, 346, 351, 352,
	356, 362, 250, 211, 388, 396, 572, 312, 217, 218,
	219, 518, 519, 520, 521, 609, 610, 614, 206, 459,
	460, 461, 462, 293, 604, 309, 465, 464, 331, 332,
	377, 446, 534, 536, 547, 551, 553, 555, 561, 564,
	535, 537, 548, 552, 554, 556, 562, 565, 524, 526,
	528, 530, 543, 542, 539, 567, 568, 545, 550, 529,
	541, 546, 559, 566, 563, 523, 527, 531, 540, 558,
	557, 538, 549, 560, 544, 532, 525, 533, 0, 198,
	222, 366, 0, 451, 289, 639, 608, 603, 207, 224,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 202, 210, 223, 233, 237, 244, 262,
	277, 279, 286, 299, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 301, 302, 441, 442, 314, 315,
	635, 636, 300, 592, 622, 590, 634, 616, 435, 376,
	0, 0, 379, 282, 305, 320, 0, 607, 498, 228,
	463, 291, 252, 0, 0, 212, 247, 231, 260, 275,
	278, 324, 389, 397, 426, 431, 297, 272, 245, 456,
	242, 481, 513, 514, 515, 517, 393, 267, 430, 394,
	0, 374, 570, 571, 316, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 2330, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 364, 268, 0, 0, 427, 0, 205, 0,
	483, 253, 375, 372, 577, 283, 274, 270, 251, 317,
	383, 425, 512, 419, 0, 368, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 249, 325, 204, 410,
	494, 287, 0, 0, 0, 0, 1928, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	246, 0, 0, 0, 349, 358, 357, 338, 339, 341,
	343, 348, 355, 361, 0, 0, 0, 0, 0, 266,
	321, 273, 265, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 399, 258, 0, 450, 0, 0, 0, 618,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 330,
	199, 226, 0, 0, 409, 458, 470, 0, 0, 0,
	254, 0, 468, 423, 596, 234, 285, 455, 429, 466,
	437, 288, 0, 0, 467, 370, 579, 447, 593, 619,
	620, 264, 403, 605, 516, 613, 637, 227, 261, 417,
	501, 599, 490, 395, 575, 576, 329, 489, 296, 203,
	367, 625, 225, 476, 369, 243, 232, 581, 602, 290,
	453, 632, 214, 511, 591, 240, 480, 0, 0, 640,
	248, 500, 216, 588, 499, 391, 326, 327, 215, 0,
	454, 269, 294, 0, 0, 259, 412, 583, 584, 257,
	641, 229, 612, 221, 0, 611, 405, 578, 589, 392,
	381, 220, 587, 390, 380, 334, 353, 354, 281, 307,
	444, 373, 445, 306, 308, 401, 400, 402, 208, 600,
	0, 209, 0, 495, 601, 642, 449, 213, 235, 236,
	238, 0, 280, 284, 292, 295, 303, 304, 313, 365,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 311,
	491, 333, 371, 0, 0, 422, 469, 241, 598, 492,
	201, 0, 0, 0, 0, 255, 256, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 0, 585, 586, 661, 382, 482, 595, 335, 347,
	350, 340, 359, 0, 360, 336, 337, 342, 344, 345,
	346, 351, 352, 356, 362, 250, 211, 388, 396, 572,
	312, 217, 218, 219, 518, 519, 520, 521, 609, 610,
	614, 206, 459, 460, 461, 462, 293, 604, 309, 465,
	464, 331, 332, 377, 446, 534, 536, 547, 551, 553,
	555, 561, 564, 535, 537, 548, 552, 554, 556, 562,
	565, 524, 526, 528, 530, 543, 542, 539, 567, 568,
	545, 550, 529, 541, 546, 559, 566, 563, 523, 527,
	531, 540, 558, 557, 538, 549, 560, 544, 532, 525,
	533, 0, 198, 222, 366, 0, 451, 289, 639, 608,
	603, 207, 224, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 210, 223, 233,
	237, 244, 262, 277, 279, 286, 299, 310, 318, 319,
	322, 328, 378, 384, 385, 386, 387, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 615, 621, 477, 301, 302, 441,
	442, 314, 315, 635, 636, 300, 592, 622, 590, 634,
	616, 435, 376, 0, 0, 379, 282, 305, 320, 0,
	607, 498, 228, 463, 291, 252, 0, 0, 212, 247,
	231, 260, 275, 278, 324, 389, 397, 426, 431, 297,
	272, 245, 456, 242, 481, 513, 514, 515, 517, 393,
	267, 430, 394, 0, 374, 570, 571, 316, 0, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 364, 268, 0, 0, 427,
	0, 205, 0, 483, 253, 375, 372, 577, 283, 274,
	270, 251, 317, 383, 425, 512, 419, 0, 368, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 249,
	325, 204, 410, 494, 287, 0, 0, 0, 1726, 0,
	709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 0, 0, 0,
	0, 0, 266, 321, 273, 265, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 399, 258, 0, 450, 0,
	0, 0, 618, 0, 0, 0, 3910, 0, 0, 0,
	363, 0, 330, 199, 226, 0, 0, 409, 458, 470,
	0, 0, 0, 254, 0, 468, 423, 596, 234, 285,
	455, 429, 466, 437, 288, 0, 0, 467, 370, 579,
	447, 593, 619, 620, 264, 403, 605, 516, 613, 637,
	227, 261, 417, 501, 599, 490, 395, 575, 576, 329,
	489, 296, 203, 367, 625, 225, 476, 369, 243, 232,
	581, 602, 290, 453, 632, 214, 511, 591, 240, 480,
	0, 0, 640, 248, 500, 216, 588, 499, 391, 326,
	327, 215, 0, 454, 269, 294, 0, 0, 259, 412,
	583, 584, 257, 641, 229, 612, 221, 0, 611, 405,
	578, 589, 392, 381, 220, 587, 390, 380, 334, 353,
	354, 281, 307, 444, 373, 445, 306, 308, 401, 400,
	402, 208, 600, 0, 209, 0, 495, 601, 642, 449,
	213, 235, 236, 238, 0, 280, 284, 292, 295, 303,
	304, 313, 365, 416, 443, 439, 448, 0, 573, 594,
	606, 617, 623, 624, 626, 627, 628, 629, 630, 633,
	631, 404, 311, 491, 333, 371, 0, 0, 422, 469,
	241, 598, 492, 201, 0, 0, 0, 0, 255, 256,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 638,
	502, 508, 503, 504, 505, 506, 507, 0, 509, 0,
	0, 0, 0, 0, 0, 585, 586, 661, 382, 482,
	595, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 250, 211,
	388, 396, 572, 312, 217, 218, 219, 518, 519, 520,
	521, 609, 610, 614, 206, 459, 460, 461, 462, 293,
	604, 309, 465, 464, 331, 332, 377, 446, 534, 536,
	547, 551, 553, 555, 561, 564, 535, 537, 548, 552,
	554, 556, 562, 565, 524, 526, 528, 530, 543, 542,
	539, 567, 568, 545, 550, 529, 541, 546, 559, 566,
	563, 523, 527, 531, 540, 558, 557, 538, 549, 560,
	544, 532, 525, 533, 0, 198, 222, 366, 0, 451,
	289, 639, 608, 603, 207, 224, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	210, 223, 233, 237, 244, 262, 277, 279, 286, 299,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 484, 485, 486, 487,
	488, 496, 497, 510, 580, 582, 597, 615, 621, 477,
	301, 302, 441, 442, 314, 315, 635, 636, 300, 592,
	622, 590, 634, 616, 435, 376, 0, 0, 379, 282,
	305, 320, 0, 607, 498, 228, 463, 291, 252, 0,
	0, 212, 247, 231, 260, 275, 278, 324, 389, 397,
	426, 431, 297, 272, 245, 456, 242, 481, 513, 514,
	515, 517, 393, 267, 430, 394, 0, 374, 570, 571,
	316, 0, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 364, 268,
	0, 0, 427, 0, 205, 0, 483, 253, 375, 372,
	577, 283, 274, 270, 251, 317, 383, 425, 512, 419,
	0, 368, 0, 0, 493, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 249, 325, 204, 410, 494, 287, 0, 0,
	0, 0, 2090, 709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 246, 0, 0, 0,
	349, 358, 357, 338, 339, 341, 343, 348, 355, 361,
	0, 0, 0, 0, 0, 266, 321, 273, 265, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2091, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 399, 258,
	0, 450, 0, 0, 0, 618, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 330, 199, 226, 0, 0,
	409, 458, 470, 0, 0, 0, 254, 0, 468, 423,
	596, 234, 285, 455, 429, 466, 437, 288, 0, 0,
	467, 370, 579, 447, 593, 619, 620, 264, 403, 605,
	516, 613, 637, 227, 261, 417, 501, 599, 490, 395,
	575, 576, 329, 489, 296, 203, 367, 625, 225, 476,
	369, 243, 232, 581, 602, 290, 453, 632, 214, 511,
	591, 240, 480, 0, 0, 640, 248, 500, 216, 588,
	499, 391, 326, 327, 215, 0, 454, 269, 294, 0,
	0, 259, 412, 583, 584, 257, 641, 229, 612, 221,
	0, 611, 405, 578, 589, 392, 381, 220, 587, 390,
	380, 334, 353, 354, 281, 307, 444, 373, 445, 306,
	308, 401, 400, 402, 208, 600, 0, 209, 0, 495,
	601, 642, 449, 213, 235, 236, 238, 0, 280, 284,
	292, 295, 303, 304, 313, 365, 416, 443, 439, 448,
	0, 573, 594, 606, 617, 623, 624, 626, 627, 628,
	629, 630, 633, 631, 404, 311, 491, 333, 371, 0,
	0, 422, 469, 241, 598, 492, 201, 0, 0, 0,
	0, 255, 256, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 638, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 0, 0, 0, 0, 0, 0, 585, 586,
	661, 382, 482, 595, 335, 347, 350, 340, 359, 0,
	360, 336, 337, 342, 344, 345, 346, 351, 352, 356,
	362, 250, 211, 388, 396, 572, 312, 217, 218, 219,
	518, 519, 520, 521, 609, 610, 614, 206, 459, 460,
	461, 462, 293, 604, 309, 465, 464, 331, 332, 377,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 198, 222,
	366, 0, 451, 289, 639, 608, 603, 207, 224, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 210, 223, 233, 237, 244, 262, 277,
	279, 286, 299, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	615, 621, 477, 301, 302, 441, 442, 314, 315, 635,
	636, 300, 592, 622, 590, 634, 616, 435, 376, 0,
	0, 379, 282, 305, 320, 0, 607, 498, 228, 463,
	291, 252, 0, 0, 212, 247, 231, 260, 275, 278,
	324, 389, 397, 426, 431, 297, 272, 245, 456, 242,
	481, 513, 514, 515, 517, 393, 267, 430, 394, 0,
	374, 570, 571, 316, 0, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 364, 268, 0, 0, 427, 0, 205, 0, 483,
	253, 375, 372, 577, 283, 274, 270, 251, 317, 383,
	425, 512, 419, 0, 368, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 249, 325, 204, 410, 494,
	287, 0, 0, 0, 0, 2825, 709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 349, 358, 357, 338, 339, 341, 343,
	348, 355, 361, 0, 0, 0, 0, 0, 266, 321,
	273, 265, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2826, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 399, 258, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 330, 199,
	226, 0, 0, 409, 458, 470, 0, 0, 0, 254,
	0, 468, 423, 596, 234, 285, 455, 429, 466, 437,
	288, 0, 0, 467, 370, 579, 447, 593, 619, 620,
	264, 403, 605, 516, 613, 637, 227, 261, 417, 501,
	599, 490, 395, 575, 576, 329, 489, 296, 203, 367,
	625, 225, 476, 369, 243, 232, 581, 602, 290, 453,
	632, 214, 511, 591, 240, 480, 0, 0, 640, 248,
	500, 216, 588, 499, 391, 326, 327, 215, 0, 454,
	269, 294, 0, 0, 259, 412, 583, 584, 257, 641,
	229, 612, 221, 0, 611, 405, 578, 589, 392, 381,
	220, 587, 390, 380, 334, 353, 354, 281, 307, 444,
	373, 445, 306, 308, 401, 400, 402, 208, 600, 0,
	209, 0, 495, 601, 642, 449, 213, 235, 236, 238,
	0, 280, 284, 292, 295, 303, 304, 313, 365, 416,
	443, 439, 448, 0, 573, 594, 606, 617, 623, 624,
	626, 627, 628, 629, 630, 633, 631, 404, 311, 491,
	333, 371, 0, 0, 422, 469, 241, 598, 492, 201,
	0, 0, 0, 0, 255, 256, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 638, 502, 508, 503, 504,
	505, 506, 507, 0, 509, 0, 0, 0, 0, 0,
	0, 585, 586, 661, 382, 482, 595, 335, 347, 350,
	340, 359, 0, 360, 336, 337, 342, 344, 345, 346,
	351, 352, 356, 362, 250, 211, 388, 396, 572, 312,
	217, 218, 219, 518, 519, 520, 521, 609, 610, 614,
	206, 459, 460, 461, 462, 293, 604, 309, 465, 464,
	331, 332, 377, 446, 534, 536, 547, 551, 553, 555,
	561, 564, 535, 537, 548, 552, 554, 556, 562, 565,
	524, 526, 528, 530, 543, 542, 539, 567, 568, 545,
	550, 529, 541, 546, 559, 566, 563, 523, 527, 531,
	540, 558, 557, 538, 549, 560, 544, 532, 525, 533,
	0, 198, 222, 366, 0, 451, 289, 639, 608, 603,
	207, 224, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 202, 210, 223, 233, 237,
	244, 262, 277, 279, 286, 299, 310, 318, 319, 322,
	328, 378, 384, 385, 386, 387, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 484, 485, 486, 487, 488, 496, 497, 510,
	580, 582, 597, 615, 621, 477, 301, 302, 441, 442,
	314, 315, 635, 636, 300, 592, 622, 590, 634, 616,
	435, 376, 0, 0, 379, 282, 305, 320, 0, 607,
	498, 228, 463, 291, 252, 0, 0, 212, 247, 231,
	260, 275, 278, 324, 389, 397, 426, 431, 297, 272,
	245, 456, 242, 481, 513, 514, 515, 517, 393, 267,
	430, 394, 0, 374, 570, 571, 316, 0, 522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 364, 268, 0, 0, 427, 0,
	205, 0, 483, 253, 375, 372, 577, 283, 274, 270,
	251, 317, 383, 425, 512, 419, 0, 368, 0, 0,
	493, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 249, 325,
	204, 410, 494, 287, 0, 0, 0, 0, 0, 709,
	0, 0, 0, 0, 2810, 0, 0, 0, 0, 239,
	0, 0, 246, 2811, 0, 0, 349, 358, 357, 338,
	339, 341, 343, 348, 355, 361, 0, 0, 0, 0,
	0, 266, 321, 273, 265, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 399, 258, 0, 450, 0, 0,
	0, 618, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 330, 199, 226, 0, 0, 409, 458, 470, 0,
	0, 0, 254, 0, 468, 423, 596, 234, 285, 455,
	429, 466, 437, 288, 0, 0, 467, 370, 579, 447,
	593, 619, 620, 264, 403, 605, 516, 613, 637, 227,
	261, 417, 501, 599, 490, 395, 575, 576, 329, 489,
	296, 203, 367, 625, 225, 476, 369, 243, 232, 581,
	602, 290, 453, 632, 214, 511, 591, 240, 480, 0,
	0, 640, 248, 500, 216, 588, 499, 391, 326, 327,
	215, 0, 454, 269, 294, 0, 0, 259, 412, 583,
	584, 257, 641, 229, 612, 221, 0, 611, 405, 578,
	589, 392, 381, 220, 587, 390, 380, 334, 353, 354,
	281, 307, 444, 373, 445, 306, 308, 401, 400, 402,
	208, 600, 0, 209, 0, 495, 601, 642, 449, 213,
	235, 236, 238, 0, 280, 284, 292, 295, 303, 304,
	313, 365, 416, 443, 439, 448, 0, 573, 594, 606,
	617, 623, 624, 626, 627, 628, 629, 630, 633, 631,
	404, 311, 491, 333, 371, 0, 0, 422, 469, 241,
	598, 492, 201, 0, 0, 0, 0, 255, 256, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 638, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 0, 0,
	0, 0, 0, 0, 585, 586, 661, 382, 482, 595,
	335, 347, 350, 340, 359, 0, 360, 336, 337, 342,
	344, 345, 346, 351, 352, 356, 362, 250, 211, 388,
	396, 572, 312, 217, 218, 219, 518, 519, 520, 521,
	609, 610, 614, 206, 459, 460, 461, 462, 293, 604,
	309, 465, 464, 331, 332, 377, 446, 534, 536, 547,
	551, 553, 555, 561, 564, 535, 537, 548, 552, 554,
	556, 562, 565, 524, 526, 528, 530, 543, 542, 539,
	567, 568, 545, 550, 529, 541, 546, 559, 566, 563,
	523, 527, 531, 540, 558, 557, 538, 549, 560, 544,
	532, 525, 533, 0, 198, 222, 366, 0, 451, 289,
	639, 608, 603, 207, 224, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 210,
	223, 233, 237, 244, 262, 277, 279, 286, 299, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 301,
	302, 441, 442, 314, 315, 635, 636, 300, 592, 622,
	590, 634, 616, 435, 376, 0, 0, 379, 282, 305,
	320, 0, 607, 498, 228, 463, 291, 252, 0, 0,
	212, 247, 231, 260, 275, 278, 324, 389, 397, 426,
	431, 297, 272, 245, 456, 242, 481, 513, 514, 515,
	517, 393, 267, 430, 394, 0, 374, 570, 571, 316,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 1768, 0, 0, 0, 364, 268, 0,
	0, 427, 0, 205, 0, 483, 253, 375, 372, 577,
	283, 274, 270, 251, 317, 383, 425, 512, 419, 0,
	368, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 249, 325, 204, 410, 494, 287, 0, 0, 0,
	0, 1767, 709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 349,
	358, 357, 338, 339, 341, 343, 348, 355, 361, 0,
	0, 0, 0, 0, 266, 321, 273, 265, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 399, 258, 0,
	450, 0, 0, 0, 618, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 330, 199, 226, 0, 0, 409,
	458, 470, 0, 0, 0, 254, 0, 468, 423, 596,
	234, 285, 455, 429, 466, 437, 288, 0, 0, 467,
	370, 579, 447, 593, 619, 620, 264, 403, 605, 516,
	613, 637, 227, 261, 417, 501, 599, 490, 395, 575,
	576, 329, 489, 296, 203, 367, 625, 225, 476, 369,
	243, 232, 581, 602, 290, 453, 632, 214, 511, 591,
	240, 480, 0, 0, 640, 248, 500, 216, 588, 499,
	391, 326, 327, 215, 0, 454, 269, 294, 0, 0,
	259, 412, 583, 584, 257, 641, 229, 612, 221, 0,
	611, 405, 578, 589, 392, 381, 220, 587, 390, 380,
	334, 353, 354, 281, 307, 444, 373, 445, 306, 308,
	401, 400, 402, 208, 600, 0, 209, 0, 495, 601,
	642, 449, 213, 235, 236, 238, 0, 280, 284, 292,
	295, 303, 304, 313, 365, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 311, 491, 333, 371, 0, 0,
	422, 469, 241, 598, 492, 201, 0, 0, 0, 0,
	255, 256, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 0, 585, 586, 661,
	382, 482, 595, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	250, 211, 388, 396, 572, 312, 217, 218, 219, 518,
	519, 520, 521, 609, 610, 614, 206, 459, 460, 461,
	462, 293, 604, 309, 465, 464, 331, 332, 377, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 0, 198, 222, 366,
	0, 451, 289, 639, 608, 603, 207, 224, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 202, 210, 223, 233, 237, 244, 262, 277, 279,
	286, 299, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 484, 485,
	486, 487, 488, 496, 497, 510, 580, 582, 597, 615,
	621, 477, 301, 302, 441, 442, 314, 315, 635, 636,
	300, 592, 622, 590, 634, 616, 435, 376, 0, 0,
	379, 282, 305, 320, 0, 607, 498, 228, 463, 291,
	252, 0, 0, 212, 247, 231, 260, 275, 278, 324,
	389, 397, 426, 431, 297, 272, 245, 456, 242, 481,
	513, 514, 515, 517, 393, 267, 430, 394, 0, 374,
	570, 571, 316, 0, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	364, 268, 0, 0, 427, 0, 205, 0, 483, 253,
	375, 372, 577, 283, 274, 270, 251, 317, 383, 425,
	512, 419, 0, 368, 0, 0, 493, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 249, 325, 204, 410, 494, 287,
	0, 0, 0, 0, 0, 711, 712, 713, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 246, 0,
	0, 0, 349, 358, 357, 338, 339, 341, 343, 348,
	355, 361, 0, 0, 0, 0, 0, 266, 321, 273,
	265, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	399, 258, 0, 450, 0, 0, 0, 618, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 330, 199, 226,
	0, 0, 409, 458, 470, 0, 0, 0, 254, 0,
	468, 423, 596, 234, 285, 455, 429, 466, 437, 288,
	0, 0, 467, 370, 579, 447, 593, 619, 620, 264,
	403, 605, 516, 613, 637, 227, 261, 417, 501, 599,
	490, 395, 575, 576, 329, 489, 296, 203, 367, 625,
	225, 476, 369, 243, 232, 581, 602, 290, 453, 632,
	214, 511, 591, 240, 480, 0, 0, 640, 248, 500,
	216, 588, 499, 391, 326, 327, 215, 0, 454, 269,
	294, 0, 0, 259, 412, 583, 584, 257, 641, 229,
	612, 221, 0, 611, 405, 578, 589, 392, 381, 220,
	587, 390, 380, 334, 353, 354, 281, 307, 444, 373,
	445, 306, 308, 401, 400, 402, 208, 600, 0, 209,
	0, 495, 601, 642, 449, 213, 235, 236, 238, 0,
	280, 284, 292, 295, 303, 304, 313, 365, 416, 443,
	439, 448, 0, 573, 594, 606, 617, 623, 624, 626,
	627, 628, 629, 630, 633, 631, 404, 311, 491, 333,
	371, 0, 0, 422, 469, 241, 598, 492, 201, 0,
	0, 0, 0, 255, 256, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 638, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 0, 0, 0, 0, 0, 0,
	585, 586, 661, 382, 482, 595, 335, 347, 350, 340,
	359, 0, 360, 336, 337, 342, 344, 345, 346, 351,
	352, 356, 362, 250, 211, 388, 396, 572, 312, 217,
	218, 219, 518, 519, 520, 521, 609, 610, 614, 206,
	459, 460, 461, 462, 293, 604, 309, 465, 464, 331,
	332, 377, 446, 534, 536, 547, 551, 553, 555, 561,
	564, 535, 537, 548, 552, 554, 556, 562, 565, 524,
	526, 528, 530, 543, 542, 539, 567, 568, 545, 550,
	529, 541, 546, 559, 566, 563, 523, 527, 531, 540,
	558, 557, 538, 549, 560, 544, 532, 525, 533, 0,
	198, 222, 366, 0, 451, 289, 639, 608, 603, 207,
	224, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 210, 223, 233, 237, 244,
	262, 277, 279, 286, 299, 310, 318, 319, 322, 328,
	378, 384, 385, 386, 387, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 615, 621, 477, 301, 302, 441, 442, 314,
	315, 635, 636, 300, 592, 622, 590, 634, 616, 435,
	376, 0, 0, 379, 282, 305, 320, 0, 607, 498,
	228, 463, 291, 252, 0, 0, 212, 247, 231, 260,
	275, 278, 324, 389, 397, 426, 431, 297, 272, 245,
	456, 242, 481, 513, 514, 515, 517, 393, 267, 430,
	394, 0, 374, 570, 571, 316, 0, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 364, 268, 0, 0, 427, 0, 205,
	0, 483, 253, 375, 372, 577, 283, 274, 270, 251,
	317, 383, 425, 512, 419, 0, 368, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 249, 325, 204,
	410, 494, 287, 0, 0, 0, 0, 0, 709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 0, 0, 0,
	266, 321, 273, 265, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 399, 258, 0, 450, 0, 0, 0,
	618, 0, 0, 0, 4033, 0, 0, 0, 363, 0,
	330, 199, 226, 0, 0, 409, 458, 470, 0, 0,
	0, 254, 0, 468, 423, 596, 234, 285, 455, 429,
	466, 437, 288, 0, 0, 467, 370, 579, 447, 593,
	619, 620, 264, 403, 605, 516, 613, 637, 227, 261,
	417, 501, 599, 490, 395, 575, 576, 329, 489, 296,
	203, 367, 625, 225, 476, 369, 243, 232, 581, 602,
	290, 453, 632, 214, 511, 591, 240, 480, 0, 0,
	640, 248, 500, 216, 588, 499, 391, 326, 327, 215,
	0, 454, 269, 294, 0, 0, 259, 412, 583, 584,
	257, 641, 229, 612, 221, 0, 611, 405, 578, 589,
	392, 381, 220, 587, 390, 380, 334, 353, 354, 281,
	307, 444, 373, 445, 306, 308, 401, 400, 402, 208,
	600, 0, 209, 0, 495, 601, 642, 449, 213, 235,
	236, 238, 0, 280, 284, 292, 295, 303, 304, 313,
	365, 416, 443, 439, 448, 0, 573, 594, 606, 617,
	623, 624, 626, 627, 628, 629, 630, 633, 631, 404,
	311, 491, 333, 371, 0, 0, 422, 469, 241, 598,
	492, 201, 0, 0, 0, 0, 255, 256, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 638, 502, 508,
	503, 504, 505, 506, 507, 0, 509, 0, 0, 0,
	0, 0, 0, 585, 586, 661, 382, 482, 595, 335,
	347, 350, 340, 359, 0, 360, 336, 337, 342, 344,
	345, 346, 351, 352, 356, 362, 250, 211, 388, 396,
	572, 312, 217, 218, 219, 518, 519, 520, 521, 609,
	610, 614, 206, 459, 460, 461, 462, 293, 604, 309,
	465, 464, 331, 332, 377, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 198, 222, 366, 0, 451, 289, 639,
	608, 603, 207, 224, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 202, 210, 223,
	233, 237, 244, 262, 277, 279, 286, 299, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 484, 485, 486, 487, 488, 496,
	497, 510, 580, 582, 597, 615, 621, 477, 301, 302,
	441, 442, 314, 315, 635, 636, 300, 592, 622, 590,
	634, 616, 435, 376, 0, 0, 379, 282, 305, 320,
	0, 607, 498, 228, 463, 291, 252, 0, 0, 212,
	247, 231, 260, 275, 278, 324, 389, 397, 426, 431,
	297, 272, 245, 456, 242, 481, 513, 514, 515, 517,
	393, 267, 430, 394, 0, 374, 570, 571, 316, 0,
	522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 364, 268, 0, 0,
	427, 0, 205, 0, 483, 253, 375, 372, 577, 283,
	274, 270, 251, 317, 383, 425, 512, 419, 0, 368,
	0, 0, 493, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	249, 325, 204, 410, 494, 287, 0, 0, 0, 0,
	1928, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 246, 0, 0, 0, 349, 358,
	357, 338, 339, 341, 343, 348, 355, 361, 0, 0,
	0, 0, 0, 266, 321, 273, 265, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 399, 258, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 330, 199, 226, 0, 0, 409, 458,
	470, 0, 0, 0, 254, 0, 468, 423, 596, 234,
	285, 455, 429, 466, 437, 288, 0, 0, 467, 370,
	579, 447, 593, 619, 620, 264, 403, 605, 516, 613,
	637, 227, 261, 417, 501, 599, 490, 395, 575, 576,
	329, 489, 296, 203, 367, 625, 225, 476, 369, 243,
	232, 581, 602, 290, 453, 632, 214, 511, 591, 240,
	480, 0, 0, 640, 248, 500, 216, 588, 499, 391,
	326, 327, 215, 0, 454, 269, 294, 0, 0, 259,
	412, 583, 584, 257, 641, 229, 612, 221, 0, 611,
	405, 578, 589, 392, 381, 220, 587, 390, 380, 334,
	353, 354, 281, 307, 444, 373, 445, 306, 308, 401,
	400, 402, 208, 600, 0, 209, 0, 495, 601, 642,
	449, 213, 235, 236, 238, 0, 280, 284, 292, 295,
	303, 304, 313, 365, 416, 443, 439, 448, 0, 573,
	594, 606, 617, 623, 624, 626, 627, 628, 629, 630,
	633, 631, 404, 311, 491, 333, 371, 0, 0, 422,
	469, 241, 598, 492, 201, 0, 0, 0, 0, 255,
	256, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	638, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	0, 0, 0, 0, 0, 0, 585, 586, 661, 382,
	482, 595, 335, 347, 350, 340, 359, 0, 360, 336,
	337, 342, 344, 345, 346, 351, 352, 356, 362, 250,
	211, 388, 396, 572, 312, 217, 218, 219, 518, 519,
	520, 521, 609, 610, 614, 206, 459, 460, 461, 462,
	293, 604, 309, 465, 464, 331, 332, 377, 446, 534,
	536, 547, 551, 553, 555, 561, 564, 535, 537, 548,
	552, 554, 556, 562, 565, 524, 526, 528, 530, 543,
	542, 539, 567, 568, 545, 550, 529, 541, 546, 559,
	566, 563, 523, 527, 531, 540, 558, 557, 538, 549,
	560, 544, 532, 525, 533, 0, 198, 222, 366, 0,
	451, 289, 639, 608, 603, 207, 224, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 210, 223, 233, 237, 244, 262, 277, 279, 286,
	299, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 615, 621,
	477, 301, 302, 441, 442, 314, 315, 635, 636, 300,
	592, 622, 590, 634, 616, 435, 376, 0, 0, 379,
	282, 305, 320, 0, 607, 498, 228, 463, 291, 252,
	0, 0, 212, 247, 231, 260, 275, 278, 324, 389,
	397, 426, 431, 297, 272, 245, 456, 242, 481, 513,
	514, 515, 517, 393, 267, 430, 394, 0, 374, 570,
	571, 316, 0, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 364,
	268, 0, 0, 427, 0, 205, 0, 483, 253, 375,
	372, 577, 283, 274, 270, 251, 317, 383, 425, 512,
	419, 0, 368, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 249, 325, 204, 410, 494, 287, 0,
	0, 0, 0, 0, 709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 349, 358, 357, 338, 339, 341, 343, 348, 355,
	361, 0, 0, 0, 0, 0, 266, 321, 273, 265,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 399,
	258, 0, 450, 0, 0, 0, 618, 0, 0, 0,
	3910, 0, 0, 0, 363, 0, 330, 199, 226, 0,
	0, 409, 458, 470, 0, 0, 0, 254, 0, 468,
	423, 596, 234, 285, 455, 429, 466, 437, 288, 0,
	0, 467, 370, 579, 447, 593, 619, 620, 264, 403,
	605, 516, 613, 637, 227, 261, 417, 501, 599, 490,
	395, 575, 576, 329, 489, 296, 203, 367, 625, 225,
	476, 369, 243, 232, 581, 602, 290, 453, 632, 214,
	511, 591, 240, 480, 0, 0, 640, 248, 500, 216,
	588, 499, 391, 326, 327, 215, 0, 454, 269, 294,
	0, 0, 259, 412, 583, 584, 257, 641, 229, 612,
	221, 0, 611, 405, 578, 589, 392, 381, 220, 587,
	390, 380, 334, 353, 354, 281, 307, 444, 373, 445,
	306, 308, 401, 400, 402, 208, 600, 0, 209, 0,
	495, 601, 642, 449, 213, 235, 236, 238, 0, 280,
	284, 292, 295, 303, 304, 313, 365, 416, 443, 439,
	448, 0, 573, 594, 606, 617, 623, 624, 626, 627,
	628, 629, 630, 633, 631, 404, 311, 491, 333, 371,
	0, 0, 422, 469, 241, 598, 492, 201, 0, 0,
	0, 0, 255, 256, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 638, 502, 508, 503, 504, 505, 506,
	507, 0, 509, 0, 0, 0, 0, 0, 0, 585,
	586, 661, 382, 482, 595, 335, 347, 350, 340, 359,
	0, 360, 336, 337, 342, 344, 345, 346, 351, 352,
	356, 362, 250, 211, 388, 396, 572, 312, 217, 218,
	219, 518, 519, 520, 521, 609, 610, 614, 206, 459,
	460, 461, 462, 293, 604, 309, 465, 464, 331, 332,
	377, 446, 534, 536, 547, 551, 553, 555, 561, 564,
	535, 537, 548, 552, 554, 556, 562, 565, 524, 526,
	528, 530, 543, 542, 539, 567, 568, 545, 550, 529,
	541, 546, 559, 566, 563, 523, 527, 531, 540, 558,
	557, 538, 549, 560, 544, 532, 525, 533, 0, 198,
	222, 366, 0, 451, 289, 639, 608, 603, 207, 224,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 202, 210, 223, 233, 237, 244, 262,
	277, 279, 286, 299, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 301, 302, 441, 442, 314, 315,
	635, 636, 300, 592, 622, 590, 634, 616, 435, 376,
	0, 0, 379, 282, 305, 320, 0, 607, 498, 228,
	463, 291, 252, 0, 0, 212, 247, 231, 260, 275,
	278, 324, 389, 397, 426, 431, 297, 272, 245, 456,
	242, 481, 513, 514, 515, 517, 393, 267, 430, 394,
	0, 374, 570, 571, 316, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 364, 268, 0, 0, 427, 0, 205, 0,
	483, 253, 375, 372, 577, 283, 274, 270, 251, 317,
	383, 425, 512, 419, 0, 368, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 249, 325, 204, 410,
	494, 287, 0, 95, 0, 0, 0, 709, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	246, 0, 0, 0, 349, 358, 357, 338, 339, 341,
	343, 348, 355, 361, 0, 0, 0, 0, 0, 266,
	321, 273, 265, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 399, 258, 0, 450, 0, 0, 0, 618,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 330,
	199, 226, 0, 0, 409, 458, 470, 0, 0, 0,
	254, 0, 468, 423, 596, 234, 285, 455, 429, 466,
	437, 288, 0, 0, 467, 370, 579, 447, 593, 619,
	620, 264, 403, 605, 516, 613, 637, 227, 261, 417,
	501, 599, 490, 395, 575, 576, 329, 489, 296, 203,
	367, 625, 225, 476, 369, 243, 232, 581, 602, 290,
	453, 632, 214, 511, 591, 240, 480, 0, 0, 640,
	248, 500, 216, 588, 499, 391, 326, 327, 215, 0,
	454, 269, 294, 0, 0, 259, 412, 583, 584, 257,
	641, 229, 612, 221, 0, 611, 405, 578, 589, 392,
	381, 220, 587, 390, 380, 334, 353, 354, 281, 307,
	444, 373, 445, 306, 308, 401, 400, 402, 208, 600,
	0, 209, 0, 495, 601, 642, 449, 213, 235, 236,
	238, 0, 280, 284, 292, 295, 303, 304, 313, 365,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 311,
	491, 333, 371, 0, 0, 422, 469, 241, 598, 492,
	201, 0, 0, 0, 0, 255, 256, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 0, 585, 586, 661, 382, 482, 595, 335, 347,
	350, 340, 359, 0, 360, 336, 337, 342, 344, 345,
	346, 351, 352, 356, 362, 250, 211, 388, 396, 572,
	312, 217, 218, 219, 518, 519, 520, 521, 609, 610,
	614, 206, 459, 460, 461, 462, 293, 604, 309, 465,
	464, 331, 332, 377, 446, 534, 536, 547, 551, 553,
	555, 561, 564, 535, 537, 548, 552, 554, 556, 562,
	565, 524, 526, 528, 530, 543, 542, 539, 567, 568,
	545, 550, 529, 541, 546, 559, 566, 563, 523, 527,
	531, 540, 558, 557, 538, 549, 560, 544, 532, 525,
	533, 0, 198, 222, 366, 0, 451, 289, 639, 608,
	603, 207, 224, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 210, 223, 233,
	237, 244, 262, 277, 279, 286, 299, 310, 318, 319,
	322, 328, 378, 384, 385, 386, 387, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 615, 621, 477, 301, 302, 441,
	442, 314, 315, 635, 636, 300, 592, 622, 590, 634,
	616, 435, 376, 0, 0, 379, 282, 305, 320, 0,
	607, 498, 228, 463, 291, 252, 0, 0, 212, 247,
	231, 260, 275, 278, 324, 389, 397, 426, 431, 297,
	272, 245, 456, 242, 481, 513, 514, 515, 517, 393,
	267, 430, 394, 0, 374, 570, 571, 316, 0, 522,
	0, 0, 0, 0, 2381, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 364, 268, 0, 0, 427,
	0, 205, 0, 483, 253, 375, 372, 577, 283, 274,
	270, 251, 317, 383, 425, 512, 419, 0, 368, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 249,
	325, 204, 410, 494, 287, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 0, 0, 0,
	0, 0, 266, 321, 273, 265, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 399, 258, 0, 450, 0,
	0, 0, 618, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 330, 199, 226, 0, 0, 409, 458, 470,
	0, 0, 0, 254, 0, 468, 423, 596, 234, 285,
	455, 429, 466, 437, 288, 0, 0, 467, 370, 579,
	447, 593, 619, 620, 264, 403, 605, 516, 613, 637,
	227, 261, 417, 501, 599, 490, 395, 575, 576, 329,
	489, 296, 203, 367, 625, 225, 476, 369, 243, 232,
	581, 602, 290, 453, 632, 214, 511, 591, 240, 480,
	0, 0, 640, 248, 500, 216, 588, 499, 391, 326,
	327, 215, 0, 454, 269, 294, 0, 0, 259, 412,
	583, 584, 257, 641, 229, 612, 221, 0, 611, 405,
	578, 589, 392, 381, 220, 587, 390, 380, 334, 353,
	354, 281, 307, 444, 373, 445, 306, 308, 401, 400,
	402, 208, 600, 0, 209, 0, 495, 601, 642, 449,
	213, 235, 236, 238, 0, 280, 284, 292, 295, 303,
	304, 313, 365, 416, 443, 439, 448, 0, 573, 594,
	606, 617, 623, 624, 626, 627, 628, 629, 630, 633,
	631, 404, 311, 491, 333, 371, 0, 0, 422, 469,
	241, 598, 492, 201, 0, 0, 0, 0, 255, 256,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 638,
	502, 508, 503, 504, 505, 506, 507, 0, 509, 0,
	0, 0, 0, 0, 0, 585, 586, 661, 382, 482,
	595, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 250, 211,
	388, 396, 572, 312, 217, 218, 219, 518, 519, 520,
	521, 609, 610, 614, 206, 459, 460, 461, 462, 293,
	604, 309, 465, 464, 331, 332, 377, 446, 534, 536,
	547, 551, 553, 555, 561, 564, 535, 537, 548, 552,
	554, 556, 562, 565, 524, 526, 528, 530, 543, 542,
	539, 567, 568, 545, 550, 529, 541, 546, 559, 566,
	563, 523, 527, 531, 540, 558, 557, 538, 549, 560,
	544, 532, 525, 533, 0, 198, 222, 366, 0, 451,
	289, 639, 608, 603, 207, 224, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	210, 223, 233, 237, 244, 262, 277, 279, 286, 299,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 484, 485, 486, 487,
	488, 496, 497, 510, 580, 582, 597, 615, 621, 477,
	301, 302, 441, 442, 314, 315, 635, 636, 300, 592,
	622, 590, 634, 616, 435, 376, 0, 0, 379, 282,
	305, 320, 0, 607, 498, 228, 463, 291, 252, 0,
	0, 212, 247, 231, 260, 275, 278, 324, 389, 397,
	426, 431, 297, 272, 245, 456, 242, 481, 513, 514,
	515, 517, 393, 267, 430, 394, 0, 374, 570, 571,
	316, 0, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 364, 268,
	0, 0, 427, 0, 205, 0, 483, 253, 375, 372,
	577, 283, 274, 270, 251, 317, 383, 425, 512, 419,
	0, 368, 0, 0, 493, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 249, 325, 204, 410, 494, 287, 0, 0,
	0, 0, 1749, 709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 246, 0, 0, 0,
	349, 358, 357, 338, 339, 341, 343, 348, 355, 361,
	0, 0, 0, 0, 0, 266, 321, 273, 265, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 399, 258,
	0, 450, 0, 0, 0, 618, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 330, 199, 226, 0, 0,
	409, 458, 470, 0, 0, 0, 254, 0, 468, 423,
	596, 234, 285, 455, 429, 466, 437, 288, 0, 0,
	467, 370, 579, 447, 593, 619, 620, 264, 403, 605,
	516, 613, 637, 227, 261, 417, 501, 599, 490, 395,
	575, 576, 329, 489, 296, 203, 367, 625, 225, 476,
	369, 243, 232, 581, 602, 290, 453, 632, 214, 511,
	591, 240, 480, 0, 0, 640, 248, 500, 216, 588,
	499, 391, 326, 327, 215, 0, 454, 269, 294, 0,
	0, 259, 412, 583, 584, 257, 641, 229, 612, 221,
	0, 611, 405, 578, 589, 392, 381, 220, 587, 390,
	380, 334, 353, 354, 281, 307, 444, 373, 445, 306,
	308, 401, 400, 402, 208, 600, 0, 209, 0, 495,
	601, 642, 449, 213, 235, 236, 238, 0, 280, 284,
	292, 295, 303, 304, 313, 365, 416, 443, 439, 448,
	0, 573, 594, 606, 617, 623, 624, 626, 627, 628,
	629, 630, 633, 631, 404, 311, 491, 333, 371, 0,
	0, 422, 469, 241, 598, 492, 201, 0, 0, 0,
	0, 255, 256, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 638, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 0, 0, 0, 0, 0, 0, 585, 586,
	661, 382, 482, 595, 335, 347, 350, 340, 359, 0,
	360, 336, 337, 342, 344, 345, 346, 351, 352, 356,
	362, 250, 211, 388, 396, 572, 312, 217, 218, 219,
	518, 519, 520, 521, 609, 610, 614, 206, 459, 460,
	461, 462, 293, 604, 309, 465, 464, 331, 332, 377,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 198, 222,
	366, 0, 451, 289, 639, 608, 603, 207, 224, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 210, 223, 233, 237, 244, 262, 277,
	279, 286, 299, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	615, 621, 477, 301, 302, 441, 442, 314, 315, 635,
	636, 300, 592, 622, 590, 634, 616, 435, 376, 0,
	0, 379, 282, 305, 320, 0, 607, 498, 228, 463,
	291, 252, 0, 0, 212, 247, 231, 260, 275, 278,
	324, 389, 397, 426, 431, 297, 272, 245, 456, 242,
	481, 513, 514, 515, 517, 393, 267, 430, 394, 0,
	374, 570, 571, 316, 0, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 364, 268, 0, 0, 427, 0, 205, 0, 483,
	253, 375, 372, 577, 283, 274, 270, 251, 317, 383,
	425, 512, 419, 0, 368, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 249, 325, 204, 410, 494,
	287, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 349, 358, 357, 338, 339, 341, 343,
	348, 355, 361, 0, 0, 0, 0, 0, 266, 321,
	273, 265, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 399, 258, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 330, 199,
	226, 0, 0, 409, 458, 470, 0, 0, 0, 254,
	0, 468, 423, 596, 234, 285, 455, 429, 466, 437,
	288, 0, 0, 467, 370, 579, 447, 593, 619, 620,
	264, 403, 605, 516, 613, 637, 227, 261, 417, 501,
	599, 490, 395, 575, 576, 329, 489, 296, 203, 367,
	625, 225, 476, 369, 243, 232, 581, 602, 290, 453,
	632, 214, 511, 591, 240, 480, 0, 0, 640, 248,
	500, 216, 588, 499, 391, 326, 327, 215, 0, 454,
	269, 294, 0, 0, 259, 412, 583, 584, 257, 641,
	229, 612, 221, 0, 611, 405, 578, 589, 392, 381,
	220, 587, 390, 380, 334, 353, 354, 281, 307, 444,
	373, 445, 306, 308, 401, 400, 402, 208, 600, 0,
	209, 0, 495, 601, 642, 449, 213, 235, 236, 238,
	0, 280, 284, 292, 295, 303, 304, 313, 365, 416,
	443, 439, 448, 0, 573, 594, 606, 617, 623, 624,
	626, 627, 628, 629, 630, 633, 631, 404, 311, 491,
	333, 371, 0, 0, 422, 469, 241, 598, 492, 201,
	0, 0, 0, 0, 255, 256, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 638, 502, 508, 503, 504,
	505, 506, 507, 0, 509, 0, 0, 0, 0, 0,
	0, 585, 586, 661, 382, 482, 595, 335, 347, 350,
	340, 359, 0, 360, 336, 337, 342, 344, 345, 346,
	351, 352, 356, 362, 250, 211, 388, 396, 572, 312,
	217, 218, 219, 518, 519, 520, 521, 609, 610, 614,
	206, 459, 460, 461, 462, 293, 604, 309, 465, 464,
	331, 332, 377, 446, 534, 536, 547, 551, 553, 555,
	561, 564, 535, 537, 548, 552, 554, 556, 562, 565,
	524, 526, 528, 530, 543, 542, 539, 567, 568, 545,
	550, 529, 541, 546, 559, 566, 563, 523, 527, 531,
	540, 558, 557, 538, 549, 560, 544, 532, 525, 533,
	0, 198, 222, 366, 2040, 451, 289, 639, 608, 603,
	207, 224, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 202, 210, 223, 233, 237,
	244, 262, 277, 279, 286, 299, 310, 318, 319, 322,
	328, 378, 384, 385, 386, 387, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 484, 485, 486, 487, 488, 496, 497, 510,
	580, 582, 597, 615, 621, 477, 301, 302, 441, 442,
	314, 315, 635, 636, 300, 592, 622, 590, 634, 616,
	435, 376, 0, 0, 379, 282, 305, 320, 0, 607,
	498, 228, 463, 291, 252, 0, 0, 212, 247, 231,
	260, 275, 278, 324, 389, 397, 426, 431, 297, 272,
	245, 456, 242, 481, 513, 514, 515, 517, 393, 267,
	430, 394, 0, 374, 570, 571, 316, 0, 522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 364, 268, 0, 0, 427, 0,
	205, 0, 483, 253, 375, 372, 577, 283, 274, 270,
	251, 317, 383, 425, 512, 419, 0, 368, 0, 0,
	493, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 249, 325,
	204, 410, 494, 287, 0, 0, 0, 0, 2031, 709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 246, 0, 0, 0, 349, 358, 357, 338,
	339, 341, 343, 348, 355, 361, 0, 0, 0, 0,
	0, 266, 321, 273, 265, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 399, 258, 0, 450, 0, 0,
	0, 618, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 330, 199, 226, 0, 0, 409, 458, 470, 0,
	0, 0, 254, 0, 468, 423, 596, 234, 285, 455,
	429, 466, 437, 288, 0, 0, 467, 370, 579, 447,
	593, 619, 620, 264, 403, 605, 516, 613, 637, 227,
	261, 417, 501, 599, 490, 395, 575, 576, 329, 489,
	296, 203, 367, 625, 225, 476, 369, 243, 232, 581,
	602, 290, 453, 632, 214, 511, 591, 240, 480, 0,
	0, 640, 248, 500, 216, 588, 499, 391, 326, 327,
	215, 0, 454, 269, 294, 0, 0, 259, 412, 583,
	584, 257, 641, 229, 612, 221, 0, 611, 405, 578,
	589, 392, 381, 220, 587, 390, 380, 334, 353, 354,
	281, 307, 444, 373, 445, 306, 308, 401, 400, 402,
	208, 600, 0, 209, 0, 495, 601, 642, 449, 213,
	235, 236, 238, 0, 280, 284, 292, 295, 303, 304,
	313, 365, 416, 443, 439, 448, 0, 573, 594, 606,
	617, 623, 624, 626, 627, 628, 629, 630, 633, 631,
	404, 311, 491, 333, 371, 0, 0, 422, 469, 241,
	598, 492, 201, 0, 0, 0, 0, 255, 256, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 638, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 0, 0,
	0, 0, 0, 0, 585, 586, 661, 382, 482, 595,
	335, 347, 350, 340, 359, 0, 360, 336, 337, 342,
	344, 345, 346, 351, 352, 356, 362, 250, 211, 388,
	396, 572, 312, 217, 218, 219, 518, 519, 520, 521,
	609, 610, 614, 206, 459, 460, 461, 462, 293, 604,
	309, 465, 464, 331, 332, 377, 446, 534, 536, 547,
	551, 553, 555, 561, 564, 535, 537, 548, 552, 554,
	556, 562, 565, 524, 526, 528, 530, 543, 542, 539,
	567, 568, 545, 550, 529, 541, 546, 559, 566, 563,
	523, 527, 531, 540, 558, 557, 538, 549, 560, 544,
	532, 525, 533, 0, 198, 222, 366, 0, 451, 289,
	639, 608, 603, 207, 224, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 210,
	223, 233, 237, 244, 262, 277, 279, 286, 299, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 301,
	302, 441, 442, 314, 315, 635, 636, 300, 592, 622,
	590, 634, 616, 435, 376, 0, 0, 379, 282, 305,
	320, 0, 607, 498, 228, 463, 291, 252, 0, 0,
	212, 247, 231, 260, 275, 278, 324, 389, 397, 426,
	431, 297, 272, 245, 456, 242, 481, 513, 514, 515,
	517, 393, 267, 430, 394, 0, 374, 570, 571, 316,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 1895, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 364, 268, 0,
	0, 427, 0, 205, 0, 483, 253, 375, 372, 577,
	283, 274, 270, 251, 317, 383, 425, 512, 419, 0,
	368, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 249, 325, 204, 410, 494, 287, 0, 0, 0,
	0, 0, 709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 349,
	358, 357, 338, 339, 341, 343, 348, 355, 361, 0,
	0, 0, 0, 0, 266, 321, 273, 265, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 399, 258, 0,
	450, 0, 0, 0, 618, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 330, 199, 226, 0, 0, 409,
	458, 470, 0, 0, 0, 254, 0, 468, 423, 596,
	234, 285, 455, 429, 466, 437, 288, 0, 0, 467,
	370, 579, 447, 593, 619, 620, 264, 403, 605, 516,
	613, 637, 227, 261, 417, 501, 599, 490, 395, 575,
	576, 329, 489, 296, 203, 367, 625, 225, 476, 369,
	243, 232, 581, 602, 290, 453, 632, 214, 511, 591,
	240, 480, 0, 0, 640, 248, 500, 216, 588, 499,
	391, 326, 327, 215, 0, 454, 269, 294, 0, 0,
	259, 412, 583, 584, 257, 641, 229, 612, 221, 0,
	611, 405, 578, 589, 392, 381, 220, 587, 390, 380,
	334, 353, 354, 281, 307, 444, 373, 445, 306, 308,
	401, 400, 402, 208, 600, 0, 209, 0, 495, 601,
	642, 449, 213, 235, 236, 238, 0, 280, 284, 292,
	295, 303, 304, 313, 365, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 311, 491, 333, 371, 0, 0,
	422, 469, 241, 598, 492, 201, 0, 0, 0, 0,
	255, 256, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 0, 585, 586, 661,
	382, 482, 595, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	250, 211, 388, 396, 572, 312, 217, 218, 219, 518,
	519, 520, 521, 609, 610, 614, 206, 459, 460, 461,
	462, 293, 604, 309, 465, 464, 331, 332, 377, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 0, 198, 222, 366,
	0, 451, 289, 639, 608, 603, 207, 224, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 202, 210, 223, 233, 237, 244, 262, 277, 279,
	286, 299, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 484, 485,
	486, 487, 488, 496, 497, 510, 580, 582, 597, 615,
	621, 477, 301, 302, 441, 442, 314, 315, 635, 636,
	300, 592, 622, 590, 634, 616, 435, 376, 0, 0,
	379, 282, 305, 320, 0, 607, 498, 228, 463, 291,
	252, 0, 0, 212, 247, 231, 260, 275, 278, 324,
	389, 397, 426, 431, 297, 272, 245, 456, 242, 481,
	513, 514, 515, 517, 393, 267, 430, 394, 0, 374,
	570, 571, 316, 0, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 1893, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	364, 268, 0, 0, 427, 0, 205, 0, 483, 253,
	375, 372, 577, 283, 274, 270, 251, 317, 383, 425,
	512, 419, 0, 368, 0, 0, 493, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 249, 325, 204, 410, 494, 287,
	0, 0, 0, 0, 0, 709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 246, 0,
	0, 0, 349, 358, 357, 338, 339, 341, 343, 348,
	355, 361, 0, 0, 0, 0, 0, 266, 321, 273,
	265, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	399, 258, 0, 450, 0, 0, 0, 618, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 330, 199, 226,
	0, 0, 409, 458, 470, 0, 0, 0, 254, 0,
	468, 423, 596, 234, 285, 455, 429, 466, 437, 288,
	0, 0, 467, 370, 579, 447, 593, 619, 620, 264,
	403, 605, 516, 613, 637, 227, 261, 417, 501, 599,
	490, 395, 575, 576, 329, 489, 296, 203, 367, 625,
	225, 476, 369, 243, 232, 581, 602, 290, 453, 632,
	214, 511, 591, 240, 480, 0, 0, 640, 248, 500,
	216, 588, 499, 391, 326, 327, 215, 0, 454, 269,
	294, 0, 0, 259, 412, 583, 584, 257, 641, 229,
	612, 221, 0, 611, 405, 578, 589, 392, 381, 220,
	587, 390, 380, 334, 353, 354, 281, 307, 444, 373,
	445, 306, 308, 401, 400, 402, 208, 600, 0, 209,
	0, 495, 601, 642, 449, 213, 235, 236, 238, 0,
	280, 284, 292, 295, 303, 304, 313, 365, 416, 443,
	439, 448, 0, 573, 594, 606, 617, 623, 624, 626,
	627, 628, 629, 630, 633, 631, 404, 311, 491, 333,
	371, 0, 0, 422, 469, 241, 598, 492, 201, 0,
	0, 0, 0, 255, 256, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 638, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 0, 0, 0, 0, 0, 0,
	585, 586, 661, 382, 482, 595, 335, 347, 350, 340,
	359, 0, 360, 336, 337, 342, 344, 345, 346, 351,
	352, 356, 362, 250, 211, 388, 396, 572, 312, 217,
	218, 219, 518, 519, 520, 521, 609, 610, 614, 206,
	459, 460, 461, 462, 293, 604, 309, 465, 464, 331,
	332, 377, 446, 534, 536, 547, 551, 553, 555, 561,
	564, 535, 537, 548, 552, 554, 556, 562, 565, 524,
	526, 528, 530, 543, 542, 539, 567, 568, 545, 550,
	529, 541, 546, 559, 566, 563, 523, 527, 531, 540,
	558, 557, 538, 549, 560, 544, 532, 525, 533, 0,
	198, 222, 366, 0, 451, 289, 639, 608, 603, 207,
	224, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 210, 223, 233, 237, 244,
	262, 277, 279, 286, 299, 310, 318, 319, 322, 328,
	378, 384, 385, 386, 387, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 615, 621, 477, 301, 302, 441, 442, 314,
	315, 635, 636, 300, 592, 622, 590, 634, 616, 435,
	376, 0, 0, 379, 282, 305, 320, 0, 607, 498,
	228, 463, 291, 252, 0, 0, 212, 247, 231, 260,
	275, 278, 324, 389, 397, 426, 431, 297, 272, 245,
	456, 242, 481, 513, 514, 515, 517, 393, 267, 430,
	394, 0, 374, 570, 571, 316, 0, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 1891, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 364, 268, 0, 0, 427, 0, 205,
	0, 483, 253, 375, 372, 577, 283, 274, 270, 251,
	317, 383, 425, 512, 419, 0, 368, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 249, 325, 204,
	410, 494, 287, 0, 0, 0, 0, 0, 709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 0, 0, 0,
	266, 321, 273, 265, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 399, 258, 0, 450, 0, 0, 0,
	618, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 199, 226, 0, 0, 409, 458, 470, 0, 0,
	0, 254, 0, 468, 423, 596, 234, 285, 455, 429,
	466, 437, 288, 0, 0, 467, 370, 579, 447, 593,
	619, 620, 264, 403, 605, 516, 613, 637, 227, 261,
	417, 501, 599, 490, 395, 575, 576, 329, 489, 296,
	203, 367, 625, 225, 476, 369, 243, 232, 581, 602,
	290, 453, 632, 214, 511, 591, 240, 480, 0, 0,
	640, 248, 500, 216, 588, 499, 391, 326, 327, 215,
	0, 454, 269, 294, 0, 0, 259, 412, 583, 584,
	257, 641, 229, 612, 221, 0, 611, 405, 578, 589,
	392, 381, 220, 587, 390, 380, 334, 353, 354, 281,
	307, 444, 373, 445, 306, 308, 401, 400, 402, 208,
	600, 0, 209, 0, 495, 601, 642, 449, 213, 235,
	236, 238, 0, 280, 284, 292, 295, 303, 304, 313,
	365, 416, 443, 439, 448, 0, 573, 594, 606, 617,
	623, 624, 626, 627, 628, 629, 630, 633, 631, 404,
	311, 491, 333, 371, 0, 0, 422, 469, 241, 598,
	492, 201, 0, 0, 0, 0, 255, 256, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 638, 502, 508,
	503, 504, 505, 506, 507, 0, 509, 0, 0, 0,
	0, 0, 0, 585, 586, 661, 382, 482, 595, 335,
	347, 350, 340, 359, 0, 360, 336, 337, 342, 344,
	345, 346, 351, 352, 356, 362, 250, 211, 388, 396,
	572, 312, 217, 218, 219, 518, 519, 520, 521, 609,
	610, 614, 206, 459, 460, 461, 462, 293, 604, 309,
	465, 464, 331, 332, 377, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 198, 222, 366, 0, 451, 289, 639,
	608, 603, 207, 224, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 202, 210, 223,
	233, 237, 244, 262, 277, 279, 286, 299, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 484, 485, 486, 487, 488, 496,
	497, 510, 580, 582, 597, 615, 621, 477, 301, 302,
	441, 442, 314, 315, 635, 636, 300, 592, 622, 590,
	634, 616, 435, 376, 0, 0, 379, 282, 305, 320,
	0, 607, 498, 228, 463, 291, 252, 0, 0, 212,
	247, 231, 260, 275, 278, 324, 389, 397, 426, 431,
	297, 272, 245, 456, 242, 481, 513, 514, 515, 517,
	393, 267, 430, 394, 0, 374, 570, 571, 316, 0,
	522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 1889, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 364, 268, 0, 0,
	427, 0, 205, 0, 483, 253, 375, 372, 577, 283,
	274, 270, 251, 317, 383, 425, 512, 419, 0, 368,
	0, 0, 493, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	249, 325, 204, 410, 494, 287, 0, 0, 0, 0,
	0, 709, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 246, 0, 0, 0, 349, 358,
	357, 338, 339, 341, 343, 348, 355, 361, 0, 0,
	0, 0, 0, 266, 321, 273, 265, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 399, 258, 0, 450,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 330, 199, 226, 0, 0, 409, 458,
	470, 0, 0, 0, 254, 0, 468, 423, 596, 234,
	285, 455, 429, 466, 437, 288, 0, 0, 467, 370,
	579, 447, 593, 619, 620, 264, 403, 605, 516, 613,
	637, 227, 261, 417, 501, 599, 490, 395, 575, 576,
	329, 489, 296, 203, 367, 625, 225, 476, 369, 243,
	232, 581, 602, 290, 453, 632, 214, 511, 591, 240,
	480, 0, 0, 640, 248, 500, 216, 588, 499, 391,
	326, 327, 215, 0, 454, 269, 294, 0, 0, 259,
	412, 583, 584, 257, 641, 229, 612, 221, 0, 611,
	405, 578, 589, 392, 381, 220, 587, 390, 380, 334,
	353, 354, 281, 307, 444, 373, 445, 306, 308, 401,
	400, 402, 208, 600, 0, 209, 0, 495, 601, 642,
	449, 213, 235, 236, 238, 0, 280, 284, 292, 295,
	303, 304, 313, 365, 416, 443, 439, 448, 0, 573,
	594, 606, 617, 623, 624, 626, 627, 628, 629, 630,
	633, 631, 404, 311, 491, 333, 371, 0, 0, 422,
	469, 241, 598, 492, 201, 0, 0, 0, 0, 255,
	256, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	638, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	0, 0, 0, 0, 0, 0, 585, 586, 661, 382,
	482, 595, 335, 347, 350, 340, 359, 0, 360, 336,
	337, 342, 344, 345, 346, 351, 352, 356, 362, 250,
	211, 388, 396, 572, 312, 217, 218, 219, 518, 519,
	520, 521, 609, 610, 614, 206, 459, 460, 461, 462,
	293, 604, 309, 465, 464, 331, 332, 377, 446, 534,
	536, 547, 551, 553, 555, 561, 564, 535, 537, 548,
	552, 554, 556, 562, 565, 524, 526, 528, 530, 543,
	542, 539, 567, 568, 545, 550, 529, 541, 546, 559,
	566, 563, 523, 527, 531, 540, 558, 557, 538, 549,
	560, 544, 532, 525, 533, 0, 198, 222, 366, 0,
	451, 289, 639, 608, 603, 207, 224, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 210, 223, 233, 237, 244, 262, 277, 279, 286,
	299, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 615, 621,
	477, 301, 302, 441, 442, 314, 315, 635, 636, 300,
	592, 622, 590, 634, 616, 435, 376, 0, 0, 379,
	282, 305, 320, 0, 607, 498, 228, 463, 291, 252,
	0, 0, 212, 247, 231, 260, 275, 278, 324, 389,
	397, 426, 431, 297, 272, 245, 456, 242, 481, 513,
	514, 515, 517, 393, 267, 430, 394, 0, 374, 570,
	571, 316, 0, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 1887, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 364,
	268, 0, 0, 427, 0, 205, 0, 483, 253, 375,
	372, 577, 283, 274, 270, 251, 317, 383, 425, 512,
	419, 0, 368, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 249, 325, 204, 410, 494, 287, 0,
	0, 0, 0, 0, 709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 349, 358, 357, 338, 339, 341, 343, 348, 355,
	361, 0, 0, 0, 0, 0, 266, 321, 273, 265,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 399,
	258, 0, 450, 0, 0, 0, 618, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 330, 199, 226, 0,
	0, 409, 458, 470, 0, 0, 0, 254, 0, 468,
	423, 596, 234, 285, 455, 429, 466, 437, 288, 0,
	0, 467, 370, 579, 447, 593, 619, 620, 264, 403,
	605, 516, 613, 637, 227, 261, 417, 501, 599, 490,
	395, 575, 576, 329, 489, 296, 203, 367, 625, 225,
	476, 369, 243, 232, 581, 602, 290, 453, 632, 214,
	511, 591, 240, 480, 0, 0, 640, 248, 500, 216,
	588, 499, 391, 326, 327, 215, 0, 454, 269, 294,
	0, 0, 259, 412, 583, 584, 257, 641, 229, 612,
	221, 0, 611, 405, 578, 589, 392, 381, 220, 587,
	390, 380, 334, 353, 354, 281, 307, 444, 373, 445,
	306, 308, 401, 400, 402, 208, 600, 0, 209, 0,
	495, 601, 642, 449, 213, 235, 236, 238, 0, 280,
	284, 292, 295, 303, 304, 313, 365, 416, 443, 439,
	448, 0, 573, 594, 606, 617, 623, 624, 626, 627,
	628, 629, 630, 633, 631, 404, 311, 491, 333, 371,
	0, 0, 422, 469, 241, 598, 492, 201, 0, 0,
	0, 0, 255, 256, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 638, 502, 508, 503, 504, 505, 506,
	507, 0, 509, 0, 0, 0, 0, 0, 0, 585,
	586, 661, 382, 482, 595, 335, 347, 350, 340, 359,
	0, 360, 336, 337, 342, 344, 345, 346, 351, 352,
	356, 362, 250, 211, 388, 396, 572, 312, 217, 218,
	219, 518, 519, 520, 521, 609, 610, 614, 206, 459,
	460, 461, 462, 293, 604, 309, 465, 464, 331, 332,
	377, 446, 534, 536, 547, 551, 553, 555, 561, 564,
	535, 537, 548, 552, 554, 556, 562, 565, 524, 526,
	528, 530, 543, 542, 539, 567, 568, 545, 550, 529,
	541, 546, 559, 566, 563, 523, 527, 531, 540, 558,
	557, 538, 549, 560, 544, 532, 525, 533, 0, 198,
	222, 366, 0, 451, 289, 639, 608, 603, 207, 224,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 202, 210, 223, 233, 237, 244, 262,
	277, 279, 286, 299, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 406, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 301, 302, 441, 442, 314, 315,
	635, 636, 300, 592, 622, 590, 634, 616, 435, 376,
	0, 0, 379, 282, 305, 320, 0, 607, 498, 228,
	463, 291, 252, 0, 0, 212, 247, 231, 260, 275,
	278, 324, 389, 397, 426, 431, 297, 272, 245, 456,
	242, 481, 513, 514, 515, 517, 393, 267, 430, 394,
	0, 374, 570, 571, 316, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	1883, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 364, 268, 0, 0, 427, 0, 205, 0,
	483, 253, 375, 372, 577, 283, 274, 270, 251, 317,
	383, 425, 512, 419, 0, 368, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 249, 325, 204, 410,
	494, 287, 0, 0, 0, 0, 0, 709, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	246, 0, 0, 0, 349, 358, 357, 338, 339, 341,
	343, 348, 355, 361, 0, 0, 0, 0, 0, 266,
	321, 273, 265, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 399, 258, 0, 450, 0, 0, 0, 618,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 330,
	199, 226, 0, 0, 409, 458, 470, 0, 0, 0,
	254, 0, 468, 423, 596, 234, 285, 455, 429, 466,
	437, 288, 0, 0, 467, 370, 579, 447, 593, 619,
	620, 264, 403, 605, 516, 613, 637, 227, 261, 417,
	501, 599, 490, 395, 575, 576, 329, 489, 296, 203,
	367, 625, 225, 476, 369, 243, 232, 581, 602, 290,
	453, 632, 214, 511, 591, 240, 480, 0, 0, 640,
	248, 500, 216, 588, 499, 391, 326, 327, 215, 0,
	454, 269, 294, 0, 0, 259, 412, 583, 584, 257,
	641, 229, 612, 221, 0, 611, 405, 578, 589, 392,
	381, 220, 587, 390, 380, 334, 353, 354, 281, 307,
	444, 373, 445, 306, 308, 401, 400, 402, 208, 600,
	0, 209, 0, 495, 601, 642, 449, 213, 235, 236,
	238, 0, 280, 284, 292, 295, 303, 304, 313, 365,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 311,
	491, 333, 371, 0, 0, 422, 469, 241, 598, 492,
	201, 0, 0, 0, 0, 255, 256, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 0, 585, 586, 661, 382, 482, 595, 335, 347,
	350, 340, 359, 0, 360, 336, 337, 342, 344, 345,
	346, 351, 352, 356, 362, 250, 211, 388, 396, 572,
	312, 217, 218, 219, 518, 519, 520, 521, 609, 610,
	614, 206, 459, 460, 461, 462, 293, 604, 309, 465,
	464, 331, 332, 377, 446, 534, 536, 547, 551, 553,
	555, 561, 564, 535, 537, 548, 552, 554, 556, 562,
	565, 524, 526, 528, 530, 543, 542, 539, 567, 568,
	545, 550, 529, 541, 546, 559, 566, 563, 523, 527,
	531, 540, 558, 557, 538, 549, 560, 544, 532, 525,
	533, 0, 198, 222, 366, 0, 451, 289, 639, 608,
	603, 207, 224, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 210, 223, 233,
	237, 244, 262, 277, 279, 286, 299, 310, 318, 319,
	322, 328, 378, 384, 385, 386, 387, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 615, 621, 477, 301, 302, 441,
	442, 314, 315, 635, 636, 300, 592, 622, 590, 634,
	616, 435, 376, 0, 0, 379, 282, 305, 320, 0,
	607, 498, 228, 463, 291, 252, 0, 0, 212, 247,
	231, 260, 275, 278, 324, 389, 397, 426, 431, 297,
	272, 245, 456, 242, 481, 513, 514, 515, 517, 393,
	267, 430, 394, 0, 374, 570, 571, 316, 0, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 1881, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 364, 268, 0, 0, 427,
	0, 205, 0, 483, 253, 375, 372, 577, 283, 274,
	270, 251, 317, 383, 425, 512, 419, 0, 368, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 249,
	325, 204, 410, 494, 287, 0, 0, 0, 0, 0,
	709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 0, 0, 0,
	0, 0, 266, 321, 273, 265, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 399, 258, 0, 450, 0,
	0, 0, 618, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 330, 199, 226, 0, 0, 409, 458, 470,
	0, 0, 0, 254, 0, 468, 423, 596, 234, 285,
	455, 429, 466, 437, 288, 0, 0, 467, 370, 579,
	447, 593, 619, 620, 264, 403, 605, 516, 613, 637,
	227, 261, 417, 501, 599, 490, 395, 575, 576, 329,
	489, 296, 203, 367, 625, 225, 476, 369, 243, 232,
	581, 602, 290, 453, 632, 214, 511, 591, 240, 480,
	0, 0, 640, 248, 500, 216, 588, 499, 391, 326,
	327, 215, 0, 454, 269, 294, 0, 0, 259, 412,
	583, 584, 257, 641, 229, 612, 221, 0, 611, 405,
	578, 589, 392, 381, 220, 587, 390, 380, 334, 353,
	354, 281, 307, 444, 373, 445, 306, 308, 401, 400,
	402, 208, 600, 0, 209, 0, 495, 601, 642, 449,
	213, 235, 236, 238, 0, 280, 284, 292, 295, 303,
	304, 313, 365, 416, 443, 439, 448, 0, 573, 594,
	606, 617, 623, 624, 626, 627, 628, 629, 630, 633,
	631, 404, 311, 491, 333, 371, 0, 0, 422, 469,
	241, 598, 492, 201, 0, 0, 0, 0, 255, 256,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 638,
	502, 508, 503, 504, 505, 506, 507, 0, 509, 0,
	0, 0, 0, 0, 0, 585, 586, 661, 382, 482,
	595, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 250, 211,
	388, 396, 572, 312, 217, 218, 219, 518, 519, 520,
	521, 609, 610, 614, 206, 459, 460, 461, 462, 293,
	604, 309, 465, 464, 331, 332, 377, 446, 534, 536,
	547, 551, 553, 555, 561, 564, 535, 537, 548, 552,
	554, 556, 562, 565, 524, 526, 528, 530, 543, 542,
	539, 567, 568, 545, 550, 529, 541, 546, 559, 566,
	563, 523, 527, 531, 540, 558, 557, 538, 549, 560,
	544, 532, 525, 533, 0, 198, 222, 366, 0, 451,
	289, 639, 608, 603, 207, 224, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	210, 223, 233, 237, 244, 262, 277, 279, 286, 299,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 484, 485, 486, 487,
	488, 496, 497, 510, 580, 582, 597, 615, 621, 477,
	301, 302, 441, 442, 314, 315, 635, 636, 300, 592,
	622, 590, 634, 616, 435, 376, 0, 0, 379, 282,
	305, 320, 0, 607, 498, 228, 463, 291, 252, 0,
	0, 212, 247, 231, 260, 275, 278, 324, 389, 397,
	426, 431, 297, 272, 245, 456, 242, 481, 513, 514,
	515, 517, 393, 267, 430, 394, 0, 374, 570, 571,
	316, 0, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 1879, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 364, 268,
	0, 0, 427, 0, 205, 0, 483, 253, 375, 372,
	577, 283, 274, 270, 251, 317, 383, 425, 512, 419,
	0, 368, 0, 0, 493, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 249, 325, 204, 410, 494, 287, 0, 0,
	0, 0, 0, 709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 246, 0, 0, 0,
	349, 358, 357, 338, 339, 341, 343, 348, 355, 361,
	0, 0, 0, 0, 0, 266, 321, 273, 265, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 399, 258,
	0, 450, 0, 0, 0, 618, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 330, 199, 226, 0, 0,
	409, 458, 470, 0, 0, 0, 254, 0, 468, 423,
	596, 234, 285, 455, 429, 466, 437, 288, 0, 0,
	467, 370, 579, 447, 593, 619, 620, 264, 403, 605,
	516, 613, 637, 227, 261, 417, 501, 599, 490, 395,
	575, 576, 329, 489, 296, 203, 367, 625, 225, 476,
	369, 243, 232, 581, 602, 290, 453, 632, 214, 511,
	591, 240, 480, 0, 0, 640, 248, 500, 216, 588,
	499, 391, 326, 327, 215, 0, 454, 269, 294, 0,
	0, 259, 412, 583, 584, 257, 641, 229, 612, 221,
	0, 611, 405, 578, 589, 392, 381, 220, 587, 390,
	380, 334, 353, 354, 281, 307, 444, 373, 445, 306,
	308, 401, 400, 402, 208, 600, 0, 209, 0, 495,
	601, 642, 449, 213, 235, 236, 238, 0, 280, 284,
	292, 295, 303, 304, 313, 365, 416, 443, 439, 448,
	0, 573, 594, 606, 617, 623, 624, 626, 627, 628,
	629, 630, 633, 631, 404, 311, 491, 333, 371, 0,
	0, 422, 469, 241, 598, 492, 201, 0, 0, 0,
	0, 255, 256, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 638, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 0, 0, 0, 0, 0, 0, 585, 586,
	661, 382, 482, 595, 335, 347, 350, 340, 359, 0,
	360, 336, 337, 342, 344, 345, 346, 351, 352, 356,
	362, 250, 211, 388, 396, 572, 312, 217, 218, 219,
	518, 519, 520, 521, 609, 610, 614, 206, 459, 460,
	461, 462, 293, 604, 309, 465, 464, 331, 332, 377,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 198, 222,
	366, 0, 451, 289, 639, 608, 603, 207, 224, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 210, 223, 233, 237, 244, 262, 277,
	279, 286, 299, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	615, 621, 477, 301, 302, 441, 442, 314, 315, 635,
	636, 300, 592, 622, 590, 634, 616, 435, 376, 0,
	0, 379, 282, 305, 320, 0, 607, 498, 228, 463,
	291, 252, 0, 0, 212, 247, 231, 260, 275, 278,
	324, 389, 397, 426, 431, 297, 272, 245, 456, 242,
	481, 513, 514, 515, 517, 393, 267, 430, 394, 0,
	374, 570, 571, 316, 0, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 364, 268, 0, 0, 427, 0, 205, 0, 483,
	253, 375, 372, 577, 283, 274, 270, 251, 317, 383,
	425, 512, 419, 0, 368, 0, 0, 493, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 249, 325, 204, 410, 494,
	287, 0, 1854, 0, 0, 0, 709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 246,
	0, 0, 0, 349, 358, 357, 338, 339, 341, 343,
	348, 355, 361, 0, 0, 0, 0, 0, 266, 321,
	273, 265, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 399, 258, 0, 450, 0, 0, 0, 618, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 330, 199,
	226, 0, 0, 409, 458, 470, 0, 0, 0, 254,
	0, 468, 423, 596, 234, 285, 455, 429, 466, 437,
	288, 0, 0, 467, 370, 579, 447, 593, 619, 620,
	264, 403, 605, 516, 613, 637, 227, 261, 417, 501,
	599, 490, 395, 575, 576, 329, 489, 296, 203, 367,
	625, 225, 476, 369, 243, 232, 581, 602, 290, 453,
	632, 214, 511, 591, 240, 480, 0, 0, 640, 248,
	500, 216, 588, 499, 391, 326, 327, 215, 0, 454,
	269, 294, 0, 0, 259, 412, 583, 584, 257, 641,
	229, 612, 221, 0, 611, 405, 578, 589, 392, 381,
	220, 587, 390, 380, 334, 353, 354, 281, 307, 444,
	373, 445, 306, 308, 401, 400, 402, 208, 600, 0,
	209, 0, 495, 601, 642, 449, 213, 235, 236, 238,
	0, 280, 284, 292, 295, 303, 304, 313, 365, 416,
	443, 439, 448, 0, 573, 594, 606, 617, 623, 624,
	626, 627, 628, 629, 630, 633, 631, 404, 311, 491,
	333, 371, 0, 0, 422, 469, 241, 598, 492, 201,
	0, 0, 0, 0, 255, 256, 0, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 638, 502, 508, 503, 504,
	505, 506, 507, 0, 509, 0, 0, 0, 0, 0,
	0, 585, 586, 661, 382, 482, 595, 335, 347, 350,
	340, 359, 0, 360, 336, 337, 342, 344, 345, 346,
	351, 352, 356, 362, 250, 211, 388, 396, 572, 312,
	217, 218, 219, 518, 519, 520, 521, 609, 610, 614,
	206, 459, 460, 461, 462, 293, 604, 309, 465, 464,
	331, 332, 377, 446, 534, 536, 547, 551, 553, 555,
	561, 564, 535, 537, 548, 552, 554, 556, 562, 565,
	524, 526, 528, 530, 543, 542, 539, 567, 568, 545,
	550, 529, 541, 546, 559, 566, 563, 523, 527, 531,
	540, 558, 557, 538, 549, 560, 544, 532, 525, 533,
	0, 198, 222, 366, 0, 451, 289, 639, 608, 603,
	207, 224, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 202, 210, 223, 233, 237,
	244, 262, 277, 279, 286, 299, 310, 318, 319, 322,
	328, 378, 384, 385, 386, 387, 406, 407, 408, 411,
	414, 415, 418, 420, 421, 424, 428, 432, 433, 434,
	436, 438, 440, 452, 457, 471, 472, 473, 474, 475,
	478, 479, 484, 485, 486, 487, 488, 496, 497, 510,
	580, 582, 597, 615, 621, 477, 301, 302, 441, 442,
	314, 315, 635, 636, 300, 592, 622, 590, 634, 616,
	435, 376, 0, 0, 379, 282, 305, 320, 0, 607,
	498, 228, 463, 291, 252, 0, 0, 212, 247, 231,
	260, 275, 278, 324, 389, 397, 426, 431, 297, 272,
	245, 456, 242, 481, 513, 514, 515, 517, 393, 267,
	430, 394, 0, 374, 570, 571, 316, 0, 522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 0, 1753, 271,
	0, 0, 0, 0, 364, 268, 0, 0, 427, 0,
	205, 0, 483, 253, 375, 372, 577, 283, 274, 270,
	251, 317, 383, 425, 512, 419, 0, 368, 0, 0,
	493, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 249, 325,
	204, 410, 494, 287, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 246, 0, 0, 0, 349, 358, 357, 338,
	339, 341, 343, 348, 355, 361, 0, 0, 0, 0,
	0, 266, 321, 273, 265, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 399, 258, 0, 450, 0, 0,
	0, 618, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 330, 199, 226, 0, 0, 409, 458, 470, 0,
	0, 0, 254, 0, 468, 423, 596, 234, 285, 455,
	429, 466, 437, 288, 0, 0, 467, 370, 579, 447,
	593, 619, 620, 264, 403, 605, 516, 613, 637, 227,
	261, 417, 501, 599, 490, 395, 575, 576, 329, 489,
	296, 203, 367, 625, 225, 476, 369, 243, 232, 581,
	602, 290, 453, 632, 214, 511, 591, 240, 480, 0,
	0, 640, 248, 500, 216, 588, 499, 391, 326, 327,
	215, 0, 454, 269, 294, 0, 0, 259, 412, 583,
	584, 257, 641, 229, 612, 221, 0, 611, 405, 578,
	589, 392, 381, 220, 587, 390, 380, 334, 353, 354,
	281, 307, 444, 373, 445, 306, 308, 401, 400, 402,
	208, 600, 0, 209, 0, 495, 601, 642, 449, 213,
	235, 236, 238, 0, 280, 284, 292, 295, 303, 304,
	313, 365, 416, 443, 439, 448, 0, 573, 594, 606,
	617, 623, 624, 626, 627, 628, 629, 630, 633, 631,
	404, 311, 491, 333, 371, 0, 0, 422, 469, 241,
	598, 492, 201, 0, 0, 0, 0, 255, 256, 0,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 638, 502,
	508, 503, 504, 505, 506, 507, 0, 509, 0, 0,
	0, 0, 0, 0, 585, 586, 661, 382, 482, 595,
	335, 347, 350, 340, 359, 0, 360, 336, 337, 342,
	344, 345, 346, 351, 352, 356, 362, 250, 211, 388,
	396, 572, 312, 217, 218, 219, 518, 519, 520, 521,
	609, 610, 614, 206, 459, 460, 461, 462, 293, 604,
	309, 465, 464, 331, 332, 377, 446, 534, 536, 547,
	551, 553, 555, 561, 564, 535, 537, 548, 552, 554,
	556, 562, 565, 524, 526, 528, 530, 543, 542, 539,
	567, 568, 545, 550, 529, 541, 546, 559, 566, 563,
	523, 527, 531, 540, 558, 557, 538, 549, 560, 544,
	532, 525, 533, 0, 198, 222, 366, 0, 451, 289,
	639, 608, 603, 207, 224, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 202, 210,
	223, 233, 237, 244, 262, 277, 279, 286, 299, 310,
	318, 319, 322, 328, 378, 384, 385, 386, 387, 406,
	407, 408, 411, 414, 415, 418, 420, 421, 424, 428,
	432, 433, 434, 436, 438, 440, 452, 457, 471, 472,
	473, 474, 475, 478, 479, 484, 485, 486, 487, 488,
	496, 497, 510, 580, 582, 597, 615, 621, 477, 301,
	302, 441, 442, 314, 315, 635, 636, 300, 592, 622,
	590, 634, 616, 435, 376, 0, 0, 379, 282, 305,
	320, 0, 607, 498, 228, 463, 291, 252, 0, 0,
	212, 247, 231, 260, 275, 278, 324, 389, 397, 426,
	431, 297, 272, 245, 456, 242, 481, 513, 514, 515,
	517, 393, 267, 430, 394, 0, 374, 570, 571, 316,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 364, 268, 0,
	0, 427, 0, 205, 0, 483, 253, 375, 372, 577,
	283, 274, 270, 251, 317, 383, 425, 512, 419, 0,
	368, 0, 0, 493, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 249, 325, 204, 410, 494, 287, 0, 95, 0,
	0, 0, 943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 246, 0, 0, 0, 349,
	358, 357, 338, 339, 341, 343, 348, 355, 361, 0,
	0, 0, 0, 0, 266, 321, 273, 265, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 399, 258, 0,
	450, 0, 0, 0, 618, 0, 0, 0, 0, 0,
	0, 0, 363, 0, 330, 199, 226, 0, 0, 409,
	458, 470, 0, 0, 0, 254, 0, 468, 423, 596,
	234, 285, 455, 429, 466, 437, 288, 0, 0, 467,
	370, 579, 447, 593, 619, 620, 264, 403, 605, 516,
	613, 637, 227, 261, 417, 501, 599, 490, 395, 575,
	576, 329, 489, 296, 203, 367, 625, 225, 476, 369,
	243, 232, 581, 602, 290, 453, 632, 214, 511, 591,
	240, 480, 0, 0, 640, 248, 500, 216, 588, 499,
	391, 326, 327, 215, 0, 454, 269, 294, 0, 0,
	259, 412, 583, 584, 257, 641, 229, 612, 221, 0,
	611, 405, 578, 589, 392, 381, 220, 587, 390, 380,
	334, 353, 354, 281, 307, 444, 373, 445, 306, 308,
	401, 400, 402, 208, 600, 0, 209, 0, 495, 601,
	642, 449, 213, 235, 236, 238, 0, 280, 284, 292,
	295, 303, 304, 313, 365, 416, 443, 439, 448, 0,
	573, 594, 606, 617, 623, 624, 626, 627, 628, 629,
	630, 633, 631, 404, 311, 491, 333, 371, 0, 0,
	422, 469, 241, 598, 492, 201, 0, 0, 0, 0,
	255, 256, 0, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 638, 502, 508, 503, 504, 505, 506, 507, 0,
	509, 0, 0, 0, 0, 0, 0, 585, 586, 661,
	382, 482, 595, 335, 347, 350, 340, 359, 0, 360,
	336, 337, 342, 344, 345, 346, 351, 352, 356, 362,
	250, 211, 388, 396, 572, 312, 217, 218, 219, 518,
	519, 520, 521, 609, 610, 614, 206, 459, 460, 461,
	462, 293, 604, 309, 465, 464, 331, 332, 377, 446,
	534, 536, 547, 551, 553, 555, 561, 564, 535, 537,
	548, 552, 554, 556, 562, 565, 524, 526, 528, 530,
	543, 542, 539, 567, 568, 545, 550, 529, 541, 546,
	559, 566, 563, 523, 527, 531, 540, 558, 557, 538,
	549, 560, 544, 532, 525, 533, 0, 198, 222, 366,
	0, 451, 289, 639, 608, 603, 207, 224, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 202, 210, 223, 233, 237, 244, 262, 277, 279,
	286, 299, 310, 318, 319, 322, 328, 378, 384, 385,
	386, 387, 406, 407, 408, 411, 414, 415, 418, 420,
	421, 424, 428, 432, 433, 434, 436, 438, 440, 452,
	457, 471, 472, 473, 474, 475, 478, 479, 484, 485,
	486, 487, 488, 496, 497, 510, 580, 582, 597, 615,
	621, 477, 301, 302, 441, 442, 314, 315, 635, 636,
	300, 592, 622, 590, 634, 616, 435, 376, 0, 0,
	379, 282, 305, 320, 0, 607, 498, 228, 463, 291,
	252, 0, 0, 212, 247, 231, 260, 275, 278, 324,
	389, 397, 426, 431, 297, 272, 245, 456, 242, 481,
	513, 514, 515, 517, 393, 267, 430, 394, 0, 374,
	570, 571, 316, 0, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	364, 268, 0, 0, 427, 0, 205, 0, 483, 253,
	375, 372, 577, 283, 274, 270, 251, 317, 383, 425,
	512, 419, 0, 368, 0, 0, 493, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 249, 325, 204, 410, 494, 287,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 246, 0,
	0, 0, 349, 358, 357, 338, 339, 341, 343, 348,
	355, 361, 0, 0, 0, 0, 0, 266, 321, 273,
	265, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1437, 0, 298, 0,
	399, 258, 0, 450, 0, 0, 0, 618, 0, 0,
	0, 0, 0, 0, 0, 363, 0, 330, 199, 226,
	0, 0, 409, 458, 470, 0, 0, 0, 254, 0,
	468, 423, 596, 234, 285, 455, 429, 466, 437, 288,
	0, 0, 467, 370, 579, 447, 593, 619, 620, 264,
	403, 605, 516, 613, 637, 227, 261, 417, 501, 599,
	490, 395, 575, 576, 329, 489, 296, 203, 367, 625,
	225, 476, 369, 243, 232, 581, 602, 290, 453, 632,
	214, 511, 591, 240, 480, 0, 0, 640, 248, 500,
	216, 588, 499, 391, 326, 327, 215, 0, 454, 269,
	294, 0, 0, 259, 412, 583, 584, 257, 641, 229,
	612, 221, 0, 611, 405, 578, 589, 392, 381, 220,
	587, 390, 380, 334, 353, 354, 281, 307, 444, 373,
	445, 306, 308, 401, 400, 402, 208, 600, 0, 209,
	0, 495, 601, 642, 449, 213, 235, 236, 238, 0,
	280, 284, 292, 295, 303, 304, 313, 365, 416, 443,
	439, 448, 0, 573, 594, 606, 617, 623, 624, 626,
	627, 628, 629, 630, 633, 631, 404, 311, 491, 333,
	371, 0, 0, 422, 469, 241, 598, 492, 201, 0,
	0, 0, 0, 255, 256, 0, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 638, 502, 508, 503, 504, 505,
	506, 507, 0, 509, 0, 0, 0, 0, 0, 0,
	585, 586, 661, 382, 482, 595, 335, 347, 350, 340,
	359, 0, 360, 336, 337, 342, 344, 345, 346, 351,
	352, 356, 362, 250, 211, 388, 396, 572, 312, 217,
	218, 219, 518, 519, 520, 521, 609, 610, 614, 206,
	459, 460, 461, 462, 293, 604, 309, 465, 464, 331,
	332, 377, 446, 534, 536, 547, 551, 553, 555, 561,
	564, 535, 537, 548, 552, 554, 556, 562, 565, 524,
	526, 528, 530, 543, 542, 539, 567, 568, 545, 550,
	529, 541, 546, 559, 566, 563, 523, 527, 531, 540,
	558, 557, 538, 549, 560, 544, 532, 525, 533, 0,
	198, 222, 366, 0, 451, 289, 639, 608, 603, 207,
	224, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 202, 210, 223, 233, 237, 244,
	262, 277, 279, 286, 299, 310, 318, 319, 322, 328,
	378, 384, 385, 386, 387, 406, 407, 408, 411, 414,
	415, 418, 420, 421, 424, 428, 432, 433, 434, 436,
	438, 440, 452, 457, 471, 472, 473, 474, 475, 478,
	479, 484, 485, 486, 487, 488, 496, 497, 510, 580,
	582, 597, 615, 621, 477, 301, 302, 441, 442, 314,
	315, 635, 636, 1436, 592, 622, 590, 634, 616, 435,
	376, 0, 0, 379, 282, 305, 320, 0, 607, 498,
	228, 463, 291, 252, 0, 0, 212, 247, 231, 260,
	275, 278, 324, 389, 397, 426, 431, 297, 272, 245,
	456, 242, 481, 513, 514, 515, 517, 393, 267, 430,
	394, 0, 374, 570, 571, 316, 0, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 364, 268, 0, 0, 427, 0, 205,
	0, 483, 253, 375, 372, 577, 283, 274, 270, 251,
	317, 383, 425, 512, 419, 0, 368, 0, 0, 493,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 249, 325, 204,
	410, 494, 287, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 246, 0, 0, 0, 349, 358, 357, 338, 339,
	341, 343, 348, 355, 361, 0, 0, 0, 0, 0,
	266, 321, 273, 265, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 298, 0, 399, 258, 0, 450, 0, 0, 0,
	618, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	330, 199, 226, 0, 0, 409, 458, 470, 0, 0,
	0, 254, 0, 468, 423, 596, 234, 285, 455, 429,
	466, 437, 288, 0, 0, 467, 370, 579, 447, 593,
	619, 620, 264, 403, 605, 516, 613, 637, 227, 261,
	417, 501, 599, 490, 395, 575, 576, 329, 489, 296,
	203, 367, 625, 225, 476, 369, 243, 232, 581, 602,
	290, 453, 632, 214, 511, 591, 240, 480, 0, 0,
	640, 248, 500, 216, 588, 499, 391, 326, 327, 215,
	0, 454, 269, 294, 0, 0, 259, 412, 583, 584,
	257, 641, 229, 612, 221, 0, 611, 405, 578, 589,
	392, 381, 220, 587, 390, 380, 334, 353, 354, 281,
	307, 444, 373, 445, 306, 308, 401, 400, 402, 208,
	600, 0, 209, 0, 495, 601, 642, 449, 213, 235,
	236, 238, 0, 280, 284, 292, 295, 303, 304, 313,
	365, 416, 443, 439, 448, 0, 573, 594, 606, 617,
	623, 624, 626, 627, 628, 629, 630, 633, 631, 404,
	311, 491, 333, 371, 0, 0, 422, 469, 241, 598,
	492, 201, 0, 0, 0, 0, 255, 256, 0, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 638, 502, 508,
	503, 504, 505, 506, 507, 0, 509, 0, 0, 0,
	0, 0, 0, 585, 586, 661, 382, 482, 595, 335,
	347, 350, 340, 359, 0, 360, 336, 337, 342, 344,
	345, 346, 351, 352, 356, 362, 250, 211, 388, 396,
	572, 312, 217, 218, 219, 518, 519, 520, 521, 609,
	610, 614, 206, 459, 460, 461, 462, 293, 604, 309,
	465, 464, 331, 332, 377, 446, 534, 536, 547, 551,
	553, 555, 561, 564, 535, 537, 548, 552, 554, 556,
	562, 565, 524, 526, 528, 530, 543, 542, 539, 567,
	568, 545, 550, 529, 541, 546, 559, 566, 563, 523,
	527, 531, 540, 558, 557, 538, 549, 560, 544, 532,
	525, 533, 0, 198, 222, 366, 0, 451, 289, 639,
	608, 603, 207, 224, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1033, 0, 0, 0, 200, 202, 210, 223,
	233, 237, 244, 262, 277, 279, 286, 299, 310, 318,
	319, 322, 328, 378, 384, 385, 386, 387, 406, 407,
	408, 411, 414, 415, 418, 420, 421, 424, 428, 432,
	433, 434, 436, 438, 440, 452, 457, 471, 472, 473,
	474, 475, 478, 479, 484, 485, 486, 487, 488, 496,
	497, 510, 580, 582, 597, 615, 621, 477, 301, 302,
	441, 442, 314, 315, 635, 636, 300, 592, 622, 590,
	634, 616, 435, 376, 0, 0, 379, 282, 305, 320,
	0, 607, 498, 228, 463, 291, 252, 0, 0, 212,
	247, 231, 260, 275, 278, 324, 389, 397, 426, 431,
	297, 272, 245, 456, 242, 481, 513, 514, 515, 517,
	393, 267, 430, 394, 0, 374, 570, 571, 316, 0,
	522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 364, 268, 0, 0,
	427, 0, 205, 0, 483, 253, 375, 372, 577, 283,
	274, 270, 251, 317, 383, 425, 512, 419, 0, 368,
	0, 0, 493, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	249, 325, 204, 410, 494, 287, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 246, 0, 0, 0, 349, 358,
	357, 338, 339, 341, 343, 348, 355, 361, 0, 0,
	0, 0, 0, 266, 321, 273, 265, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 399, 258, 0, 450,
	0, 664, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 363, 0, 330, 199, 226, 0, 0, 409, 458,
	470, 0, 0, 0, 254, 0, 468, 423, 596, 234,
	285, 455, 429, 466, 437, 288, 0, 0, 467, 370,
	579, 447, 593, 619, 620, 264, 403, 605, 516, 613,
	637, 227, 261, 417, 501, 599, 490, 395, 575, 576,
	329, 489, 296, 203, 367, 625, 225, 476, 369, 243,
	232, 581, 602, 290, 453, 632, 214, 511, 591, 240,
	480, 0, 0, 640, 248, 500, 216, 588, 499, 391,
	326, 327, 215, 0, 454, 269, 294, 0, 0, 259,
	412, 583, 584, 257, 641, 229, 612, 221, 0, 611,
	405, 578, 589, 392, 381, 220, 587, 390, 380, 334,
	353, 354, 281, 307, 444, 373, 445, 306, 308, 401,
	400, 402, 208, 600, 0, 209, 0, 495, 601, 642,
	449, 213, 235, 236, 238, 0, 280, 284, 292, 295,
	303, 304, 313, 365, 416, 443, 439, 448, 0, 573,
	594, 606, 617, 623, 624, 626, 627, 628, 629, 630,
	633, 631, 404, 311, 491, 333, 371, 0, 0, 422,
	469, 241, 598, 492, 201, 0, 0, 0, 0, 255,
	256, 0, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	638, 502, 508, 503, 504, 505, 506, 507, 0, 509,
	0, 0, 0, 0, 0, 0, 585, 586, 661, 382,
	482, 595, 335, 347, 350, 340, 359, 0, 360, 336,
	337, 342, 344, 345, 346, 351, 352, 356, 362, 250,
	211, 388, 396, 572, 312, 217, 218, 219, 518, 519,
	520, 521, 609, 610, 614, 206, 459, 460, 461, 462,
	293, 604, 309, 465, 464, 331, 332, 377, 446, 534,
	536, 547, 551, 553, 555, 561, 564, 535, 537, 548,
	552, 554, 556, 562, 565, 524, 526, 528, 530, 543,
	542, 539, 567, 568, 545, 550, 529, 541, 546, 559,
	566, 563, 523, 527, 531, 540, 558, 557, 538, 549,
	560, 544, 532, 525, 533, 0, 198, 222, 366, 0,
	451, 289, 639, 608, 603, 207, 224, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	202, 210, 223, 233, 237, 244, 262, 277, 279, 286,
	299, 310, 318, 319, 322, 328, 378, 384, 385, 386,
	387, 406, 407, 408, 411, 414, 415, 418, 420, 421,
	424, 428, 432, 433, 434, 436, 438, 440, 452, 457,
	471, 472, 473, 474, 475, 478, 479, 484, 485, 486,
	487, 488, 496, 497, 510, 580, 582, 597, 615, 621,
	477, 301, 302, 441, 442, 314, 315, 635, 636, 300,
	592, 622, 590, 634, 616, 435, 376, 0, 0, 379,
	282, 305, 320, 0, 607, 498, 228, 463, 291, 252,
	0, 0, 212, 247, 231, 260, 275, 278, 324, 389,
	397, 426, 431, 297, 272, 245, 456, 242, 481, 513,
	514, 515, 517, 393, 267, 430, 394, 0, 374, 570,
	571, 316, 0, 522, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 364,
	268, 0, 0, 427, 0, 205, 0, 483, 253, 375,
	372, 577, 283, 274, 270, 251, 317, 383, 425, 512,
	419, 0, 368, 0, 0, 493, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 249, 325, 204, 410, 494, 287, 0,
	0, 0, 0, 0, 709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 246, 0, 0,
	0, 349, 358, 357, 338, 339, 341, 343, 348, 355,
	361, 0, 0, 0, 0, 0, 266, 321, 273, 265,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 399,
	258, 0, 450, 0, 0, 0, 618, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 330, 199, 226, 0,
	0, 409, 458, 470, 0, 0, 0, 254, 0, 468,
	423, 596, 234, 285, 455, 429, 466, 437, 288, 0,
	0, 467, 370, 579, 447, 593, 619, 620, 264, 403,
	605, 516, 613, 637, 227, 261, 417, 501, 599, 490,
	395, 575, 576, 329, 489, 296, 203, 367, 625, 225,
	476, 369, 243, 232, 581, 602, 290, 453, 632, 214,
	511, 591, 240, 480, 0, 0, 640, 248, 500, 216,
	588, 499, 391, 326, 327, 215, 0, 454, 269, 294,
	0, 0, 259, 412, 583, 584, 257, 641, 229, 612,
	221, 0, 611, 405, 578, 589, 392, 381, 220, 587,
	390, 380, 334, 353, 354, 281, 307, 444, 373, 445,
	306, 308, 401, 400, 402, 208, 600, 0, 209, 0,
	495, 601, 642, 449, 213, 235, 236, 238, 0, 280,
	284, 292, 295, 303, 304, 313, 365, 416, 443, 439,
	448, 0, 573, 594, 606, 617, 623, 624, 626, 627,
	628, 629, 630, 633, 631, 404, 311, 491, 333, 371,
	0, 0, 422, 469, 241, 598, 492, 201, 0, 0,
	0, 0, 255, 256, 0, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 638, 502, 508, 503, 504, 505, 506,
	507, 0, 509, 0, 0, 0, 0, 0, 0, 585,
	586, 661, 382, 482, 595, 335, 347, 350, 340, 359,
	0, 360, 336, 337, 342, 344, 345, 346, 351, 352,
	356, 362, 250, 211, 388, 396, 572, 312, 217, 218,
	219, 518, 519, 520, 521, 609, 610, 614, 206, 459,
	460, 461, 462, 293, 604, 309, 465, 464, 331, 332,
	377, 446, 534, 536, 547, 551, 553, 555, 561, 564,
	535, 537, 548, 552, 554, 556, 562, 565, 524, 526,
	528, 530, 543, 542, 539, 567, 568, 545, 550, 529,
	541, 546, 559, 566, 563, 523, 527, 531, 540, 558,
	557, 538, 549, 560, 544, 532, 525, 533, 0, 198,
	222, 366, 0, 451, 289, 639, 608, 603, 207, 224,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 202, 210, 223, 233, 237, 244, 262,
	277, 279, 286, 299, 310, 318, 319, 322, 328, 378,
	384, 385, 386, 387, 4041, 407, 408, 411, 414, 415,
	418, 420, 421, 424, 428, 432, 433, 434, 436, 438,
	440, 452, 457, 471, 472, 473, 474, 475, 478, 479,
	484, 485, 486, 487, 488, 496, 497, 510, 580, 582,
	597, 615, 621, 477, 301, 302, 441, 442, 314, 315,
	635, 636, 300, 592, 622, 590, 634, 616, 435, 376,
	0, 0, 379, 282, 305, 320, 0, 607, 498, 228,
	463, 291, 252, 0, 0, 212, 247, 231, 260, 275,
	278, 324, 389, 397, 426, 431, 297, 272, 245, 456,
	242, 481, 513, 514, 515, 517, 393, 267, 430, 394,
	0, 374, 570, 571, 316, 0, 522, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 364, 268, 0, 0, 427, 0, 205, 0,
	483, 253, 375, 372, 577, 283, 274, 270, 251, 317,
	383, 425, 512, 419, 0, 368, 0, 0, 493, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 323, 249, 325, 204, 410,
	494, 287, 0, 0, 0, 0, 0, 709, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	246, 0, 0, 0, 349, 358, 357, 338, 339, 341,
	343, 348, 355, 361, 0, 0, 0, 0, 0, 266,
	321, 273, 265, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 399, 258, 0, 450, 0, 0, 0, 618,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 330,
	199, 226, 0, 0, 409, 458, 470, 0, 0, 0,
	254, 0, 468, 423, 596, 234, 285, 455, 429, 466,
	437, 288, 0, 0, 467, 370, 579, 447, 593, 619,
	620, 264, 403, 605, 516, 613, 637, 227, 261, 417,
	501, 599, 490, 395, 575, 576, 329, 489, 296, 203,
	367, 625, 225, 476, 369, 243, 232, 581, 602, 290,
	453, 632, 214, 511, 591, 240, 480, 0, 0, 640,
	248, 500, 216, 588, 499, 391, 326, 327, 215, 0,
	454, 269, 294, 0, 0, 259, 412, 583, 584, 257,
	641, 229, 612, 221, 0, 611, 405, 578, 589, 392,
	381, 220, 587, 390, 380, 334, 353, 354, 281, 307,
	444, 373, 445, 306, 308, 401, 400, 402, 208, 600,
	0, 209, 0, 495, 601, 642, 449, 213, 235, 236,
	238, 0, 280, 284, 292, 295, 303, 304, 313, 365,
	416, 443, 439, 448, 0, 573, 594, 606, 617, 623,
	624, 626, 627, 628, 629, 630, 633, 631, 404, 311,
	491, 333, 371, 0, 0, 422, 469, 241, 598, 492,
	201, 0, 0, 0, 0, 255, 256, 0, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 638, 502, 508, 503,
	504, 505, 506, 507, 0, 509, 0, 0, 0, 0,
	0, 0, 585, 586, 661, 382, 482, 595, 335, 347,
	350, 340, 359, 0, 360, 336, 337, 342, 344, 345,
	346, 351, 352, 356, 362, 250, 211, 388, 396, 572,
	312, 217, 218, 219, 518, 519, 520, 521, 609, 610,
	614, 206, 459, 460, 461, 462, 293, 604, 309, 465,
	464, 331, 332, 377, 446, 534, 536, 547, 551, 553,
	555, 561, 564, 535, 537, 548, 552, 554, 556, 562,
	565, 524, 526, 528, 530, 543, 542, 539, 567, 568,
	545, 550, 529, 541, 546, 559, 566, 563, 523, 527,
	531, 540, 558, 557, 538, 549, 560, 544, 532, 525,
	533, 0, 198, 222, 366, 0, 451, 289, 639, 608,
	603, 207, 224, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 202, 210, 223, 233,
	237, 244, 262, 277, 279, 286, 299, 310, 318, 319,
	322, 328, 378, 384, 385, 386, 387, 406, 407, 408,
	411, 414, 415, 418, 420, 421, 424, 428, 432, 433,
	434, 436, 438, 440, 452, 457, 471, 472, 473, 474,
	475, 478, 479, 484, 485, 486, 487, 488, 496, 497,
	510, 580, 582, 597, 615, 621, 477, 301, 302, 441,
	442, 314, 315, 635, 636, 300, 592, 622, 590, 634,
	616, 435, 376, 0, 0, 379, 282, 305, 320, 0,
	607, 498, 228, 463, 291, 252, 0, 0, 212, 247,
	231, 260, 275, 278, 324, 389, 397, 426, 431, 297,
	272, 245, 456, 242, 481, 513, 514, 515, 517, 393,
	267, 430, 394, 0, 374, 570, 571, 316, 0, 522,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 364, 268, 0, 0, 427,
	0, 205, 0, 483, 253, 375, 372, 577, 283, 274,
	270, 251, 317, 383, 425, 512, 419, 0, 368, 0,
	0, 493, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 323, 249,
	325, 204, 410, 494, 287, 0, 0, 0, 0, 0,
	943, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 246, 0, 0, 0, 349, 358, 357,
	338, 339, 341, 343, 348, 355, 361, 0, 0, 0,
	0, 0, 266, 321, 273, 265, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 399, 258, 0, 450, 0,
	0, 0, 618, 0, 0, 0, 0, 0, 0, 0,
	363, 0, 330, 199, 226, 0, 0, 409, 458, 470,
	0, 0, 0, 254, 0, 468, 423, 596, 234, 285,
	455, 429, 466, 437, 288, 0, 0, 467, 370, 579,
	447, 593, 619, 620, 264, 403, 605, 516, 613, 637,
	227, 261, 417, 501, 599, 490, 395, 575, 576, 329,
	489, 296, 203, 367, 625, 225, 476, 369, 243, 232,
	581, 602, 290, 453, 632, 214, 511, 591, 240, 480,
	0, 0, 640, 248, 500, 216, 588, 499, 391, 326,
	327, 215, 0, 454, 269, 294, 0, 0, 259, 412,
	583, 584, 257, 641, 229, 612, 221, 0, 611, 405,
	578, 589, 392, 381, 220, 587, 390, 380, 334, 353,
	354, 281, 307, 444, 373, 445, 306, 308, 401, 400,
	402, 208, 600, 0, 209, 0, 495, 601, 642, 449,
	213, 235, 236, 238, 0, 280, 284, 292, 295, 303,
	304, 313, 365, 416, 443, 439, 448, 0, 573, 594,
	606, 617, 623, 624, 626, 627, 628, 629, 630, 633,
	631, 404, 311, 491, 333, 371, 0, 0, 422, 469,
	241, 598, 492, 201, 0, 0, 0, 0, 255, 256,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 638,
	502, 508, 503, 504, 505, 506, 507, 0, 509, 0,
	0, 0, 0, 0, 0, 585, 586, 661, 382, 482,
	595, 335, 347, 350, 340, 359, 0, 360, 336, 337,
	342, 344, 345, 346, 351, 352, 356, 362, 250, 211,
	388, 396, 572, 312, 217, 218, 219, 518, 519, 520,
	521, 609, 610, 614, 206, 459, 460, 461, 462, 293,
	604, 309, 465, 464, 331, 332, 377, 446, 534, 536,
	547, 551, 553, 555, 561, 564, 535, 537, 548, 552,
	554, 556, 562, 565, 524, 526, 528, 530, 543, 542,
	539, 567, 568, 545, 550, 529, 541, 546, 559, 566,
	563, 523, 527, 531, 540, 558, 557, 538, 549, 560,
	544, 532, 525, 533, 0, 198, 222, 366, 0, 451,
	289, 639, 608, 603, 207, 224, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 202,
	210, 223, 233, 237, 244, 262, 277, 279, 286, 299,
	310, 318, 319, 322, 328, 378, 384, 385, 386, 387,
	406, 407, 408, 411, 414, 415, 418, 420, 421, 424,
	428, 432, 433, 434, 436, 438, 440, 452, 457, 471,
	472, 473, 474, 475, 478, 479, 484, 485, 486, 487,
	488, 496, 497, 510, 580, 582, 597, 615, 621, 477,
	301, 302, 441, 442, 314, 315, 635, 636, 300, 592,
	622, 590, 634, 616, 435, 376, 0, 0, 379, 282,
	305, 320, 0, 607, 498, 228, 463, 291, 252, 0,
	0, 212, 247, 231, 260, 275, 278, 324, 389, 397,
	426, 431, 297, 272, 245, 456, 242, 481, 513, 514,
	515, 517, 393, 267, 430, 394, 0, 374, 570, 571,
	316, 0, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 364, 268,
	0, 0, 427, 0, 205, 0, 483, 253, 375, 372,
	577, 283, 274, 270, 251, 317, 383, 425, 512, 419,
	0, 368, 0, 0, 493, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 249, 325, 204, 410, 494, 287, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 246, 0, 0, 0,
	349, 358, 357, 338, 339, 341, 343, 348, 355, 361,
	0, 0, 0, 0, 0, 266, 321, 273, 265, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 0, 399, 258,
	0, 450, 0, 0, 0, 618, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 330, 199, 226, 0, 0,
	409, 458, 470, 0, 0, 0, 254, 0, 468, 423,
	596, 234, 285, 455, 429, 466, 437, 288, 0, 0,
	467, 370, 579, 447, 593, 619, 620, 264, 403, 605,
	516, 613, 637, 227, 261, 417, 501, 599, 490, 395,
	575, 576, 329, 489, 296, 203, 367, 625, 225, 476,
	369, 243, 232, 581, 602, 290, 453, 632, 214, 511,
	591, 240, 480, 0, 0, 640, 248, 500, 216, 588,
	499, 391, 326, 327, 215, 0, 454, 269, 294, 0,
	0, 259, 412, 583, 584, 257, 641, 229, 612, 221,
	0, 611, 405, 578, 589, 392, 381, 220, 587, 390,
	380, 334, 353, 354, 281, 307, 444, 373, 445, 306,
	308, 401, 400, 402, 208, 600, 0, 209, 0, 495,
	601, 642, 449, 213, 235, 236, 238, 0, 280, 284,
	292, 295, 303, 304, 313, 365, 416, 443, 439, 448,
	0, 573, 594, 606, 617, 623, 624, 626, 627, 628,
	629, 630, 633, 631, 404, 311, 491, 333, 371, 0,
	0, 422, 469, 241, 598, 492, 201, 0, 0, 0,
	0, 255, 256, 0, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 638, 502, 508, 503, 504, 505, 506, 507,
	0, 509, 0, 0, 0, 0, 0, 0, 585, 586,
	661, 382, 482, 595, 335, 347, 350, 340, 359, 0,
	360, 336, 337, 342, 344, 345, 346, 351, 352, 356,
	362, 250, 211, 388, 396, 572, 312, 217, 218, 219,
	518, 519, 520, 521, 609, 610, 614, 206, 459, 460,
	461, 462, 293, 604, 309, 465, 464, 331, 332, 377,
	446, 534, 536, 547, 551, 553, 555, 561, 564, 535,
	537, 548, 552, 554, 556, 562, 565, 524, 526, 528,
	530, 543, 542, 539, 567, 568, 545, 550, 529, 541,
	546, 559, 566, 563, 523, 527, 531, 540, 558, 557,
	538, 549, 560, 544, 532, 525, 533, 0, 198, 222,
	366, 0, 451, 289, 639, 608, 603, 207, 224, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 202, 210, 223, 233, 237, 244, 262, 277,
	279, 286, 299, 310, 318, 319, 322, 328, 378, 384,
	385, 386, 387, 406, 407, 408, 411, 414, 415, 418,
	420, 421, 424, 428, 432, 433, 434, 436, 438, 440,
	452, 457, 471, 472, 473, 474, 475, 478, 479, 484,
	485, 486, 487, 488, 496, 497, 510, 580, 582, 597,
	615, 621, 477, 301, 302, 441, 442, 314, 315, 635,
	636, 300, 592, 622, 590, 634, 616, 435, 376, 0,
	0, 379, 282, 305, 320, 0, 607, 498, 228, 463,
	291, 252, 0, 0, 212, 247, 231, 260, 275, 278,
	324, 389, 397, 426, 431, 297, 272, 245, 456, 242,
	481, 513, 514, 515, 517, 393, 267, 430, 0, 0,
	374, 570, 571, 316,
}

var yyPact = [...]int{
	-1000, -1000, 1953, -1000, -528, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2281, 2505, -1000, -1000, -1000, -1000, 2503, -1000, 1000,
	2031, -1000, 2287, 4103, -1000, 55711, 714, -1000, 52819, 525,
	875, 234, 36913, -1000, 196, -1000, 182, 54265, 188, -1000,
	-1000, -1000, -1000, -432, 22453, 2212, 53, 51, 55711, -1000,
	-1000, -1000, -1000, -352, 2399, 1984, -1000, 411, -1000, -1000,
	-1000, -1000, -1000, -1000, 52096, -1000, 1115, -1000, -1000, 2299,
	2286, 2506, 922, 2255, -1000, 2339, 1984, 1984, -1000, 22453,
	2420, 2341, 2328, 21730, 21730, 441, -1000, -1000, 263, -1000,
	-1000, 31852, 55711, 39805, 865, -1000, 2287, -1000, -1000, -1000,
	217, -1000, 324, 1901, -1000, 1896, -1000, 440, 1029, 337,
	463, 462, 336, 332, 331, 329, 328, 327, 326, 322,
	363, -1000, 956, 956, -215, -216, 965, 784, 398, 398,
	1007, 486, 2245, 2244, -1000, -1000, 956, 956, 956, 359,
	956, 956, 956, 956, 283, 282, 956, 956, 956, 956,
	956, 956, 956, 956, 956, 956, 956, 956, 956, 956,
	956, 956, 956, 903, 2287, 268, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 55711, 248, 55711, -1000, 822, 55711, -436, 1093,
	1093, 62, 1093, 1093, 1093, 1093, 195, 943, 48, -1000,
	192, 264, 155, 266, 1050, 184, -1000, -1000, 253, 1050,
	1758, -1000, 940, 257, 164, -1000, 1093, 1093, -1000, 15199,
	235, 15199, 15199, -1000, 2272, -1000, -1000, -1000, -1000, -1000,
	1332, -1000, -1000, -1000, -1000, -28, 472, -1000, -1000, -1000,
	-1000, 54265, 51373, 272, -1000, -1000, 770, -1000, -1000, 1810,
	1185, 22453, 1326, 919, -1000, -1000, 1202, 877, -1000, -1000,
	-1000, -1000, -1000, 797, -1000, 24622, 24622, 24622, 24622, -1000,
	-1000, 1911, 50650, 1911, 1911, 24622, 1911, 24622, 1911, 1911,
	1911, 22453, 1911, 1911, 1911, 1911, -1000, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, -1000, -1000, -1000, -1000, 1911, 821,
	1911, 1911, 1911, 1911, 1911, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1911, 1911, 1911, 1911, 1911, 1911, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 27514, 1520, 1519, 1506, -1000, 19561, 1911, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 55711,
	-1000, 1911, 213, 54265, 54265, 342, 1298, -1000, -1000, 2339,
	1984, 1984, -1000, 2399, 2422, 411, -1000, 3511, 1795, 1556,
	1402, 1984, 1856, 55711, -1000, 1922, -1000, -1000, -1000, -1000,
	2151, 1353, 1747, -1000, -1000, -1000, -1000, -1000, -1000, 1196,
	22453, -1000, -1000, -1000, 2477, -1000, 28960, 820, 2473, 49927,
	-1000, 441, 441, 1890, 416, 19, -1000, -1000, -1000, -1000,
	984, 36190, -1000, -1000, -1000, -1000, -1000, 1757, 55711, -1000,
	-1000, 4872, 1322, -1000, 2030, -1000, 1755, -1000, 1949, 22453,
	2043, 514, 1322, 496, 493, 487, -1000, -60, -1000, -1000,
	-1000, -1000, -1000, -1000, 956, 956, 956, -1000, 351, 2419,
	4103, 5600, -1000, -1000, -1000, 49204, 2025, 1322, -1000, 2009,
	-1000, 1053, 815, 871, 871, 1322, -1000, -1000, 54988, 1322,
	1051, 1045, 1322, 1322, 54265, 54265, -1000, 48481, -1000, 47758,
	47035, 1296, 54265, 46312, 45589, 44866, 44143, 43420, -1000, 2095,
	-1000, 2006, -1000, -1000, -1000, 54988, 1322, 1322, 54988, 54265,
	54988, 55711, 1322, -1000, -1000, 345, -1000, -1000, 1295, 1294,
	1290, 956, 956, 1265, 1742, 1739, 1736, 956, 956, 1259,
	1733, 38359, 1725, 262, 1257, 1253, 1251, 1256, 1717, 194,
	1709, 1227, 1224, 1249, 54265, 2008, 55711, -1000, 238, 926,
	435, 982, 2287, 2211, 1887, 460, 509, 1322, 419, 419,
	54265, -1000, 15928, -1000, 219, -1000, 1707, 22453, -1000, 1068,
	1050, 1050, -1000, -1000, -1000, -1000, -1000, -1000, 1093, 55711,
	1068, -1000, -1000, -1000, 1050, 1093, 55711, 1093, 1093, 1093,
	1093, 1050, 1050, 1050, 1093, 55711, 55711, 55711, 55711, 55711,
	55711, 55711, 55711, 55711, 15199, 940, 1093, -437, -1000, 1705,
	-1000, -1000, 2120, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 15199, 15199, -1000, -1000, -1000, -1000, -1000, 1878, -1000,
	180, 12, 185, -1000, 42697, 475, 970, -1000, 475, -1000,
	-1000, -1000, 1861, 41974, -1000, -438, -439, -441, -445, -1000,
	-1000, -1000, -447, -451, -1000, -1000, -1000, 22453, 22453, 22453,
	22453, -251, -1000, 1214, 24622, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 22453, 242, 1134, 24622, 24622, 24622, 24622, 24622,
	24622, 24622, 24622, 26068, 25345, 24622, 24622, 24622, 24622, 24622,
	24622, -1000, -1000, 34021, 6803, 6803, 877, 877, 877, 877,
	-1000, -175, 1859, 54988, -1000, -1000, -1000, 819, 22453, 22453,
	877, -1000, 1322, 2217, 19561, 21730, 21730, 22453, 985, 1185,
	54988, 22453, -1000, 1402, -1000, -1000, -1000, -1000, 1204, -1000,
	-1000, 1046, 2246, 2246, 2246, 2246, 22453, 22453, 22453, 22453,
	22453, 22453, 22453, 22453, 22453, 22453, 2246, 22453, 258, 258,
	1084, 22453, 22453, 22453, 22453, 22453, 22453, 18115, 22453, 22453,
	24622, 22453, 22453, 22453, 1402, 22453, 22453, 22453, 22453, 22453,
	22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453,
	22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453,
	22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453,
	22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453,
	22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453,
	22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453,
	22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453,
	22453, 22453, 22453, 22453, 1402, 22453, 1492, 22453, 22453, 22453,
	22453, 22453, 22453, 21730, 17386, 21730, 21730, 21730, 21730, 21730,
	-1000, -1000, -1000, -1000, -1000, -1000, 22453, 22453, 22453, 22453,
	22453, 22453, 22453, 22453, 1402, 22453, 22453, 22453, 22453, 22453,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1423, 1526, 1401, 22453, -1000, 1857, -1000, -171, 31129, 22453,
	1690, 2472, 2055, 54265, -1000, -1000, -1000, -1000, -1000, -1000,
	2339, -1000, 2339, 1423, 2761, 2158, 21730, -1000, -1000, 2761,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1753, -1000,
	55711, 1856, 2326, 54265, 2145, 1678, 364, -1000, 22453, 22453,
	1851, -1000, 1217, 55711, -1000, -251, -1000, 41251, -1000, -1000,
	14470, 55711, 310, 55711, -1000, 30406, 40528, 267, -1000, 19,
	1832, -1000, 25, 3, 18838, 872, -1000, -1000, -1000, 965,
	26791, 1812, 872, 101, -1000, -1000, -1000, 1949, -1000, 1949,
	1949, 1949, 1949, 364, 364, 364, 364, -1000, -1000, -1000,
	-1000, -1000, 2007, 1997, -1000, 1949, 1949, 1949, 1949, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1993, 1993, 1993, 1989,
	1989, 1950, 1950, 384, -1000, 22453, 434, 39805, 2298, 1248,
	1732, 238, 438, 2054, 1322, 1322, 1322, 438, -1000, 1329,
	1327, 1325, -1000, -514, 1848, -1000, -1000, 2418, -1000, -1000,
	930, 1076, 1066, 1074, 54265, 221, 293, -1000, 454, -1000,
	39805, 1322, 1043, 871, 1322, -1000, 1322, -1000, -1000, -1000,
	-1000, -1000, 1322, -1000, -1000, 1847, -1000, 1873, 1174, 1065,
	1162, 1057, 1847, -1000, -1000, -181, 1847, -1000, 1847, -1000,
	1847, -1000, 1847, -1000, 1847, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 968, 280, -327, 54265, 221, 451,
	-1000, 450, 34021, -1000, -1000, -1000, 34021, 34021, -1000, -1000,
	-1000, -1000, 1667, 1661, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -500, 55711, -1000, 232, 969, 297, 335,
	290, 55711, 361, 2371, 2358, 2351, 2350, 2337, 237, 274,
	55711, 55711, 419, 2082, 55711, 2304, 55711, -1000, -1000, -1000,
	-1000, 1646, 1639, -1000, 1185, 55711, -1000, -1000, 1093, 1093,
	-1000, -1000, 55711, 1093, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1093, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 55711, -1000,
	-1000, -1000, -1000, -28, 178, -1000, -1000, 54265, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -89, -1000, 779,
	23, 368, -1000, -1000, -1000, -1000, -1000, 2377, -1000, 1185,
	1019, 1014, -1000, 1911, -1000, -1000, 1261, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 242, 24622, 24622, 24622, 24622,
	1888, 772, 765, 1932, 1234, 1331, 1281, 1281, 923, 24622,
	923, 24622, 881, 881, 881, 881, 881, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1631, -1000, 1911, 54988, 1724,
	17386, 1597, 1610, 1402, 894, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 4235, 1722, -1000, 1722, 1627,
	1001, -1000, 22453, 1402, 4184, -1000, -1000, 1402, 1402, 22453,
	-1000, -1000, 22453, 22453, 22453, 22453, 1732, 1732, 1732, 1732,
	1732, 1732, 1732, 1732, 1732, 1732, 22453, 1732, 1846, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1844, 2460, 1582,
	1732, 1732, 1732, 1732, 1732, 22453, 1431, -1000, -1000, -1000,
	1503, 4177, 1875, 4126, 1732, 1732, -1000, 1732, 4110, 3888,
	1402, 1810, 3028, 3007, 1732, 1732, 1732, 1732, 1732, 2972,
	2967, 1732, 1732, 2908, 1732, 3884, 1732, 2885, 2829, 2821,
	2816, 2794, 2760, 2722, 2699, 2691, 2641, 2635, 2630, 2624,
	2602, 2598, 2592, 2565, 2542, 1732, 1732, 1732, 3865, 1732,
	3856, 1732, 3852, 1732, 1732, 3826, 2499, 2492, 1402, 1842,
	-1000, 3822, 1732, 3812, 3521, 3507, 2474, 3499, 3490, 3486,
	1732, 1732, 1732, 2464, 3472, 3465, 3449, 3423, 3415, 3389,
	3379, 3373, 3357, 1732, 1401, 1401, 1401, 1401, 1401, 3345,
	-257, 1732, 1402, -1000, -1000, -1000, -1000, -1000, 3341, 2394,
	3329, 3317, 3307, 3300, 1402, 1840, 1911, 817, -1000, -1000,
	1722, 1402, 1402, 1722, 1722, 3285, 3281, 3273, 3267, 3261,
	3187, 1732, 1732, -1000, 1732, 3033, 3023, 2361, 2356, 1402,
	-1000, 1401, 55711, -1000, -429, -1000, 17, 931, 1911, -1000,
	38359, 1402, -1000, 4094, -1000, 1178, -1000, -1000, -1000, -1000,
	-1000, 35467, 1734, 2761, -1000, -1000, 1911, 1698, -1000, -1000,
	364, 71, 34744, 873, 873, 129, 1185, 1185, 22453, -1000,
	-1000, -1000, -1000, -1000, -1000, 811, 2447, 395, 1911, -1000,
	1838, 2162, -1000, -1000, -1000, 2323, 28237, -1000, -1000, 1911,
	1911, 55711, 1716, 1703, -1000, 810, -1000, 1341, 1832, 19,
	9, -1000, -1000, -1000, -1000, 1185, -1000, 1321, 321, 370,
	-1000, 431, -1000, -1000, -1000, -1000, 2227, 78, -1000, -1000,
	-1000, 360, 364, -1000, -1000, -1000, -1000, -1000, -1000, 1624,
	1624, -1000, -1000, -1000, -1000, -1000, 1246, -1000, -1000, -1000,
	-1000, 1245, -1000, -1000, 1236, -1000, -1000, 2366, 2097, 434,
	-1000, -1000, 956, 1591, -1000, -1000, 2226, 956, 956, 54265,
	-1000, -1000, 1735, 2298, 232, 55711, 994, 2079, -1000, 2054,
	2054, 2054, 55711, -1000, -1000, -1000, -1000, -1000, -1000, -502,
	168, 377, -1000, -1000, -1000, 4458, 54265, 1685, -1000, 216,
	-1000, 1699, -1000, 54265, -1000, 1674, 1987, 1322, 1322, -1000,
	-1000, -1000, 54265, 1911, -1000, -1000, -1000, -1000, 501, 2278,
	343, -1000, -1000, -278, -1000, -1000, 221, 216, 54988, 1322,
	872, -1000, -1000, -1000, -1000, -1000, -503, 1655, 488, 220,
	482, 55711, 55711, 55711, 55711, 55711, 809, -1000, -1000, 35,
	-1000, -1000, 204, -1000, -1000, -1000, -1000, 204, -1000, -1000,
	-1000, -1000, 270, 447, -1000, 55711, 55711, 910, -1000, -1000,
	-1000, -1000, -1000, 1050, -1000, -1000, 1050, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2267,
	55711, 21, -467, -1000, -464, 22453, -1000, -1000, -1000, -1000,
	1784, 484, 483, 1932, 24622, 24622, 24622, 2217, 2217, 24622,
	-1000, -1000, -1000, 796, 796, 34021, -1000, 24622, 22453, 21730,
	-1000, -1000, 22453, 22453, 966, -1000, 22453, 1168, -1000, 22453,
	-1000, -1000, 1401, 1732, 1732, 1732, 1732, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1834, -1000, 22453,
	22453, 22453, 1402, 319, -1000, -1000, -1000, -1000, -1000, 2455,
	-1000, 22453, -1000, 34021, 22453, 22453, 22453, -1000, -1000, -1000,
	22453, 22453, -1000, -1000, 22453, -1000, 22453, -1000, -1000, -1000,
	-1000, -1000, -1000, 22453, -1000, 22453, -1000, -1000, -1000, 22453,
	-1000, 22453, -1000, -1000, 22453, -1000, 22453, -1000, 22453, -1000,
	22453, -1000, 22453, -1000, 22453, -1000, 22453, -1000, 22453, -1000,
	22453, -1000, 22453, -1000, 22453, -1000, 22453, -1000, 22453, -1000,
	22453, -1000, 22453, -1000, 22453, -1000, 22453, -1000, 22453, -1000,
	-1000, -1000, 22453, -1000, 22453, -1000, 22453, -1000, -1000, 22453,
	-1000, 22453, -1000, 22453, -1000, 22453, 22453, -1000, 22453, 22453,
	22453, -1000, 22453, 22453, 22453, 22453, -1000, -1000, -1000, -1000,
	22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453, 22453,
	-1000, -1000, -1000, -1000, -1000, -1000, 22453, -1000, 39805, 14,
	-257, 1492, 14, 1492, 23899, 825, 824, 23176, -1000, 21730,
	16657, -1000, -1000, -1000, -1000, -1000, 22453, 22453, 22453, 22453,
	22453, 22453, -1000, -1000, -1000, 22453, 22453, -1000, 22453, -1000,
	22453, -1000, -1000, -1000, -1000, -1000, 931, -1000, 871, 871,
	871, 54265, -1000, -1000, -1000, -1000, 1831, -1000, 2355, -1000,
	2168, 2165, 2453, 2447, -1000, 30406, 2761, -1000, -1000, 54265,
	-421, -1000, 2208, 2275, 873, 873, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 13741, 2339, 22453, 2078, 54988, 243, -1000,
	29683, 54265, 54988, 30406, 30406, 30406, 30406, 30406, -1000, 2122,
	2119, -1000, 2121, 2094, 2125, 55711, -1000, 1423, 1653, -1000,
	22453, 32575, 1811, 30406, -1000, -1000, 30406, 55711, 13012, -1000,
	-1000, 20, -10, -1000, -1000, -1000, -1000, 965, -1000, -1000,
	1120, 2315, 2225, -1000, -1000, -1000, -1000, -1000, 1638, -1000,
	1619, 1830, 1614, 1612, 280, -1000, 2037, 2252, 956, 956,
	-1000, 1223, -1000, 1322, 1573, 1572, -1000, -1000, -1000, 455,
	-1000, 2303, 55711, 2077, 2075, 2072, -1000, -521, 1219, 1983,
	1937, 22453, 1979, 2417, 1821, 54265, -1000, -1000, 54988, -1000,
	318, -1000, 434, 54265, -1000, -1000, -1000, 293, 55711, -1000,
	5564, -1000, -1000, -1000, 216, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 55711, 241, -1000, 1965, 1306, -1000, -1000, 1954,
	-1000, -1000, -1000, -1000, 186, 296, 1554, 199, 1544, 199,
	-1000, 55711, 887, 2097, 55711, -1000, -1000, -1000, 1093, 1093,
	-1000, -1000, 2248, -1000, 1322, 1732, 24622, 24622, 24622, -1000,
	877, 877, -1000, -1000, 485, -233, 1949, 1949, -1000, 1949,
	1950, -1000, 1949, 162, 1949, 158, 1949, -1000, -1000, 1402,
	1402, -1000, 1401, -1000, 2331, 1422, -1000, 1185, 22453, 2987,
	-1000, -1000, -1000, -1000, -1000, -68, 2980, 2892, 1732, -1000,
	1940, 1939, 22453, 1732, 1402, 2322, 1732, 1732, 1732, 1732,
	1732, 1732, 1732, 1732, 1732, 1732, 1732, 1732, 2284, 2274,
	2262, 2256, 2214, 2200, 2174, 2157, 2150, 2136, 2118, 2111,
	2069, 2062, 2027, 2022, 1732, 1732, 2004, 1732, 1994, 1980,
	-1000, 1185, 1401, 2728, 1401, 1732, 1732, 2649, 330, 1732,
	1571, 1571, 1571, 1571, 1571, 1401, 1401, 1401, 1401, 1732,
	54265, -1000, -257, -1000, -1000, -306, -342, -1000, 1402, -257,
	1829, 24622, 1732, 24622, 24622, 24622, 1732, 1402, -1000, 1935,
	1852, 2607, 1745, 1732, 2482, 1732, 1732, 1732, 1688, -1000,
	2332, 2332, 2332, 1550, 1178, 55711, -1000, -1000, -1000, -1000,
	2447, 2439, 1824, -1000, -1000, 71, 626, -1000, 2192, 2275,
	-1000, 2416, 2202, 2413, -1000, -1000, -1000, -1000, -1000, 1185,
	-1000, 2282, 1809, -1000, 959, 1816, -1000, -1000, 21007, 1552,
	2164, 798, 1550, 1854, 2162, 2052, 2071, 2807, -1000, -1000,
	-1000, -1000, 2113, -1000, 2101, -1000, -1000, 1922, -1000, 2443,
	310, 30406, 1825, 1825, -1000, 794, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1091, 5564, 2498, -1000, 1543, -1000, 1305,
	208, 1216, -1000, -1000, 956, 956, -1000, 1039, 1030, -1000,
	55711, 1927, -1000, 364, 1522, 364, 1213, -1000, -1000, 1211,
	-1000, -1000, -1000, -1000, 1889, 2092, -1000, -1000, -1000, -1000,
	55711, -1000, -1000, 55711, 55711, 55711, 1926, 2411, -1000, 22453,
	1925, 958, 2336, 54265, 54265, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 424, 956, -480, 273,
	265, 956, 956, 956, -522, -1000, -1000, 1539, 1532, -1000,
	-200, -1000, 22453, -1000, -1000, -1000, -1000, -1000, 1287, 1287,
	1520, 1519, 1506, -1000, 1922, -1000, -1000, -1000, 1686, -1000,
	-1000, -187, 54265, 54265, 54265, 54265, -1000, -1000, 1167, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 877, 877, 1402, 349, -192, 1402, -1000, -1000, 364,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	22453, -1000, 22453, -1000, 1185, 22453, 2339, 1504, 22453, 22453,
	-1000, 1194, 1191, 1732, -1000, -1000, -1000, 22453, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 22453, -1000, 22453, -1000, 22453, -1000, 22453, -1000, 22453,
	-1000, 22453, -1000, 22453, -1000, 22453, -1000, 22453, -1000, 22453,
	-1000, 22453, -1000, 22453, -1000, 22453, -1000, 22453, -1000, 22453,
	-1000, 22453, -1000, -1000, 22453, -1000, -1000, -1000, 22453, -1000,
	22453, -1000, 22453, -1000, -1000, -1000, 22453, 275, 796, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1402, 307, -1000, -1000, -1000, -1000, 2451, -1000, 1402, 22453,
	2217, -1000, 2217, 2217, 2217, -1000, -1000, -1000, 22453, -1000,
	22453, 22453, -1000, 22453, -1000, 22453, -1000, -1000, -1000, -1000,
	22453, 1911, 2224, 1911, 1911, 32575, -1000, -1000, 2439, 2433,
	2402, 2190, 2197, 2197, 2192, -1000, 2401, 2395, -1000, 1499,
	2393, 1497, 1026, -1000, 54988, 22453, 243, -1000, 381, 54265,
	243, 54265, -1000, 2428, -1000, -1000, 22453, 1924, -1000, 22453,
	-1000, -1000, -1000, -1000, 6803, 2447, 1825, -1000, -1000, 890,
	-1000, 22453, -1000, 10672, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1482, 1480, -1000, -1000, 1923, 22453, -1000, -1000,
	-1000, 1533, 1527, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1922, -1000, -1000, -1000, -1000, 293, -509, 2292, 54265,
	1179, -1000, 1513, 1821, 303, 243, 1477, 956, 956, 956,
	1176, 1133, 38359, 1510, -1000, 54265, 372, -1000, 293, -1000,
	-217, -218, 1732, -1000, -1000, 2312, -1000, -1000, 16657, -1000,
	-1000, 1919, 2048, -1000, -1000, -1000, -1000, 2135, -178, -201,
	-1000, -1000, 1732, 1732, 1945, 1402, -1000, 1732, 1732, 1493,
	1464, -1000, 1732, 1732, 1732, 1732, 1732, 1732, 1732, 1732,
	1732, 1732, 1732, 1732, 1732, 1732, 1732, 1732, 1732, 1732,
	1732, 1732, 1401, 1677, -1000, 275, 1402, 2068, -1000, -1000,
	6803, -1000, -1000, 2428, 2392, 14, -1000, -1000, 225, 14,
	1185, 981, 1402, 1402, 981, 1658, 1732, 1616, 1590, 1732,
	1732, 33298, -1000, 2389, 2388, 39082, 39082, 931, 2433, -264,
	22453, 22453, 2187, 1192, -1000, -1000, -1000, -1000, 1471, 1458,
	-1000, 1385, -1000, 2494, -1000, 1185, -1000, 243, -1000, 790,
	1816, -1000, 2339, 1185, 54265, 1185, 70, 2428, -1000, 1732,
	-1000, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911, 1911,
	-1000, -1000, 54265, 1768, -1000, -1000, 2311, 1457, 163, -1000,
	1424, 1821, -1000, -1000, 218, -1000, 22453, -1000, 38359, 1351,
	1349, -1000, -1000, -1000, -1000, -522, -1000, -1000, -1000, -1000,
	-1000, -1000, 411, 1819, -1000, 952, 54265, 55711, -1000, 2133,
	-1000, -1000, -1000, 22453, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 22453, -1000, 1402, 2065, -1000, -356, -1000, -491, 22453,
	-257, -1000, -1000, -257, -1000, -1000, -1000, -1000, -1000, 22453,
	-1000, -1000, 22453, -1000, 22453, -1000, -1000, 1436, -1000, -1000,
	-1000, -1000, -1000, 1436, 1436, -1000, -264, -1000, 1818, -1000,
	54265, 1185, 1810, -1000, 1170, -1000, -1000, -1000, -1000, -1000,
	54988, 1816, 54265, -1000, 1433, 1402, 1911, 2339, -1000, 1429,
	-1000, 411, -1000, 1914, 1937, -1000, -1000, -1000, 20284, -1000,
	-1000, -1000, -1000, -1000, 286, -186, 16657, 12283, 1405, -1000,
	-182, 1732, 1401, -1000, -455, -1000, -1000, -1000, -1000, 287,
	-1000, -1000, 1810, -1000, -1000, 1577, 1547, 1489, 37636, -1000,
	-1000, -1000, -1000, -264, -1000, -1000, 2310, -1000, -1000, 1785,
	-1000, -1000, 32575, 53542, -1000, -169, 348, -186, 22453, 1913,
	1402, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -36,
	-1000, -1000, 504, -1000, -1000, -1000, 1954, -194, -1000, -1000,
	-1000, 320, -470, -288, -298, 24622, -1000, 22453, -1000, 22453,
	-1000, 22453, -1000, -1000, -1000, 54265, 1911, -1000, 1399, -1000,
	4414, -381, 2064, -1000, -93, -1000, -1000, -1000, 1086, 1333,
	-1000, -1000, -1000, -1000, -1000, -1000, 1751, 54265, -1000, 344,
	-1000, -1000, 15928, -187, -212, 1005, -1000, -1000, -1000, -1000,
	-1000, 2217, 1463, 1426, 1732, -1000, 54265, -1000, 53542, -367,
	872, 6803, -1000, 2061, 2032, 2467, -1000, -1000, -1000, -1000,
	-1000, -1000, -524, 1348, 244, -1000, -1000, -1000, 320, -321,
	-1000, 22453, -1000, 22453, -1000, 1402, -1000, -1000, 2295, 70,
	-1000, 2487, -1000, 2483, 951, 951, -1000, 1123, -524, -1000,
	-1000, -1000, -1000, 1732, 1732, -1000, -382, -1000, -1000, -1000,
	-1000, -1000, 379, 1163, -1000, -1000, -1000, -1000, -1000, 6803,
	-1000, -1000, -1000, 276, 276, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3099, 3098, 29, 6, 37, 35, 3095, 3094, 3093,
	166, 3092, 3091, 3090, 3089, 3088, 3087, 2547, 2540, 2523,
	3086, 3085, 3084, 3083, 3082, 3081, 3080, 3079, 3078, 36,
	110, 81, 93, 210, 203, 3072, 179, 160, 200, 3066,
	3065, 3064, 116, 192, 79, 83, 195, 3063, 3060, 67,
	3059, 3058, 3055, 197, 191, 185, 1050, 3054, 187, 112,
	48, 3053, 3050, 3048, 3047, 3043, 3042, 3040, 3038, 3031,
	3030, 3025, 3024, 3023, 3022, 3021, 3019, 3018, 3017, 292,
	3016, 3014, 19, 3013, 72, 3012, 3008, 3007, 3005, 3004,
	57, 3000, 2999, 22, 45, 2994, 2993, 46, 2992, 2990,
	2989, 2983, 2979, 69, 2978, 21, 2968, 31, 2966, 2961,
	123, 2936, 2932, 2930, 38, 2921, 2920, 2917, 5, 164,
	2915, 2913, 139, 2908, 2907, 2902, 177, 220, 219, 2900,
	2895, 180, 104, 111, 2894, 2892, 99, 193, 2891, 119,
	2887, 2861, 2860, 149, 2859, 3811, 2858, 2857, 60, 64,
	168, 2856, 2838, 216, 62, 11, 14, 15, 2831, 2823,
	61, 59, 2821, 106, 2819, 2815, 101, 82, 2814, 100,
	94, 2813, 2810, 23, 7, 2808, 1, 4, 8, 80,
	2807, 2805, 113, 2804, 2800, 2797, 97, 2796, 2795, 3835,
	2794, 90, 131, 102, 71, 2791, 175, 129, 2783, 2777,
	2775, 2772, 2770, 49, 2769, 2762, 2761, 136, 238, 183,
	2757, 147, 336, 51, 145, 2756, 196, 75, 201, 161,
	2755, 2754, 134, 133, 2753, 2752, 54, 170, 190, 2747,
	95, 128, 118, 171, 92, 130, 2744, 2740, 55, 63,
	2737, 2729, 2728, 2727, 163, 2723, 2722, 58, 2721, 53,
	2718, 165, 2717, 137, 66, 2716, 174, 176, 2715, 126,
	2712, 2710, 65, 91, 68, 30, 2707, 156, 159, 125,
	172, 2704, 2702, 52, 2700, 2699, 2694, 199, 328, 2693,
	2690, 319, 178, 141, 148, 87, 2689, 317, 2684, 2679,
	40, 4951, 8211, 2658, 28, 158, 2657, 2656, 7449, 43,
	41, 18, 2649, 206, 2648, 2647, 2646, 2641, 217, 204,
	105, 157, 56, 2637, 2630, 2629, 42, 2627, 2624, 2622,
	2621, 2620, 2616, 70, 34, 33, 32, 212, 78, 20,
	98, 152, 151, 73, 2613, 2612, 2610, 121, 89, 2609,
	154, 153, 122, 155, 2601, 184, 142, 115, 2600, 96,
	27, 2599, 2598, 2597, 2595, 85, 2591, 2590, 2585, 2580,
	150, 143, 120, 76, 2576, 77, 117, 146, 144, 50,
	2575, 44, 2573, 2568, 24, 194, 26, 2567, 12, 103,
	109, 2566, 6231, 186, 2565, 9, 315, 162, 2561, 2559,
	10, 13, 16, 2558, 2557, 2556, 2555, 132, 2552, 2551,
	2549, 2548, 25, 47, 17, 2, 114, 74, 2541, 2530,
	140, 2528, 2521, 2519, 0, 1005, 127, 2506, 202,
}

//line sql.y:8607
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 412, 413, 413, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 259, 382, 383, 383, 257, 257, 28, 74, 36,
	36, 35, 35, 38, 38, 37, 31, 31, 31, 32,
	32, 32, 32, 32, 32, 32, 32, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 29, 29, 29, 29,
	30, 30, 30, 30, 30, 15, 16, 34, 34, 17,
	17, 108, 108, 18, 19, 19, 19, 19, 416, 416,
	184, 184, 182, 182, 183, 183, 262, 262, 20, 266,
	266, 268, 268, 268, 268, 258, 258, 258, 21, 21,
	267, 267, 269, 269, 269, 272, 272, 272, 272, 311,
	311, 311, 22, 22, 22, 22, 22, 129, 129, 385,
	385, 384, 378, 378, 377, 377, 376, 381, 381, 380,
	380, 379, 40, 41, 50, 50, 50, 50, 51, 52,
	386, 386, 351, 57, 57, 56, 56, 56, 56, 56,
	56, 58, 58, 54, 54, 53, 53, 55, 55, 353,
	353, 339, 339, 352, 352, 352, 352, 352, 352, 352,
	338, 338, 140, 140, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 401, 401, 401, 400, 400, 237, 237, 237, 237,
	237, 237, 237, 237, 149, 149, 160, 160, 160, 160,
	160, 160, 147, 147, 148, 146, 146, 146, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 159, 159, 155,
	155, 155, 156, 156, 156, 157, 157, 402, 402, 402,
	402, 316, 316, 316, 316, 319, 319, 317, 317, 317,
	317, 317, 317, 317, 317, 317, 318, 318, 318, 318,
	318, 318, 318, 320, 320, 320, 320, 320, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 322, 322, 322, 322, 322, 322,
	322, 322, 337, 337, 323, 323, 331, 331, 332, 332,
	333, 333, 333, 334, 334, 334, 335, 335, 328, 328,
	328, 328, 328, 328, 328, 328, 328, 330, 330, 329,
	329, 329, 340, 365, 365, 364, 364, 362, 362, 362,
	362, 362, 362, 362, 362, 349, 349, 359, 359, 359,
	359, 359, 348, 348, 344, 344, 344, 345, 345, 346,
	346, 343, 343, 347, 347, 361, 361, 360, 360, 341,
	341, 342, 342, 367, 403, 403, 403, 403, 403, 404,
	404, 368, 393, 395, 395, 395, 394, 394, 391, 392,
	390, 390, 390, 390, 390, 84, 84, 84, 285, 285,
	286, 286, 357, 357, 356, 356, 356, 358, 358, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	280, 280, 280, 389, 389, 389, 389, 389, 389, 388,
	388, 388, 354, 354, 354, 354, 387, 387, 59, 59,
	217, 217, 406, 406, 407, 407, 407, 47, 47, 47,
	47, 47, 47, 46, 46, 46, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 48, 48, 43,
	43, 43, 43, 43, 43, 43, 43, 43, 43, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 110, 110, 111,
	111, 111, 111, 113, 113, 113, 370, 370, 60, 60,
	3, 3, 172, 174, 175, 175, 173, 173, 173, 173,
	173, 173, 62, 62, 61, 61, 177, 176, 178, 178,
	178, 1, 1, 2, 2, 4, 4, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 336,
	336, 336, 369, 369, 371, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 116, 115, 115, 114, 117,
	117, 117, 117, 117, 117, 117, 117, 373, 373, 373,
	63, 63, 374, 324, 325, 326, 5, 6, 350, 372,
	124, 124, 24, 39, 39, 25, 25, 25, 25, 26,
	26, 64, 67, 67, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 279, 279, 288, 288,
	278, 278, 303, 303, 303, 281, 281, 281, 282, 282,
	399, 399, 399, 275, 275, 66, 66, 66, 304, 304,
	304, 304, 69, 69, 408, 408, 409, 409, 410, 410,
	410, 70, 71, 71, 306, 306, 307, 307, 72, 73,
	85, 85, 85, 85, 85, 85, 85, 86, 86, 86,
	86, 109, 109, 109, 10, 10, 10, 10, 81, 81,
	81, 9, 9, 11, 68, 68, 75, 396, 396, 397,
	398, 398, 398, 398, 76, 78, 27, 27, 27, 27,
	27, 27, 135, 135, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 130, 130, 130, 123,
	123, 417, 79, 80, 80, 127, 127, 127, 128, 128,
	120, 120, 120, 126, 126, 126, 12, 12, 13, 261,
	261, 14, 14, 132, 132, 134, 134, 134, 134, 134,
	136, 136, 136, 136, 136, 136, 136, 131, 131, 133,
	133, 133, 133, 296, 296, 296, 295, 295, 166, 166,
	168, 167, 167, 169, 169, 170, 170, 170, 170, 215,
	215, 192, 192, 254, 254, 255, 255, 253, 253, 260,
	260, 256, 256, 256, 256, 263, 263, 171, 171, 171,
	171, 179, 179, 180, 180, 181, 181, 305, 305, 301,
	301, 301, 300, 300, 185, 185, 185, 187, 186, 186,
	186, 186, 188, 188, 190, 190, 189, 189, 191, 196,
	196, 195, 195, 193, 193, 193, 193, 194, 194, 194,
	194, 197, 197, 145, 145, 145, 145, 145, 145, 145,
	145, 158, 158, 158, 158, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	244, 244, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 220, 220, 219, 219, 87, 87, 87, 88,
	88, 89, 89, 89, 89, 89, 90, 90, 90, 90,
	90, 90, 90, 92, 92, 91, 91, 210, 210, 293,
	293, 93, 94, 94, 97, 97, 96, 95, 95, 101,
	101, 98, 98, 100, 100, 99, 102, 102, 103, 104,
	104, 276, 276, 198, 198, 206, 206, 206, 206, 199,
	199, 199, 199, 199, 199, 199, 207, 207, 207, 214,
	208, 208, 204, 204, 202, 202, 202, 202, 202, 202,
	202, 202, 202, 202, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 163, 163, 163, 163, 225,
	225, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 152, 152, 164, 164,
	164, 164, 165, 165, 165, 165, 165, 165, 165, 313,
	313, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 418,
	418, 327, 327, 327, 205, 205, 205, 205, 205, 125,
	125, 125, 125, 125, 310, 310, 310, 314, 314, 314,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 315, 315, 223, 223, 121,
	121, 221, 221, 222, 224, 224, 216, 216, 216, 216,
	218, 218, 201, 201, 201, 226, 226, 227, 227, 105,
	106, 106, 107, 107, 228, 228, 230, 229, 229, 231,
	232, 232, 232, 233, 233, 234, 234, 234, 49, 49,
	49, 49, 49, 44, 44, 44, 44, 45, 45, 45,
	45, 137, 137, 137, 137, 139, 139, 138, 138, 82,
	82, 83, 83, 83, 143, 143, 144, 144, 144, 141,
	141, 142, 142, 251, 251, 235, 235, 235, 242, 242,
	242, 238, 238, 240, 240, 240, 241, 241, 241, 239,
	248, 248, 250, 250, 249, 249, 245, 245, 246, 246,
	247, 247, 247, 243, 243, 200, 200, 200, 200, 200,
	252, 252, 252, 252, 264, 264, 211, 211, 213, 213,
	212, 212, 162, 265, 265, 273, 270, 270, 271, 271,
	297, 297, 297, 274, 274, 287, 287, 283, 283, 284,
	284, 277, 277, 289, 289, 289, 77, 209, 209, 366,
	366, 363, 292, 292, 294, 294, 298, 298, 302, 302,
	299, 299, 8, 411, 411, 411, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 414, 415, 308, 309, 309, 309,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 0, 1, 1, 1, 2, 3, 2,
	3, 0, 1, 3, 1, 4, 3, 3, 4, 3,
	2, 3, 4, 3, 4, 2, 7, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 1, 2, 1, 1,
	3, 2, 3, 3, 2, 5, 7, 10, 9, 7,
	8, 1, 1, 10, 11, 9, 8, 8, 1, 1,
	1, 3, 1, 3, 1, 3, 0, 4, 3, 1,
	3, 3, 3, 3, 3, 1, 1, 2, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 2, 2, 6, 12, 2, 0, 2, 0,
	2, 1, 0, 2, 1, 3, 3, 0, 1, 1,
	3, 3, 6, 4, 7, 8, 8, 8, 6, 3,
	1, 1, 5, 0, 1, 1, 1, 1, 2, 2,
	2, 0, 1, 4, 4, 4, 4, 4, 4, 2,
	4, 1, 3, 1, 1, 3, 4, 3, 3, 3,
	5, 10, 0, 2, 0, 2, 3, 5, 3, 4,
	2, 3, 2, 3, 3, 3, 3, 2, 2, 4,
	4, 1, 1, 1, 1, 1, 0, 2, 2, 3,
	3, 2, 2, 2, 1, 1, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 5, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 3, 0, 5, 1, 3,
	0, 3, 5, 0, 1, 1, 0, 1, 0, 3,
	3, 2, 2, 2, 1, 2, 2, 0, 1, 0,
	2, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	1, 1, 3, 3, 3, 0, 1, 4, 3, 3,
	4, 2, 0, 2, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 3, 3, 4, 3,
	1, 3, 1, 7, 6, 7, 7, 8, 8, 0,
	1, 5, 2, 1, 1, 1, 0, 1, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 1, 1, 2,
	0, 1, 0, 1, 1, 3, 2, 1, 2, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 5,
	0, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 0, 1, 0, 1,
	0, 2, 0, 2, 0, 2, 2, 0, 1, 5,
	1, 3, 7, 1, 3, 3, 1, 2, 2, 2,
	5, 5, 5, 6, 8, 5, 5, 4, 4, 4,
	6, 5, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 7, 5, 5,
	5, 5, 5, 7, 7, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 2, 4, 4, 3,
	0, 1, 4, 3, 4, 4, 3, 3, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 3, 5, 5, 3, 3, 7, 3, 3, 3,
	3, 4, 7, 5, 2, 4, 4, 4, 4, 4,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 2, 4, 4, 4, 4, 4, 2, 3, 3,
	3, 3, 5, 2, 3, 3, 2, 3, 4, 4,
	4, 3, 4, 4, 5, 3, 0, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 2,
	0, 1, 1, 1, 1, 2, 1, 3, 1, 1,
	1, 1, 1, 3, 0, 1, 1, 3, 3, 2,
	2, 1, 1, 5, 0, 1, 0, 1, 2, 3,
	0, 3, 3, 3, 3, 3, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 4, 4, 4, 2, 2, 3, 1, 3, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 6, 4,
	7, 6, 1, 3, 2, 2, 2, 2, 1, 1,
	1, 3, 2, 1, 1, 1, 0, 1, 1, 0,
	3, 0, 2, 0, 2, 1, 2, 2, 1, 2,
	0, 1, 1, 0, 1, 1, 5, 5, 4, 0,
	2, 4, 4, 0, 1, 0, 1, 2, 3, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 3, 1, 1,
	2, 3, 7, 0, 3, 0, 1, 1, 3, 1,
	3, 1, 1, 3, 3, 1, 3, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 0, 1, 0,
	1, 2, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 2, 2, 2, 1, 1, 3, 3, 0,
	1, 1, 2, 6, 5, 6, 6, 0, 2, 3,
	3, 0, 2, 3, 3, 3, 2, 3, 1, 3,
	6, 3, 4, 3, 1, 3, 4, 5, 6, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 5, 5,
	3, 3, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 3, 1, 1, 1, 2, 2, 2, 2, 1,
	1, 2, 7, 7, 6, 6, 2, 2, 5, 6,
	3, 3, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	4, 2, 4, 0, 1, 2, 5, 0, 3, 0,
	1, 4, 4, 2, 0, 1, 1, 2, 2, 1,
	1, 2, 2, 0, 1, 1, 1, 1, 5, 1,
	3, 0, 3, 1, 1, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 4, 8, 6, 8, 6,
	5, 4, 10, 2, 2, 1, 2, 2, 2, 2,
	2, 4, 5, 5, 5, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 8, 4, 8,
	8, 6, 5, 4, 4, 4, 4, 4, 7, 4,
	4, 6, 6, 6, 8, 6, 6, 4, 4, 3,
	4, 6, 6, 4, 4, 6, 4, 6, 4, 4,
	4, 4, 4, 4, 6, 4, 6, 4, 4, 4,
	6, 4, 6, 4, 4, 6, 4, 6, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 4, 4, 6,
	4, 6, 4, 8, 6, 4, 4, 6, 4, 6,
	8, 4, 6, 8, 4, 4, 6, 8, 6, 4,
	6, 6, 8, 10, 7, 8, 8, 9, 4, 4,
	4, 4, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 4, 4, 4, 4, 4, 4, 6, 4,
	6, 5, 9, 6, 9, 8, 6, 8, 8, 8,
	6, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 6, 8, 10, 12, 14, 6, 8, 8, 10,
	12, 14, 6, 8, 10, 12, 6, 8, 4, 4,
	3, 4, 6, 6, 4, 6, 4, 6, 8, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 2, 3, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 0, 5, 5,
	2, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 2, 1, 1, 0, 1, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 1, 3, 5,
	1, 1, 1, 2, 2, 0, 3, 0, 2, 2,
	1, 3, 0, 1, 0, 1, 3, 1, 3, 2,
	0, 1, 1, 0, 1, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 0, 3, 3, 3, 0, 3, 1, 1, 0,
	4, 0, 1, 1, 0, 3, 1, 3, 2, 1,
	1, 0, 1, 2, 4, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 4, 1, 1, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 1, 1, 5, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -412, -79, -417, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -64, -67,
	-65, -66, -69, -70, -71, -72, -73, -9, -11, -68,
	-27, -28, -74, -75, -76, -77, -78, -12, -13, -14,
	-8, -32, -31, -30, 11, 12, -108, -35, 34, -40,
	-50, 229, -51, -41, 230, -52, 232, 231, 269, 233,
	381, 262, 76, 317, 318, 320, 321, 322, 323, -109,
	685, 267, 268, 235, 38, 47, 35, 36, 39, 239,
	275, 276, 238, 134, -33, -36, 10, -414, 13, 471,
	264, 263, 30, -34, 580, 88, -80, -413, 733, -251,
	-235, 24, 35, 31, -234, -230, -127, -128, -235, 22,
	20, 8, 9, -79, -79, -79, 14, 15, -79, -351,
	-353, 88, 161, 88, -79, -57, -56, -54, -53, -55,
	-58, 33, -47, -48, -375, -46, -43, 234, 231, 279,
	124, 125, 269, 270, 271, 233, 253, 268, 272, 267,
	288, -42, 83, 35, 580, 583, -358, 230, 236, 237,
	232, 472, 127, 126, 77, -355, 376, 612, 703, -58,
	705, 102, 105, 704, 46, 243, 706, 707, 708, 619,
	709, 252, 710, 711, 712, 713, 719, 660, 720, 721,
	722, 128, 8, -79, -302, -298, 92, -291, 577, 255,
	610, 425, 611, 304, 83, 43, 516, 586, 373, 376,
	612, 501, 703, 382, 317, 333, 327, 506, 507, 508,
	356, 348, 578, 613, 587, 307, 256, 292, 697, 346,
	137, 705, 311, 614, 270, 383, 384, 615, 385, 102,
	320, 422, 718, 310, 616, 716, 105, 704, 325, 81,
	500, 53, 700, 46, 265, 430, 431, 344, 238, 340,
	706, 293, 617, 589, 286, 127, 124, 725, 38, 336,
	52, 32, 715, 126, 51, 707, 152, 618, 708, 619,
	387, 363, 691, 50, 388, 271, 620, 86, 276, 582,
	314, 699, 389, 521, 337, 390, 303, 714, 235, 621,
	680, 672, 673, 391, 392, 692, 368, 364, 369, 523,
	622, 414, 505, 393, 676, 677, 732, 54, 623, 624,
	693, 125, 625, 80, 709, 82, 331, 332, 626, 301,
	254, 526, 527, 416, 360, 483, 490, 491, 112, 113,
	486, 114, 492, 115, 493, 494, 495, 484, 116, 109,
	485, 496, 497, 361, 362, 117, 498, 111, 110, 487,
	489, 118, 499, 252, 37, 394, 579, 305, 60, 309,
	280, 417, 48, 366, 729, 47, 687, 528, 627, 690,
	359, 355, 480, 55, 628, 629, 630, 631, 502, 710,
	358, 330, 354, 724, 4, 298, 503, 711, 64, 237,
	371, 370, 372, 287, 413, 351, 632, 633, 634, 259,
	84, 635, 341, 23, 636, 637, 395, 294, 638, 58,
	639, 640, 420, 268, 641, 56, 712, 41, 642, 273,
	726, 713, 643, 644, 645, 686, 646, 275, 647, 397,
	648, 674, 675, 396, 365, 367, 529, 282, 398, 381,
	240, 581, 649, 315, 335, 272, 717, 650, 260, 517,
	518, 519, 520, 698, 525, 524, 274, 279, 267, 421,
	261, 651, 652, 653, 654, 655, 308, 671, 656, 657,
	321, 719, 481, 45, 658, 659, 660, 661, 662, 302,
	297, 415, 424, 63, 85, 378, 663, 664, 696, 329,
	326, 295, 462, 464, 465, 466, 467, 468, 463, 470,
	665, 318, 57, 720, 721, 722, 289, 723, 509, 510,
	511, 512, 11, 563, 546, 574, 547, 564, 548, 557,
	549, 565, 573, 575, 530, 538, 531, 539, 569, 552,
	566, 558, 551, 550, 572, 555, 559, 532, 540, 570,
	556, 533, 541, 534, 542, 535, 543, 568, 567, 560,
	571, 536, 544, 562, 537, 545, 561, 553, 554, 433,
	730, 731, 504, 400, 128, 299, 300, 49, 352, 281,
	666, 312, 667, 342, 343, 477, 478, 357, 328, 353,
	683, 319, 681, 283, 401, 482, 269, 668, 423, 296,
	374, 379, 313, 585, 522, 288, 402, 695, 584, 513,
	514, 350, 347, 290, 515, 669, 685, 403, 244, 284,
	285, 670, 682, 404, 405, 306, 406, 407, 408, 409,
	410, 412, 316, 411, 684, 678, 679, 291, 461, 583,
	324, 345, 380, 443, 444, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	460, 479, 242, -79, 242, -189, -298, 242, 181, -270,
	384, -288, 386, 399, 394, 404, 392, -279, 395, 397,
	282, -399, 414, 242, 401, 229, 387, 396, 405, 406,
	306, 412, 407, 316, 411, 291, 408, 409, 410, -382,
	181, 708, 723, 137, 349, 391, 389, 415, 687, 92,
	-304, 92, 93, 94, -291, 319, -306, 324, -292, -382,
	-291, 322, -79, -79, -308, -308, -130, 687, 689, -208,
	-145, 145, -158, -259, -161, 93, -150, -153, -202, -203,
	-204, -205, -159, -218, -257, 170, 171, 178, 146, -214,
	-162, 28, 576, 473, 472, 181, 33, 224, 70, 71,
	475, 148, 59, 13, 438, 439, -160, 428, 429, 440,
	434, 435, 500, 502, 503, 504, 501, 506, 507, 508,
	509, 510, 511, 512, 513, 514, 515, 505, 516, 477,
	478, 119, 479, 109, 111, 110, 480, 481, 482, 346,
	528, 529, 523, 526, 527, 525, 524, 361, 362, 483,
	546, 547, 551, 550, 548, 549, 552, 555, 556, 557,
	558, 559, 560, 562, 561, 553, 554, 531, 530, 532,
	533, 534, 535, 536, 537, 539, 538, 540, 541, 542,
	543, 544, 545, 563, 564, 565, 566, 567, 569, 568,
	573, 572, 570, 571, 575, 574, 484, 485, 112, 113,
	114, 115, 116, 117, 118, 486, 489, 487, 488, 490,
	491, 492, 497, 498, 493, 494, 495, 496, 499, 372,
	370, 371, 367, 366, 365, -89, -101, 601, 600, -102,
	425, 430, 431, 433, -151, -152, -164, -165, -292, -298,
	247, 427, 241, 176, 471, -154, -148, -216, 108, 94,
	-31, -212, 426, 436, 437, 441, 432, 442, 588, 590,
	604, 605, 607, 592, 597, 596, 599, 517, 518, 519,
	520, 521, 522, 672, 673, 674, 675, 676, 677, 678,
	679, -382, -291, 92, -156, -155, -198, 95, 100, 103,
	104, 106, -405, 265, 342, 343, 120, -414, 701, 91,
	96, 97, 98, 99, 121, 122, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 222, 223, 46, 400,
	400, -189, -79, -79, -79, -79, -411, 704, 581, -228,
	-127, -128, -230, -33, -31, -414, 10, -79, -31, -32,
	-30, -36, -38, 606, -37, -298, 101, -235, -251, 14,
	165, 44, 52, -233, -234, -34, -31, -34, -31, -145,
	21, 25, 26, 26, -133, 172, -145, -298, -133, -277,
	246, -79, -79, -266, -311, 319, -268, 415, 687, 414,
	-258, -271, 92, -257, -270, 413, 93, -352, 161, -338,
	-342, -292, 257, -368, 253, -189, -361, -360, -292, -414,
	-129, -287, 243, 251, 250, 138, -386, 141, 299, 427,
	241, -53, -54, -55, -270, 180, 707, -110, 274, 278,
	89, 89, -342, -341, -340, -387, 278, 257, -367, -359,
	249, 258, -348, 250, 251, -343, 243, 139, -387, -343,
	248, 258, 253, 257, 278, 278, 128, 278, 128, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 273, -349,
	153, -349, 584, 584, -355, -387, 253, 243, -387, -387,
	249, -289, -343, 245, 27, 245, 37, 37, -349, -349,
	-349, -270, 180, -349, -349, -349, -349, 286, 286, -349,
	-349, -349, -349, -349, -349, -349, -349, -349, -349, -349,
	-349, -349, -349, -349, -349, -349, 242, -386, -137, 411,
	306, 83, -56, 288, -39, -189, -287, 243, 244, -386,
	275, -189, 225, -189, 690, -281, 161, 17, -281, -278,
	400, 398, 385, 390, -281, -281, -281, -281, 289, 383,
	-344, 243, 37, 254, 400, 289, 383, 289, 290, 289,
	290, 393, 403, 289, -303, 16, 165, 427, 388, 392,
	282, 242, 283, 244, 402, 290, -303, 91, -282, 161,
	289, 400, 285, -281, -281, -309, -414, -294, -292, -290,
	234, 25, 144, 27, 29, 147, 181, 131, 21, 148,
	39, 236, 349, 253, 180, 249, 472, 229, 74, 588,
	428, 435, 426, 434, 438, 474, 475, 427, 386, 33,
	15, 590, 30, 263, 26, 40, 174, 231, 151, 591,
	266, 28, 264, 119, 122, 592, 24, 77, 258, 16,
	251, 42, 18, 593, 594, 19, 247, 246, 165, 243,
	72, 13, 224, 31, 160, 68, 595, 139, 134, 596,
	597, 598, 599, 132, 70, 161, 22, 727, 436, 437,
	35, 688, 576, 277, 176, 75, 61, 689, 145, 432,
	600, 601, 120, 602, 123, 78, 694, 141, 20, 73,
	44, 603, 278, 604, 248, 728, 605, 418, 606, 163,
	232, 471, 71, 164, 701, 607, 702, 241, 399, 10,
	476, 34, 262, 250, 130, 69, 442, 608, 242, 150,
	245, 133, 121, 8, 9, 138, 36, 14, 76, 79,
	439, 440, 441, 59, 129, 580, 149, 17, 609, 419,
	143, -382, 690, -309, -309, 34, 93, -408, -409, -410,
	580, 418, 245, -292, -189, -85, 680, 233, -86, 686,
	25, 240, -135, 400, -122, 181, 708, 691, 692, 693,
	690, 397, 698, 696, 694, 289, 695, 89, 141, 143,
	144, 4, -145, 160, -199, 153, 154, 155, 156, 157,
	158, 159, 166, 165, 145, 147, 161, 162, -244, 142,
	167, 168, 169, 170, 171, 172, 173, 175, 174, 176,
	177, 163, 164, 180, 227, 228, -153, -153, -153, -153,
	-214, -220, -219, -414, -216, -382, -291, -298, -414, -414,
	-153, -276, -414, -150, -414, -414, -414, -414, -223, -145,
	-414, -414, -418, -414, -418, -418, -418, -327, -414, -327,
	-327, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, 225, -414, -414, -414, -414, -414,
	-327, -327, -327, -327, -327, -327, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	104, 100, 103, 95, -218, 106, 91, 91, 91, 91,
	-31, -32, -208, -414, -308, -396, -397, -192, -189, -414,
	306, -292, -292, 275, 97, -233, -34, -31, -34, -31,
	-228, -234, -230, -31, -79, -120, -134, 65, 66, -136,
	26, 40, 69, 67, 25, -415, 90, -415, -251, -415,
	89, -38, -254, 88, 63, 45, 91, 91, 89, 23,
	-229, -231, -145, 16, -296, 4, -295, 27, -292, 91,
	225, 16, -190, 31, -189, -277, -277, 89, 92, 319,
	-267, -269, 416, 418, 153, -297, -292, 91, 33, 90,
	89, -189, -316, -319, -321, -320, -322, -317, -318, 346,
	347, 181, 350, 352, 353, 354, 355, 356, 357, 358,
	359, 360, 363, 34, 265, 342, 343, 344, 345, 364,
	365, 366, 367, 369, 370, 371, 372, 327, 348, 578,
	328, 329, 330, 331, 332, 333, 335, 336, 339, 337,
	338, 340, 341, -383, -382, 88, 90, 89, -323, 88,
	-145, -137, 242, -382, 243, 243, 243, -79, 471, -349,
	-349, -349, 273, 21, -46, -43, -375, 20, -42, -43,
	234, 124, 125, 231, 88, -338, 88, -347, -383, -382,
	88, 139, 248, 138, -346, -343, -346, -347, -382, -216,
	-382, 139, 139, -382, -382, -263, -292, -263, -263, 25,
	-263, 25, -263, 25, 97, -292, -263, 25, -263, 25,
	-263, 25, -263, 25, -263, 25, 33, 80, 81, 82,
	33, 84, 85, 86, -216, -382, -382, -216, -338, -216,
	-189, -382, -270, 97, 97, 97, -349, -349, 97, 91,
	91, 91, -349, -349, 97, 91, -300, -298, 91, 91,
	-388, 259, 303, 305, 97, 97, 97, 97, 33, 91,
	-389, 33, 715, 714, 716, 717, 718, 91, 97, 33,
	97, 33, 97, -292, 88, -189, -143, 293, 229, 231,
	234, 78, 91, 309, 310, 307, 312, 313, 153, 46,
	89, 245, 242, -382, -283, 247, -283, -292, -299, -298,
	-290, 245, 382, 91, -145, -345, 16, 165, -303, -303,
	-281, -189, -345, -303, -281, -189, -281, -281, -281, -281,
	-303, -303, -303, -281, -298, -298, -189, -189, -189, -189,
	-189, -189, -189, -309, -282, -281, 690, 91, -275, 16,
	78, -309, -309, 89, 325, 419, 420, -307, 322, -81,
	-292, 91, -10, -29, -18, -17, -19, 153, -10, 89,
	580, -182, -189, 690, 690, 690, 690, 690, 690, -145,
	-145, -145, -145, 602, -206, 120, 145, 121, 122, -161,
	-145, -207, -212, -214, 107, 165, 147, 161, 162, -244,
	-150, -153, -153, -150, -150, -150, -150, -150, -150, 224,
	-150, 224, -150, -150, -150, -150, -150, -150, -310, -292,
	91, 181, -157, -156, 106, -405, -157, 577, 89, -219,
	225, -145, -145, -382, -118, 444, 445, 446, 447, 449,
	450, 451, 454, 455, 459, 460, 443, 461, 448, 453,
	456, 457, 458, 452, 345, -145, -131, -133, -131, -145,
	-221, -222, 149, -216, -145, -415, -415, 97, 172, -126,
	26, 40, -126, -126, -126, -126, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -126, -145, -119, 443,
	461, 448, 453, 456, 457, 458, 452, 345, 462, 463,
	464, 465, 466, 467, 468, 469, 470, -119, -118, -145,
	-145, -145, -145, -145, -145, -87, -145, 131, 132, 133,
	-208, -145, -150, -145, -145, -145, -415, -145, -145, -145,
	-209, -208, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -381, -380,
	-379, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -208, -208, -208, -208, -208, -145,
	-415, -145, -163, -148, 97, -259, 106, 93, -145, -145,
	-145, -145, -145, -145, -132, -131, -294, -299, -290, -291,
	-131, -132, -132, -131, -131, -145, -145, -145, -145, -145,
	-145, -145, -145, -415, -145, -145, -145, -145, -145, -251,
	-415, -208, 89, -398, 418, 419, 688, -301, 278, -300,
	27, -209, 91, 16, -261, 79, -292, -233, -233, 65,
	66, 61, -131, -136, -415, -37, 27, -253, -292, 64,
	91, -328, -270, 373, 374, 181, -145, -145, 89, -232,
	29, 30, -189, -295, 172, -299, -189, -262, 278, -189,
	-167, -169, -170, -171, -192, -215, -414, -172, -31, 598,
	595, 16, -182, -183, -191, -298, -268, -311, -267, 89,
	417, 419, 420, 78, 123, -145, -329, 180, -357, -356,
	-355, -338, -340, -341, -342, 90, -329, -334, 379, 378,
	-323, -323, -323, -323, -323, -328, -328, -328, -328, 88,
	88, -323, -323, -323, -323, -331, 88, -331, -331, -332,
	-331, 88, -332, -333, 88, -333, -368, -145, -365, -364,
	-362, -363, 252, 102, 670, 626, 580, 619, 660, 79,
	-360, -232, 97, -415, -143, -284, 247, -366, -363, -382,
	-382, -382, -284, 92, 91, 92, 91, 92, 91, -111,
	-60, -1, 727, 728, 729, 89, 21, -339, -338, -59,
	303, -371, -372, 278, -367, -361, -347, 139, -346, -347,
	-347, -382, 89, 31, 128, 128, 128, 128, 580, 231,
	34, -285, 618, 145, 670, 626, -338, -59, 245, 245,
	-310, -310, -310, 91, 91, -280, 723, -182, -139, 295,
	153, 284, 284, 242, 242, 297, -189, 308, 311, 309,
	310, 307, 312, 313, 25, 25, 25, 25, 25, 296,
	298, 300, 286, -189, -189, -283, 78, -184, -189, 28,
	-298, 91, 91, -189, -281, -281, -189, -281, -281, -189,
	-410, 326, -292, 360, 681, 682, 684, 683, -122, 418,
	89, 580, 24, -123, 24, -414, 120, 121, 122, -207,
	-150, -153, -153, -150, 144, 266, 266, -150, -150, -414,
	-216, -415, -294, 27, 89, 79, -415, 170, 89, 89,
	-415, -415, 89, 16, -224, -222, 151, -145, -415, 89,
	-415, -415, -208, -145, -145, -145, -145, -415, -415, -415,
	-415, -415, -415, -415, -415, -415, -415, -208, -415, 89,
	89, 16, -314, 27, -415, -415, -415, -415, -415, -223,
	-415, 16, -415, 79, 89, 165, 89, -415, -415, -415,
	89, 89, -415, -415, 89, -415, 89, -415, -415, -415,
	-415, -415, -415, 89, -415, 89, -415, -415, -415, 89,
	-415, 89, -415, -415, 89, -415, 89, -415, 89, -415,
	89, -415, 89, -415, 89, -415, 89, -415, 89, -415,
	89, -415, 89, -415, 89, -415, 89, -415, 89, -415,
	89, -415, 89, -415, 89, -415, 89, -415, 89, -415,
	-415, -415, 89, -415, 89, -415, 89, -415, -415, 89,
	-415, 89, -415, 89, -415, 89, 89, -415, 89, 89,
	89, -415, 89, 89, 89, 89, -415, -415, -415, -415,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	-415, -415, -415, -415, -415, -415, 89, -94, 603, -415,
	-415, 89, -415, 89, 89, 89, 89, 89, -415, -414,
	225, -415, -415, -415, -415, -415, 89, 89, 89, 89,
	89, 89, -415, -415, -415, 89, 89, -415, 89, -415,
	89, -415, -397, 687, 419, -196, -195, -193, 76, 246,
	77, -414, -300, -415, -157, -259, -260, -259, -201, -292,
	97, 106, -235, -166, -168, 16, -136, -214, 90, 89,
	-328, -239, -245, -278, -292, 91, 181, -330, 181, -330,
	373, 374, -231, 225, -197, 17, -200, 34, 59, -29,
	-414, -414, 34, 89, -185, -187, -186, -188, 68, 72,
	74, 69, 70, 71, 75, -305, 27, -31, -167, -31,
	-414, -189, -182, -416, 16, 79, -416, 89, 225, -269,
	-272, 421, 418, 424, -382, 91, -110, 89, -355, -342,
	-236, -140, 42, -335, 380, -328, 587, -328, -337, 91,
	-337, 97, 97, 97, 90, -49, -44, -45, 35, 83,
	-362, -349, 91, 41, -349, -349, -292, 90, -232, -139,
	-189, 145, 78, -366, -366, -366, -298, -2, 726, 732,
	139, 88, 385, 20, -253, 89, 90, -217, 304, 90,
	-112, -292, 90, 88, -347, -347, -292, -414, 242, 33,
	33, 670, 626, 618, -59, -217, -216, -382, -329, 725,
	724, 90, 244, 302, -144, 438, -141, 91, 92, -189,
	-189, -189, -189, -189, 234, 231, 408, -406, 314, -406,
	287, 245, -182, -189, 89, -84, 261, 256, -303, -303,
	35, -189, 418, 699, 697, -145, 144, 266, 266, -161,
	-153, -153, -118, -118, -150, -312, 181, 346, 265, 344,
	340, 360, 351, 378, 342, 379, 337, 336, 335, -312,
	-310, -150, -208, -133, -145, -145, 152, -145, 150, -145,
	-415, -415, -415, -415, -415, -228, -145, -145, -145, -415,
	181, 346, 16, -145, -310, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-379, -145, -208, -145, -208, -145, -145, -145, -145, -145,
	-380, -380, -380, -380, -380, -208, -208, -208, -208, -145,
	-414, -292, -97, -96, -95, 653, 246, -94, -163, -97,
	-163, 224, -145, 224, 224, 224, -145, -132, -294, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -193,
	-343, -343, -343, -263, 89, -274, 24, 16, 59, 59,
	-166, -197, -167, -136, -292, -242, 680, -248, 48, -246,
	-247, 49, -243, 50, 58, -330, -330, 172, -233, -145,
	-264, 78, -265, -273, -216, -211, -213, -212, -414, -252,
	-415, -292, -263, -265, -169, -170, -170, -169, -170, 68,
	68, 68, 73, 68, 73, 68, -186, -298, -415, -145,
	-301, 79, -167, -167, -191, -298, 172, 418, 422, 423,
	-355, -404, 120, 145, 33, 78, 376, 102, -402, 180,
	615, 665, 670, 626, 619, 660, -403, 248, 138, 139,
	260, 27, 43, 90, 89, 90, 89, 90, 90, 89,
	-286, -285, -45, -44, -349, -349, 97, -382, 91, 91,
	244, 28, -189, 78, 78, 78, -113, 730, 97, 88,
	-3, 83, -145, 88, 21, -338, -216, -373, -324, -374,
	-325, -326, -5, -6, -350, -116, 59, 102, -63, 46,
	243, 710, 711, 128, -414, 723, -365, -253, -369, -371,
	-189, -149, -414, -160, -147, -146, -148, -154, 170, 171,
	265, 342, 343, -217, -189, -138, 293, 301, 88, -142,
	93, -385, 79, 284, 376, 284, 91, -407, 315, 91,
	-407, -189, -84, -49, -189, -281, -281, 35, -382, -415,
	-161, -153, -153, -125, 165, 580, -315, 586, -323, -323,
	-323, -333, -323, 332, -323, 332, -323, -415, -415, -415,
	89, -415, 24, -415, -145, 89, -121, 476, 89, 89,
	-415, 88, 88, -145, -415, -415, -415, 89, -415, -415,
	-415, -415, -415, -415, -415, -415, -415, -415, -415, -415,
	-415, 89, -415, 89, -415, 89, -415, 89, -415, 89,
	-415, 89, -415, 89, -415, 89, -415, 89, -415, 89,
	-415, 89, -415, 89, -415, 89, -415, 89, -415, 89,
	-415, 89, -415, -415, 89, -415, -415, -415, 89, -415,
	89, -415, 89, -415, -415, -415, 89, -313, 671, -415,
	-415, -415, -415, -415, -415, -415, -415, -415, -415, -415,
	-93, -293, -292, -94, 635, 635, -415, -94, -225, 89,
	-150, -415, -150, -150, -150, -415, -415, -415, 89, -415,
	89, 89, -415, 89, -415, 89, -415, -415, -415, -415,
	89, -194, 24, -194, -194, -415, -259, -189, -197, -226,
	18, -239, 53, 352, -250, -249, 57, 49, -247, 21,
	51, 21, 32, -264, 89, 153, 89, -415, -415, 89,
	59, 225, -415, -197, -180, -179, 78, 79, -181, 78,
	-179, 68, 68, -254, 89, -262, -167, -197, -197, 225,
	120, -414, -149, 14, 91, 91, -382, -401, 714, 715,
	33, 97, -349, -349, 139, 139, -189, 88, -328, 91,
	-328, 97, 97, 33, 84, 85, 86, 33, 80, 81,
	82, -189, -189, -189, -189, -370, 88, 21, -145, 88,
	153, 90, -253, -253, 280, 165, -349, 708, 286, 286,
	-349, -349, -349, -115, -114, 730, 90, -415, 89, -336,
	580, 583, -145, -155, -155, -254, 90, -378, 580, -384,
	-292, -292, -292, -292, 97, 99, -415, 578, 75, 581,
	-415, -328, -145, -145, -145, -233, 91, -145, -145, 97,
	97, -415, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -208, -145, -415, -177, -176, -178, 691, 120,
	33, -312, -415, -210, 278, -100, -99, -98, 16, -415,
	-145, -118, -118, -118, -118, -145, -145, -145, -145, -145,
	-145, -414, 68, 20, 18, -414, -414, -301, -226, -227,
	19, 21, -240, 55, -238, 54, -238, -249, 21, 21,
	91, 21, 91, 139, -273, -145, -213, 59, -29, -292,
	-211, -292, -228, -145, 88, -145, -157, -197, -197, -145,
	-203, 500, 502, 503, 504, 501, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 515, 505, 516, 477, 478,
	479, 109, 111, 110, 480, 481, 482, 346, 528, 529,
	523, 526, 527, 525, 524, 361, 362, 483, 546, 547,
	551, 550, 548, 549, 552, 555, 556, 557, 558, 559,
	560, 562, 561, 553, 554, 531, 530, 532, 533, 534,
	535, 536, 537, 539, 538, 540, 541, 542, 543, 544,
	545, 563, 564, 565, 566, 567, 569, 568, 573, 572,
	570, 571, 575, 574, 484, 485, 112, 113, 114, 115,
	116, 117, 118, 486, 489, 487, 490, 491, 492, 497,
	498, 493, 494, 495, 496, 499, 372, 370, 371, 367,
	366, 365, 425, 430, 431, 433, 517, 518, 519, 520,
	521, 522, 672, 673, 674, 675, 676, 677, 678, 679,
	91, 91, 88, -145, 90, 90, -254, -369, -60, 90,
	-255, -253, 97, 90, 281, -212, -414, 91, -349, -349,
	-349, 97, 97, -300, -415, 89, -292, -403, -371, 584,
	584, -415, 27, -377, -376, -294, 88, 79, 64, 579,
	582, -415, -415, 89, -415, -415, -415, 90, 90, -415,
	-415, -415, -415, -415, -415, -415, -415, -415, -415, -415,
	-415, -415, -415, -415, -415, -415, -415, -415, -415, -415,
	-415, 89, -415, -176, -178, -415, 78, -157, -228, 21,
	-97, 303, 305, -97, -415, -415, -415, -415, -415, 89,
	-415, -415, 89, -415, 89, -415, -415, -256, -415, -292,
	248, 21, 21, -256, -256, -196, -227, -107, -106, -105,
	609, -145, -208, -241, 56, 78, 123, 91, 91, 91,
	14, -211, 225, -233, -253, -174, 385, -228, -415, -253,
	90, 27, 90, 732, 139, 90, -212, -124, -414, 277,
	-300, 91, 91, -114, -117, -29, 89, 153, -253, -189,
	64, -145, -208, -415, 78, 591, 691, -92, -91, -88,
	702, 728, -208, -94, -94, -145, -145, -145, 89, -415,
	-415, -415, -107, 89, -104, -103, -292, 78, 123, -265,
	-292, 90, -415, -414, -233, 90, -237, -29, 88, -3,
	277, -324, -374, -325, -326, -5, -6, -350, -82, 580,
	-376, -354, -298, -294, 91, 97, 90, 580, -415, -415,
	-90, 147, 700, 668, -155, 224, -415, 89, -415, 89,
	-415, 89, -292, 248, -105, 89, 27, -301, -175, -173,
	-292, 632, -394, -393, 576, -404, -400, 120, 145, 102,
	-402, 670, 626, 129, 130, -82, -145, 88, -415, -83,
	292, 687, 225, -385, 581, -90, 701, 646, 621, 646,
	621, -150, -145, -145, -145, -103, -414, -415, 89, 24,
	-316, -62, 643, -391, -392, 78, -395, 391, 642, 663,
	120, 91, 90, -253, 253, -299, -378, 582, 144, -118,
	-415, 89, -415, 89, -415, -93, -173, 639, -329, -157,
	-392, 78, -391, 78, 15, 14, -4, 731, 90, 294,
	-90, 646, 621, -145, -145, -415, -61, 28, -174, -390,
	261, 256, 259, 34, -390, 97, -4, -415, -415, 643,
	255, 33, 120, -157, -177, -176, -176,
}

var yyDef = [...]int{
	881, -2, -2, 883, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 76, 78, 79, 881, 881, 881, 0, 881, 0,
	0, 881, -2, -2, 881, 1618, 0, 881, 0, 0,
	0, -2, 796, 802, 0, 811, -2, 0, 0, 881,
	881, 2243, 2243, 876, 0, 0, 0, 0, 0, 881,
	881, 881, 881, 1623, 1484, 52, 881, 0, 91, 92,
	831, 832, 833, 67, 0, 2241, 882, 1, 3, 77,
	81, 0, 0, 0, 60, 1493, 0, 0, 84, 0,
	0, 885, 888, 0, 0, 1601, 881, 881, 0, 132,
	133, 0, 0, 0, -2, 136, -2, 165, 166, 167,
	0, 172, 607, 530, 582, 528, 567, -2, 516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 533, 405, 405, 0, 0, -2, 516, 516, 516,
	1603, 0, 0, 0, 564, 467, 405, 405, 405, 0,
	405, 405, 405, 405, 0, 0, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 1511, 171, 1619, 1616, 1617, 1777, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818,
	1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828,
	1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838,
	1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848,
	1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858,
	1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868,
	1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878,
	1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888,
	1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898,
	1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908,
	1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918,
	1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928,
	1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938,
	1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948,
	1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958,
	1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968,
	1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978,
	1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988,
	1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
	1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
	2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
	2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028,
	2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038,
	2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048,
	2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058,
	2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068,
	2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078,
	2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088,
	2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098,
	2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108,
	2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118,
	2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128,
	2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138,
	2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148,
	2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158,
	2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168,
	2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178,
	2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188,
	2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198,
	2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208,
	2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218,
	2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228,
	2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238,
	2239, 2240, 0, 1595, 0, 720, 986, 0, 0, 785,
	785, 0, 785, 785, 785, 785, 0, 0, 0, 734,
	0, 0, 0, 0, 782, 0, 750, 751, 0, 782,
	0, 757, 788, 0, 0, 763, 785, 785, 766, 2244,
	0, 2244, 2244, 1586, 0, 779, 777, 791, 792, 42,
	795, 798, 799, 800, 801, 804, 0, 815, 818, 1612,
	1613, 0, 820, 827, 844, 845, 0, 877, 878, 47,
	1140, 0, 1008, 0, 1014, -2, 1029, 1046, 1047, 1048,
	1049, 1050, 1052, 1053, 1054, 0, 0, 0, 0, 1059,
	1060, 0, 0, 0, 0, 0, 1121, 0, 0, 0,
	0, 1457, 0, 0, 1419, 1419, 1155, 1419, 1419, 1421,
	1421, 1421, 1829, 1967, 1975, 2151, 1790, 1796, 1797, 1798,
	2097, 2098, 2099, 2100, 2188, 2189, 2193, 1891, 1785, 2164,
	2165, 0, 2240, 1928, 1936, 1937, 1961, 2061, 2174, 1808,
	1956, 2025, 1888, 1910, 1911, 2043, 2044, 1932, 1933, 1914,
	2103, 2105, 2121, 2122, 2107, 2109, 2118, 2124, 2129, 2108,
	2120, 2125, 2138, 2142, 2145, 2146, 2147, 2115, 2113, 2126,
	2130, 2132, 2134, 2140, 2143, 2116, 2114, 2127, 2131, 2133,
	2135, 2141, 2144, 2102, 2106, 2110, 2119, 2137, 2117, 2136,
	2111, 2123, 2128, 2139, 2112, 2104, 1926, 1929, 1917, 1918,
	1920, 1922, 1927, 1934, 1940, 1919, 1939, 1938, 0, 1915,
	1916, 1921, 1931, 1935, 1923, 1924, 1925, 1930, 1941, 1981,
	1980, 1979, 2024, 1952, 2023, 0, 0, 0, 0, 0,
	1780, 1834, 1835, 2148, 1341, 1342, 1343, 1344, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 1470, 1471, 46,
	1139, 1582, 1421, 1421, 1421, 1421, 1421, 1421, 1081, 1082,
	1083, 1084, 1085, 1109, 1110, 1116, 1117, 2038, 2039, 2040,
	2041, 1872, 2183, 1880, 1881, 2020, 2021, 1893, 1894, 2214,
	2215, -2, -2, -2, 238, 239, 240, 241, 242, 243,
	244, 245, 0, 1833, 2162, 2163, 234, 0, 0, 302,
	303, 299, 300, 301, 1123, 1124, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274, 275, 276, 277, 278,
	279, 280, 281, 282, 283, 284, 285, 286, 287, 288,
	289, 290, 291, 292, 293, 294, 295, 296, 2243, 0,
	854, 0, 0, 0, 0, 0, 0, 1624, 1625, 1493,
	0, 0, 1485, 1484, 65, 0, 881, -2, 0, 0,
	0, 0, 49, 0, 54, 943, 884, 83, 82, 1533,
	0, 0, 0, 61, 1494, 69, 71, 73, 75, 1495,
	0, 886, 887, 889, 0, 919, 923, 0, 0, 0,
	1602, 1601, 1601, 108, 0, 0, 109, 129, 130, 131,
	0, 0, 115, 116, 1588, 1589, 45, 0, 0, 183,
	184, 0, 43, 432, 0, 179, 0, 425, 364, 0,
	1511, 0, 0, 0, 0, 0, 881, 0, 1596, 160,
	161, 168, 169, 170, 405, 405, 405, 579, 0, 0,
	171, 171, 537, 538, 539, 0, 0, -2, 430, 0,
	517, 0, 0, 419, 419, 423, 421, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 556, 0, 557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 668, 0,
	406, 0, 577, 578, 468, 0, 0, 0, 0, 0,
	0, 0, 0, 1604, 1605, 0, 554, 555, 0, 0,
	0, 405, 405, 0, 0, 0, 0, 405, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 1524, 0,
	0, 0, -2, 0, 712, 0, 0, 0, 1597, 1597,
	0, 719, 0, 721, 0, 724, 0, 0, 725, 0,
	782, 782, 780, 781, 727, 728, 729, 730, 785, 0,
	0, 414, 415, 416, 782, 785, 0, 785, 785, 785,
	785, 782, 782, 782, 785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2244, 788, 785, 0, 758, 0,
	759, 760, 761, 764, 765, 767, 2245, 2246, 1614, 1615,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705,
	1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735,
	1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, 2244, 2244, 771, 775, 1587, 797, 803, 805, 806,
	0, 0, 816, 819, 838, 51, 1879, 826, 51, 828,
	829, 830, 856, 857, 862, 0, 0, 0, 0, 868,
	869, 870, 0, 0, 873, 874, 875, 0, 0, 0,
	0, 0, 1006, 0, 0, 1129, 1130, 1131, 1132, 1133,
	1134, 1135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1030, 1031, 0, 0, 0, 1055, 1056, 1057, 1058,
	1061, 0, 1072, 0, 1074, 1466, -2, 0, 0, 0,
	1066, 1067, 0, 0, 0, 0, 0, 0, 0, 1458,
	0, 0, 1153, 0, 1154, 1156, 1157, 1158, 0, 1159,
	1160, 893, 893, 893, 893, 893, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 893, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 903, 0, 0, 903, 903, 0, 0,
	226, 227, 228, 229, 230, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 247, 248, 249, 250, 251, 304, 252, 253, 254,
	1139, 0, 0, 0, 48, 846, 847, 0, 969, 1607,
	0, 0, 899, 0, 1622, 59, 68, 70, 72, 74,
	1493, 63, 1493, 0, 905, 0, 0, -2, -2, 906,
	912, 913, 914, 915, 916, 56, 2242, 57, 0, 80,
	0, 50, 0, 0, 0, 0, 378, 1536, 0, 0,
	1486, 1487, 1490, 0, 920, 1973, 924, 0, 926, 927,
	0, 0, 106, 0, 985, 0, 0, 0, 117, 0,
	119, 120, 0, 0, 0, 389, 1590, 1591, 1592, -2,
	412, 0, 389, 373, 312, 313, 314, 364, 316, 364,
	364, 364, 364, 378, 378, 378, 378, 347, 348, 349,
	350, 351, 0, 0, 333, 364, 364, 364, 364, 354,
	355, 356, 357, 358, 359, 360, 361, 317, 318, 319,
	320, 321, 322, 323, 324, 325, 366, 366, 366, 366,
	366, 370, 370, 0, 44, 0, 393, 0, 1490, 0,
	0, 1524, 1599, 1609, 0, 0, 0, 1599, 138, 0,
	0, 0, 580, 618, 531, 568, 581, 0, 534, 535,
	-2, 0, 0, 516, 0, 518, 0, 413, 0, -2,
	0, 423, 0, 419, 423, 420, 423, 411, 424, 558,
	559, 560, 0, 562, 563, 648, 955, 0, 0, 0,
	0, 0, 654, 655, 656, 0, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 569, 570, 571, 572,
	573, 574, 575, 576, 0, 0, 0, 0, 518, 0,
	565, 0, 0, 469, 470, 471, 0, 0, 474, 475,
	476, 477, 0, 0, 480, 481, 482, 972, 973, 483,
	484, 509, 510, 511, 485, 486, 487, 488, 489, 490,
	491, 503, 504, 505, 506, 507, 508, 492, 493, 494,
	495, 496, 497, 500, 0, 153, 1515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1597, 0, 0, 0, 0, 902, 987, 1620,
	1621, 0, 0, 786, 787, 0, 417, 418, 785, 785,
	731, 772, 0, 785, 735, 773, 736, 738, 737, 739,
	752, 753, 785, 742, 783, 784, 743, 744, 745, 746,
	747, 748, 749, 768, 754, 755, 756, 789, 0, 793,
	794, 769, 770, 0, 0, 809, 810, 0, 817, 841,
	839, 840, 842, 834, 835, 836, 837, 0, 843, 0,
	0, 859, 102, 864, 865, 866, 867, 879, 872, 1141,
	1003, 1004, 1005, 0, 1007, 1011, 0, 1125, 1127, 1013,
	1009, 1015, 1136, 1137, 1138, 0, 0, 0, 0, 0,
	0, 1019, 1023, 1027, 1032, 1033, 1034, 1035, 1036, 0,
	1037, 0, 1040, 1041, 1042, 1043, 1044, 1045, 1051, 1434,
	1435, 1436, 1070, 305, 306, 0, 1071, 0, 0, 0,
	0, 0, 0, 0, 0, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1140, 0, 917, 0, 0,
	1464, 1461, 0, 0, 0, 1420, 1422, 0, 0, 0,
	894, 895, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 0, 0, 1437,
	0, 0, 0, 0, 0, 1457, 0, 1076, 1077, 1078,
	0, 0, 0, 0, 0, 0, 1199, 0, 0, 0,
	0, 1608, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1345, 1346, 1347, 1348, 41, 0, 0,
	0, 0, 0, 0, 0, 904, 1468, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1370, 0, 0, 0, 0, 0, 0,
	1580, 0, 0, 849, 850, 852, 0, 989, 0, 970,
	0, 0, 855, 0, 898, 0, 901, 62, 64, 910,
	911, 0, 928, 907, 58, 53, 0, 0, 947, 1534,
	378, 1556, 0, 387, 387, 384, 1496, 1497, 0, 1489,
	1491, 1492, 85, 925, 921, 0, 1001, 0, 0, 984,
	0, 931, 933, 934, 935, 967, 0, 938, 939, 0,
	0, 0, 0, 0, 104, 986, 110, 0, 118, 0,
	0, 123, 124, 111, 112, 113, 114, 0, 607, -2,
	464, 185, 187, 188, 189, 180, -2, 376, 374, 375,
	315, 378, 378, 341, 342, 343, 344, 345, 346, 0,
	0, 334, 335, 336, 337, 326, 0, 327, 328, 329,
	368, 0, 330, 331, 0, 332, 431, 0, 1498, 394,
	395, 397, 405, 0, 400, 401, 0, 405, 405, 0,
	426, 427, 0, 1490, 1515, 0, 0, 0, 1610, 1609,
	1609, 1609, 0, 173, 174, 175, 176, 177, 178, 643,
	0, 0, 619, 641, 642, 171, 0, 0, 181, 520,
	519, 0, 675, 0, 429, 0, 0, 423, 423, 408,
	409, 561, 0, 0, 650, 651, 652, 653, 0, 0,
	0, 547, 458, 0, 548, 549, 518, 520, 0, 0,
	389, 472, 473, 478, 479, 498, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 594, 595, 596,
	599, 601, 522, 605, 598, 600, 602, 522, 606, 1512,
	1513, 1514, 0, 0, 713, 0, 0, 455, 100, 1598,
	718, 722, 723, 782, 741, 774, 782, 733, 740, 762,
	807, 808, 813, 821, 822, 823, 824, 825, 863, 0,
	0, 0, 0, 871, 0, 0, 1012, 1126, 1128, 1016,
	0, 1020, 1024, 1028, 0, 0, 0, 0, 0, 0,
	1075, 1073, 1468, 0, 0, 0, 1122, 0, 0, 0,
	1144, 1145, 0, 0, 0, 1462, 0, 0, 1151, 0,
	1423, 1161, 0, 0, 0, 0, 0, 1167, 1168, 1169,
	1170, 1171, 1172, 1173, 1174, 1175, 1176, 1484, 1178, 0,
	0, 0, 0, 0, 1183, 1184, 1185, 1186, 1187, 0,
	1189, 0, 1190, 0, 0, 0, 0, 1197, 1198, 1200,
	0, 0, 1203, 1204, 0, 1206, 0, 1208, 1209, 1210,
	1211, 1212, 1213, 0, 1215, 0, 1217, 1218, 1219, 0,
	1221, 0, 1223, 1224, 0, 1226, 0, 1228, 0, 1231,
	0, 1234, 0, 1237, 0, 1240, 0, 1243, 0, 1246,
	0, 1249, 0, 1252, 0, 1255, 0, 1258, 0, 1261,
	0, 1264, 0, 1267, 0, 1270, 0, 1273, 0, 1276,
	1277, 1278, 0, 1280, 0, 1282, 0, 1285, 1286, 0,
	1288, 0, 1291, 0, 1294, 0, 0, 1295, 0, 0,
	0, 1299, 0, 0, 0, 0, 1308, 1309, 1310, 1311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1322, 1323, 1324, 1325, 1326, 1327, 0, 1329, 0, 1104,
	0, 0, 1104, 0, 0, 0, 0, 0, 1142, 903,
	0, 1424, 1425, 1426, 1427, 1428, 0, 0, 0, 0,
	0, 0, 1368, 1369, 1371, 0, 0, 1374, 0, 1376,
	0, 1581, 848, 851, 853, 941, 990, 991, 0, 0,
	0, 0, 971, 1606, 896, 897, 900, 949, 0, 1472,
	0, 0, 928, 1001, 929, 0, 908, 55, 944, 0,
	1538, 1537, 1550, 1563, 387, 387, 381, 382, 388, 383,
	385, 386, 1488, 0, 1493, 0, 1574, 0, 0, 1566,
	0, 0, 0, 0, 0, 0, 0, 0, 974, 0,
	0, 977, 0, 0, 0, 0, 968, 939, 0, 940,
	0, -2, 0, 0, 98, 99, 0, 0, 0, 121,
	122, 0, 0, 128, 390, 391, 162, 171, 466, 186,
	439, 0, 0, 311, 377, 338, 339, 340, 0, 362,
	0, 0, 0, 0, 460, 134, 1502, 1501, 405, 405,
	396, 0, 399, 0, 0, 0, 1611, 365, 428, 0,
	152, 0, 0, 0, 0, 0, 158, 613, 0, 0,
	620, 0, 0, 0, 529, 0, 540, 541, 0, 647,
	-2, 709, 393, 0, 407, 410, 956, 0, 0, 542,
	0, 545, 546, 459, 520, 551, 552, 566, 553, 501,
	502, 499, 0, 0, 1525, 1526, 1531, 1529, 1530, 139,
	587, 589, 588, 592, 0, 0, 0, 524, 0, 524,
	585, 0, 455, 1498, 0, 717, 456, 457, 785, 785,
	858, 103, 0, 861, 0, 0, 0, 0, 0, 1017,
	1021, 1025, 1038, 1039, 1429, 1455, 364, 364, 1442, 364,
	370, 1445, 364, 1447, 364, 1450, 364, 1453, 1454, 0,
	0, 1068, 0, 918, 0, 0, 1150, 1465, 0, 0,
	1162, 1163, 1164, 1165, 1166, 1459, 0, 0, 0, 1182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 151, 0, 0, 0, 0, 0, 0, 1379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1099, 1103, 0, 1105, 1106, 0, 0, 1331, 0, 0,
	1349, 0, 0, 0, 0, 0, 0, 0, 1469, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 992,
	997, 997, 997, 0, 0, 0, 1593, 1594, 1473, 1474,
	1001, 1475, 930, 909, 948, 1556, 0, 1549, 0, -2,
	1558, 0, 0, 0, 1564, 379, 380, 922, 86, 1002,
	89, 0, 1574, 1583, 0, 1565, 1576, 1578, 0, 0,
	0, 1570, 0, 1001, 932, 963, 965, 0, 960, 975,
	976, 978, 0, 980, 0, 982, 983, 943, 937, 0,
	106, 0, 1001, 1001, 105, 0, 988, 125, 126, 127,
	465, 190, 195, 0, 0, 0, 200, 0, 202, 0,
	0, 0, 207, 208, 405, 405, 440, 0, 308, 310,
	0, 0, 193, 378, 0, 378, 0, 369, 371, 0,
	441, 461, 1499, 1500, 0, 0, 398, 402, 403, 404,
	0, 1600, 154, 0, 0, 0, 616, 0, 644, 0,
	0, 0, 0, 0, 0, 182, 521, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 0, 405, 0, 0,
	0, 405, 405, 405, 0, 701, 392, 0, 0, 672,
	669, 543, 0, 224, 225, 232, 233, 235, 0, 0,
	0, 0, 0, 550, 943, 1516, 1517, 1518, 0, 1528,
	1532, 142, 0, 0, 0, 0, 597, 603, 0, 523,
	604, 714, 715, 716, 101, 726, 732, 860, 880, 1010,
	1018, 1022, 1026, 0, 0, 0, 0, 1456, 1440, 378,
	1443, 1444, 1446, 1448, 1449, 1451, 1452, 1064, 1065, 1069,
	0, 1147, 0, 1149, 1463, 0, 1493, 0, 0, 0,
	1181, 0, 0, 0, 1192, 1191, 1193, 0, 1195, 1196,
	1201, 1202, 1205, 1207, 1214, 1216, 1220, 1222, 1225, 1227,
	1229, 0, 1232, 0, 1235, 0, 1238, 0, 1241, 0,
	1244, 0, 1247, 0, 1250, 0, 1253, 0, 1256, 0,
	1259, 0, 1262, 0, 1265, 0, 1268, 0, 1271, 0,
	1274, 0, 1279, 1281, 0, 1284, 1287, 1289, 0, 1292,
	0, 1296, 0, 1298, 1300, 1301, 0, 0, 0, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1328,
	0, 1097, 1100, 1330, 1107, 1108, 1113, 1333, 0, 0,
	0, 1336, 0, 0, 0, 1340, 1143, 1351, 0, 1356,
	0, 0, 1362, 0, 1366, 0, 1372, 1373, 1375, 1377,
	0, 0, 0, 0, 0, 969, 950, 66, 1475, 1477,
	0, 1543, 1541, 1541, 1551, 1552, 0, 0, 1559, 0,
	0, 0, 0, 90, 0, 0, 0, 1579, 0, 0,
	0, 0, 107, 1484, 957, 964, 0, 0, 958, 0,
	959, 979, 981, 936, 0, 1001, 1001, 96, 97, 0,
	196, 0, 198, 0, 201, 203, 204, 205, 211, 212,
	213, 206, 0, 0, 307, 309, 0, 0, 352, 363,
	353, 0, 0, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 943, 155, 156, 157, 608, 0, 618, 0, 945,
	0, 611, 0, 532, 0, 0, 0, 405, 405, 405,
	0, 0, 0, 0, 686, 0, 0, 649, 0, 657,
	0, 0, 0, 236, 237, 0, 1527, 586, 0, 140,
	141, 0, 0, 591, 525, 526, 1062, 0, 0, 0,
	1063, 1441, 0, 0, 0, 0, 1460, 0, 0, 0,
	0, 1188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1304, 0, 0, 0, 638, 639,
	0, 1380, 1102, 1484, 0, 1104, 1114, 1115, 0, 1104,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 998, 0, 0, 0, 0, 989, 1477, 1482,
	0, 0, 1546, 0, 1539, 1542, 1540, 1553, 0, 0,
	1560, 0, 1562, 0, 1584, 1585, 1577, 0, 1569, 1572,
	1568, 1571, 1493, 961, 0, 966, 0, 1484, 95, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 210, 0, 0, 367, 372, 0, 0, 0, 609,
	0, 946, 621, 612, 0, 699, 0, 703, 0, 0,
	0, 706, 707, 708, 685, 0, 689, 433, 673, 670,
	671, 544, 0, 143, 144, 0, 0, 0, 1430, 0,
	1433, 1146, 1148, 0, 1177, 1179, 1180, 1438, 1439, 1194,
	1230, 1233, 1236, 1239, 1242, 1245, 1248, 1251, 1254, 1257,
	1260, 1263, 1266, 1269, 1272, 1275, 1283, 1290, 1293, 1297,
	1302, 0, 1305, 0, 0, 1306, 0, 640, 1093, 0,
	0, 1111, 1112, 0, 1335, 1337, 1338, 1339, 1352, 0,
	1357, 1358, 0, 1363, 0, 1367, 1378, 0, 994, 951,
	952, 999, 1000, 0, 0, 942, 1482, 88, 1483, 1480,
	0, 1478, 1476, 1535, 0, 1544, 1545, 1554, 1555, 1561,
	0, 1567, 0, 93, 0, 0, 0, 1493, 197, 0,
	216, 0, 617, 0, 620, 610, 697, 698, 0, 710,
	702, 704, 705, 687, -2, 1519, 0, 0, 0, 593,
	1431, 0, 0, 1307, 0, 636, 637, 1101, 1094, 0,
	1079, 1080, 1098, 1332, 1334, 0, 0, 0, 0, 993,
	995, 996, 87, 0, 1479, 1119, 0, 1547, 1548, 1575,
	1573, 962, 969, 0, 94, 446, 439, 1519, 0, 0,
	0, 690, 691, 692, 693, 694, 695, 696, 583, 1521,
	145, 146, 0, 513, 514, 515, 139, 0, 1152, 1303,
	1095, 0, 0, 0, 0, 0, 1353, 0, 1359, 0,
	1364, 0, 953, 954, 1481, 0, 0, 622, 0, 624,
	0, -2, 434, 447, 0, 191, 217, 218, 0, 0,
	221, 222, 223, 214, 215, 135, 0, 0, 711, 0,
	1522, 1523, 0, 142, 0, 0, 1086, 1087, 1088, 1089,
	1091, 0, 0, 0, 0, 1120, 1099, 623, 0, 0,
	389, 0, 633, 435, 436, 0, 442, 443, 444, 445,
	219, 220, 645, 0, 0, 512, 590, 1432, 0, 0,
	1354, 0, 1360, 0, 1365, 0, 625, 626, 634, 0,
	437, 0, 438, 0, 0, 0, 614, 0, 645, 1520,
	1096, 1090, 1092, 0, 0, 1118, 0, 635, 631, 448,
	450, 451, 0, 0, 449, 646, 615, 1355, 1361, 0,
	452, 453, 454, 627, 628, 629, 630,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 146, 3, 3, 3, 175, 167, 3,
	88, 90, 172, 170, 89, 171, 225, 173, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 733,
	154, 153, 155, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 177, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 142, 3, 178,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 143, 144, 145,
	147, 148, 149, 150, 151, 152, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 168, 169, 174,
	176, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:599
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:612
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:613
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:617
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:656
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:662
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:668
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:673
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:677
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:683
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:687
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:693
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:699
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:705
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:709
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:714
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:718
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:724
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:728
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:734
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:744
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:782
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:788
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:795
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:801
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:808
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:812
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:818
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:822
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:826
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:830
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:834
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:838
		{
			yyLOCAL = &Except{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:842
		{
			yyLOCAL = &Except{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:846
		{
			yyLOCAL = &Except{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:850
		{
			yyLOCAL = &Except{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:856
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:860
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:865
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:869
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:875
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:879
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:884
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:890
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:896
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:903
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:909
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:917
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:921
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:927
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:939
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:951
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:955
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:961
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:967
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:971
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:975
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:979
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:984
		{
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:985
		{
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:989
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:993
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:999
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1003
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:1009
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1013
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1018
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1022
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1028
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1034
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1038
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1044
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1048
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1052
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1056
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1062
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1066
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1070
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1076
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1080
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1086
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1090
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1096
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1100
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1104
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1110
		{
			yyVAL.str = RepeatableReadStr
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1114
		{
			yyVAL.str = ReadCommittedStr
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1118
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1122
		{
			yyVAL.str = SerializableStr
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1128
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1132
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1136
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1142
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1148
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1155
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1164
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1168
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1175
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1179
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1184
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1194
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1199
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1204
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1210
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1215
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1226
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1230
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1236
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1240
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1246
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 152:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1252
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1259
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1266
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1271
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1276
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1281
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1288
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1295
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1306
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1313
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1317
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1323
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1327
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1331
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1335
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1339
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1343
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 171:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1349
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1353
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1359
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1363
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1369
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1373
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1379
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1383
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1389
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1393
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1399
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1403
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1409
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1414
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1419
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1423
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1428
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1432
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1436
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 190:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1447
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1456
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1465
		{
			yyVAL.str = ""
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1469
		{
			yyVAL.str = ""
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1478
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1482
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1488
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1494
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1499
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1505
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1510
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1515
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1520
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1525
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1529
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1534
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1538
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1543
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1549
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1555
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1559
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1565
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1569
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1573
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1579
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1583
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1588
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1592
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1597
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1603
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1609
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1614
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1619
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1625
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1633
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1640
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1644
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1648
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1652
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1656
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1660
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1670
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1677
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1681
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1695
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1699
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1703
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1707
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1711
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1715
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1719
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1723
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1727
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1731
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1735
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1739
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1744
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1748
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1752
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.str = Armscii8Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.str = ASCIIStr
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1766
		{
			yyVAL.str = Big5Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.str = UBinaryStr
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.str = Cp1250Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.str = Cp1251Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = Cp1256Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = Cp1257Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = Cp850Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.str = Cp852Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.str = Cp866Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.str = Cp932Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.str = Dec8Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.str = EucjpmsStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.str = EuckrStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = Gb18030Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = Gb2312Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = GbkStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = Geostd8Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.str = GreekStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.str = HebrewStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.str = Hp8Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.str = Keybcs2Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.str = Koi8rStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.str = Koi8uStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.str = Latin1Str
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.str = Latin2Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.str = Latin5Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.str = Latin7Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.str = MacceStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.str = MacromanStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.str = SjisStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.str = Swe7Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.str = Tis620Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.str = Ucs2Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.str = UjisStr
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.str = Utf16Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.str = Utf16leStr
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.str = Utf32Str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.str = Utf8mb3Str
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.str = Utf8mb4Str
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.str = Utf8mb3Str
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1932
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1936
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1940
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1946
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1950
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1954
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1960
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1964
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1970
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1974
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1978
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1982
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1988
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1999
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2078
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2084
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2092
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2096
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2100
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2104
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2108
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2114
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2118
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2124
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2128
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2132
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2136
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2140
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2144
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2148
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2152
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2156
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2160
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2172
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 353:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2177
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2191
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2195
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2203
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2211
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2217
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2222
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2227
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2231
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2236
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2240
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2249
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2253
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2260
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2264
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2270
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2278
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2282
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2286
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2291
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2295
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2300
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2304
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2308
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2316
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2321
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2326
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2331
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2336
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2342
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2346
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2351
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2355
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2359
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 392:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2365
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2370
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2374
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2380
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2384
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2390
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2394
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2399
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2403
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2407
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2411
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2415
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2419
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2425
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2429
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2435
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2439
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2443
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2447
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2451
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2456
		{
			yyVAL.str = ""
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2460
		{
			yyVAL.str = yyDollar[2].str
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2466
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2470
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2474
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2489
		{
			yyVAL.str = "key"
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2493
		{
			yyVAL.str = yyDollar[1].str
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2503
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2508
		{
			yyVAL.str = ""
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2512
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2518
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2522
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2528
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2532
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2538
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2542
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2548
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2552
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2558
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2564
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2568
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2572
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2576
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2580
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2585
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2589
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2595
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2601
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2607
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2611
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2615
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2620
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2624
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2630
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2636
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2642
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2646
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2650
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2654
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2658
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2663
		{
			yyVAL.str = ""
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2667
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2671
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2677
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2681
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2686
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2690
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2695
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2699
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2705
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2709
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2713
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2719
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2723
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2729
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2733
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2737
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2741
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2745
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2749
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2753
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2757
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2761
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2765
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2769
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2773
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2777
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2781
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2785
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2789
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2793
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2797
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2801
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2805
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2809
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2813
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2817
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2821
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2825
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2829
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2833
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2837
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2841
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2845
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2849
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2854
		{
			yyVAL.str = ""
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2858
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2862
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2881
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2885
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2889
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2898
		{
			yyVAL.str = ""
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2904
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2908
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2913
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2917
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2922
		{
			yyVAL.str = ""
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2926
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2931
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2935
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2939
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2944
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2948
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2952
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2956
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2960
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 532:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2964
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2970
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2974
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2978
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2984
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2988
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2992
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2996
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3000
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3004
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3012
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3016
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3020
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3025
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3030
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3034
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3038
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3042
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3046
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3050
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3054
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3058
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3062
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3066
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3070
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3074
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3078
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3082
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3086
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3090
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3094
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3098
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3102
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3106
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3112
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3116
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3122
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3126
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3130
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3134
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3138
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3142
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3146
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3150
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3154
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3158
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3164
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3171
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3178
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3185
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3191
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3201
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3208
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3215
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3227
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3237
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3241
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3245
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3258
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3268
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3272
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3283
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3290
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3297
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3304
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3312
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3318
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3325
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3331
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3338
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3344
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3361
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3368
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3375
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3379
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3388
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3396
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3405
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3412
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3420
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3424
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3433
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3444
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3448
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3453
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3457
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3462
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3466
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3472
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3478
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3484
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3488
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3494
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3498
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3504
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3510
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3516
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3522
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3528
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3532
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3536
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3540
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3546
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3552
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3558
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3562
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3566
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3572
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3576
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3581
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3585
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3590
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3594
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3600
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3604
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3608
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3612
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3616
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3620
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3624
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3628
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3632
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3636
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3640
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3644
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3648
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3652
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3656
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3660
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3664
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3668
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3672
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3676
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3680
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3684
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3689
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3693
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3697
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3703
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3707
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3713
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3718
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3722
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3727
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3732
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3737
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3742
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3747
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3753
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3759
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3764
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3770
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3776
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3780
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3786
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3791
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3795
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3800
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3805
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3810
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3815
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3821
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3827
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3834
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3841
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3848
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3856
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3860
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3866
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3872
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3878
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3884
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3890
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3896
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3902
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3908
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3914
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3918
		{
			yyVAL.str = ""
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3924
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3930
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3934
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 715:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3940
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3944
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3953
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3957
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3963
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3967
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3973
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3979
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3983
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3989
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3993
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4005
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4009
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4013
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4017
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4021
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4025
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4029
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4033
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4037
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4041
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4045
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4049
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4053
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4069
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4073
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4077
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4085
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4089
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4093
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4097
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4101
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4105
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4109
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4117
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4121
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4125
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4129
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4133
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4137
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4141
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4145
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4149
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4153
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4157
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4164
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4168
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4172
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4176
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4180
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4184
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4188
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4192
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4196
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4202
		{
			yyVAL.str = ""
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4206
		{
			yyVAL.str = "extended "
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4212
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4216
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4222
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4226
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4232
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4236
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4240
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4246
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4250
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4254
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4260
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4264
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4270
		{
			yyVAL.empty = struct{}{}
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4274
		{
			yyVAL.empty = struct{}{}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4278
		{
			yyVAL.empty = struct{}{}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4284
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4288
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4294
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4298
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4302
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4309
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4313
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4317
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4321
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4328
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4332
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4337
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4341
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4347
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4351
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4357
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4361
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4365
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4372
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4378
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4382
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4387
		{
			yyVAL.empty = struct{}{}
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4389
		{
			yyVAL.empty = struct{}{}
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4392
		{
			yyVAL.empty = struct{}{}
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4394
		{
			yyVAL.empty = struct{}{}
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4398
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4404
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4409
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4413
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4417
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4421
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4425
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4429
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4433
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4438
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4442
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4446
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4450
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4456
		{
			yyVAL.str = yyDollar[1].str
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4460
		{
			yyVAL.str = yyDollar[1].str
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4464
		{
			yyVAL.str = yyDollar[1].str
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4470
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4474
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4478
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4482
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4487
		{
			yyVAL.str = ""
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4491
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4495
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4501
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4505
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4511
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4517
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4521
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4527
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4533
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4537
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4543
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4549
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4553
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4557
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4561
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4567
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4573
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4579
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4583
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4587
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4591
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4595
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4599
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4605
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4609
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4615
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4619
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4623
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4627
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4631
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4635
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4639
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4643
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4647
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4651
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4655
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4659
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4664
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4668
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4672
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4677
		{
			yyVAL.str = ""
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4681
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4686
		{
			setAllowComments(yylex, true)
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4690
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4696
		{
			yyVAL.strs = nil
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4700
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4706
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4710
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4714
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4720
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4724
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4729
		{
			yyVAL.str = ""
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4733
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4737
		{
			yyVAL.str = SQLCacheStr
		}
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4742
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4746
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4750
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4756
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4760
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4770
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4775
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4779
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4785
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4789
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4794
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4798
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4803
		{
			yyVAL.strs = nil
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4807
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4811
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4815
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 909:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4819
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4825
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4829
		{
			yyVAL.str = SQLCacheStr
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4833
		{
			yyVAL.str = DistinctStr
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4837
		{
			yyVAL.str = DistinctStr
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4841
		{
			yyVAL.str = StraightJoinHint
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4845
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4849
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4855
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4859
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4865
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4869
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4873
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4877
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4882
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4886
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4890
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4897
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4902
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4906
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4912
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4918
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4922
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4932
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4936
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4940
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4944
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4950
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4954
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4960
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4964
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4969
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4973
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4978
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4982
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4988
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4992
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4998
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5002
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5008
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5012
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5016
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5020
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5026
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5030
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5043
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5047
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5051
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5055
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5061
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5063
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5067
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5069
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5073
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5075
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5078
		{
			yyVAL.empty = struct{}{}
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5080
		{
			yyVAL.empty = struct{}{}
		}
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5083
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5087
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5091
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5098
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5104
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5108
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5112
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5118
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5124
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5128
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5132
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5136
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5142
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5146
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5156
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5160
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5166
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5170
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5176
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5181
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5185
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5191
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5195
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 993:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5201
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5205
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5209
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5213
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5218
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5222
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5226
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5230
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5236
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5240
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5247
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5251
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5255
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5259
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5263
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5267
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5271
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5275
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5281
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5289
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5293
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5299
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5303
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5307
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5311
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5315
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5319
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5323
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5327
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5331
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: ILikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5335
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotILikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5339
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: ILikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5343
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotILikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5347
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5351
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5355
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5361
		{
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5364
		{
		}
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5370
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5374
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5378
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5382
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5386
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5390
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5394
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5398
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5402
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5406
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5410
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5414
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5418
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5422
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5426
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5432
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5436
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5440
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5444
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5448
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5452
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5456
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5460
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5464
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5468
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5472
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5476
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5480
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5484
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5488
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5492
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5496
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5500
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5504
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5508
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5516
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5520
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5524
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5528
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5532
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5538
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5542
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5548
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5552
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5558
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5562
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5566
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5572
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5576
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5583
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5587
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5591
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5595
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5599
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5605
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5609
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5613
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5617
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5621
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5625
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5629
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5634
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5638
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5644
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5648
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5653
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5657
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5662
		{
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5665
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5671
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5677
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5681
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5686
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5693
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5699
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5703
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5709
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5713
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5719
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5723
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5728
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5735
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5741
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5745
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5751
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5757
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5761
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5767
		{
			yyVAL.str = ""
		}
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5771
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5777
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5781
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5788
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5792
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5796
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5800
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5806
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5810
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5814
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5818
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5822
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5826
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5830
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5836
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5840
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5844
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5851
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5857
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5861
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5871
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5875
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5885
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5889
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5893
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5897
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5901
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5905
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5909
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5913
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5917
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5921
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5932
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5936
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5942
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5946
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5950
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5955
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5960
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5964
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5968
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5972
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5976
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5980
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5984
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5988
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5992
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5996
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6000
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6004
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6008
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6012
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6016
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6020
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6024
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6028
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6032
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6036
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6040
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6044
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6048
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6052
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6056
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6060
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6064
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6068
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6080
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6088
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6092
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6096
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6100
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6104
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6108
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6112
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6116
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6120
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6124
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6128
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6132
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6136
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6140
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6144
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6148
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6152
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6156
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6160
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6164
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6168
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6172
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6176
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6180
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6184
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6188
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6192
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6196
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6200
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6204
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6208
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6212
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6216
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6220
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6224
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6228
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6232
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6236
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6240
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6244
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6248
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6252
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6256
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6260
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6264
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6268
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6272
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6276
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6280
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6284
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6288
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6292
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6296
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6300
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6304
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6308
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6312
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6316
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6320
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6324
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6328
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6332
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6336
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6340
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6344
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6348
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6352
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6356
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6360
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6364
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6368
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6372
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6376
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6380
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6384
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6388
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6392
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6396
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6400
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6404
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6408
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6412
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6416
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6420
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6424
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6428
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6432
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6436
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6440
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6444
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6448
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6452
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6456
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6460
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6464
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6468
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6472
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6476
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6480
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6484
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6488
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6492
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6496
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6500
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6504
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6508
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6512
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6516
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6520
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6524
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6528
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6532
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6536
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6540
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6544
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6548
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6552
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6556
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6560
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6564
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6568
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6572
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6576
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6580
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6584
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6588
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6592
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6596
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6600
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6604
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6608
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6612
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6616
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6620
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6624
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6628
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6632
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6636
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6640
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6644
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6648
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6652
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6656
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6660
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6664
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6668
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6672
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6676
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6680
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6690
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6694
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6698
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6702
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6707
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6711
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6717
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6721
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6725
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6729
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6733
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6738
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6742
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6746
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6750
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6754
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6758
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6763
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6767
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6771
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6775
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6782
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6786
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6792
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6796
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6800
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6804
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6810
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6814
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6818
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6822
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6826
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6830
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6834
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6839
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6843
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6849
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6853
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6857
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6861
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6865
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6869
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6873
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6877
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6881
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6885
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6889
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6893
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6897
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6901
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6905
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6909
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6913
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6917
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6921
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6925
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6931
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6935
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6939
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6943
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6947
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6951
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6955
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6959
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6963
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6967
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6971
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6975
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6979
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6983
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6987
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6991
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6995
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6999
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:7009
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:7013
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:7017
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7027
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7031
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7035
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7039
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7043
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7049
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7053
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7057
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7061
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7065
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7071
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7075
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7079
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7085
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7089
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7093
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7099
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7103
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7107
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7111
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7115
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7121
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7125
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7129
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7133
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7137
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7141
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7145
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7149
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7153
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7157
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7163
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7167
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7172
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7176
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7181
		{
			yyVAL.str = string("")
		}
	case 1460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7185
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7191
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7195
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7201
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7206
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7210
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7216
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7220
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7224
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7228
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7234
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7238
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7244
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7253
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7257
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7262
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7266
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7271
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7275
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7281
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7287
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7291
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7296
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7300
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7305
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7309
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7315
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7321
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7325
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7331
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7336
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7340
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7344
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7349
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7353
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7359
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7363
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7367
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7372
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7376
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7380
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7384
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7388
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7395
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7399
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7403
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7407
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7413
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7417
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7421
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7425
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7430
		{
			yyVAL.str = ""
		}
	case 1512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7434
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7438
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7442
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7447
		{
			yyVAL.str = ""
		}
	case 1516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7451
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7457
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7461
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7466
		{
			yyVAL.str = ""
		}
	case 1520:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7470
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7475
		{
			yyVAL.str = "cascaded"
		}
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7479
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7483
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7488
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7492
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7498
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7504
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7510
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7519
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7523
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1531:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7528
		{
			yyVAL.str = ""
		}
	case 1532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7532
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7538
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7542
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7548
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7552
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7556
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7561
		{
			yyVAL.str = ""
		}
	case 1539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7565
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7569
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1541:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7574
		{
			yyVAL.str = ""
		}
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7578
		{
			yyVAL.str = " header"
		}
	case 1543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7583
		{
			yyVAL.str = ""
		}
	case 1544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7587
		{
			yyVAL.str = " manifest on"
		}
	case 1545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7591
		{
			yyVAL.str = " manifest off"
		}
	case 1546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7596
		{
			yyVAL.str = ""
		}
	case 1547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7600
		{
			yyVAL.str = " overwrite on"
		}
	case 1548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7604
		{
			yyVAL.str = " overwrite off"
		}
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7610
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1550:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7615
		{
			yyVAL.str = ""
		}
	case 1551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7619
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7625
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7629
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7635
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7639
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7644
		{
			yyVAL.str = ""
		}
	case 1557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7648
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7654
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7658
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7664
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7668
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7672
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7677
		{
			yyVAL.str = ""
		}
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7681
		{
			yyVAL.str = " optionally"
		}
	case 1565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7694
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7698
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7702
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7706
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7710
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7716
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7720
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7724
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1573:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7728
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1574:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7733
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7737
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7743
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7747
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7753
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7757
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7763
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7767
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7772
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7782
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7786
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7792
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7799
		{
			yyVAL.str = "charset"
		}
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7809
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7813
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7817
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7826
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7828
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7831
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7833
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7836
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7838
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7841
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7843
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7846
		{
			yyVAL.empty = struct{}{}
		}
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7848
		{
			yyVAL.empty = struct{}{}
		}
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7850
		{
			yyVAL.empty = struct{}{}
		}
	case 1606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7854
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7859
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7863
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7868
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7870
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7874
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7880
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7884
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7891
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7897
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7901
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7907
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7911
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7918
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7924
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7930
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7934
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7938
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8582
		{
		}
	case 2242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8587
		{
		}
	case 2243:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8591
		{
			skipToEnd(yylex)
		}
	case 2244:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8596
		{
			skipToEnd(yylex)
		}
	case 2245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8600
		{
			skipToEnd(yylex)
		}
	case 2246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8604
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
