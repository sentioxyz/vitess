// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const EXCEPT = 57351
const SELECT = 57352
const STREAM = 57353
const VSTREAM = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const ORDER = 57362
const BY = 57363
const LIMIT = 57364
const OFFSET = 57365
const FOR = 57366
const ALL = 57367
const DISTINCT = 57368
const AS = 57369
const EXISTS = 57370
const ASC = 57371
const DESC = 57372
const INTO = 57373
const DUPLICATE = 57374
const DEFAULT = 57375
const SET = 57376
const LOCK = 57377
const UNLOCK = 57378
const KEYS = 57379
const DO = 57380
const CALL = 57381
const DISTINCTROW = 57382
const PARSER = 57383
const GENERATED = 57384
const ALWAYS = 57385
const OUTFILE = 57386
const S3 = 57387
const DATA = 57388
const LOAD = 57389
const LINES = 57390
const TERMINATED = 57391
const ESCAPED = 57392
const ENCLOSED = 57393
const DUMPFILE = 57394
const CSV = 57395
const HEADER = 57396
const MANIFEST = 57397
const OVERWRITE = 57398
const STARTING = 57399
const OPTIONALLY = 57400
const VALUES = 57401
const LAST_INSERT_ID = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const SQL_CALC_FOUND_ROWS = 57409
const JOIN = 57410
const STRAIGHT_JOIN = 57411
const LEFT = 57412
const RIGHT = 57413
const INNER = 57414
const OUTER = 57415
const CROSS = 57416
const NATURAL = 57417
const USE = 57418
const FORCE = 57419
const ON = 57420
const USING = 57421
const INPLACE = 57422
const COPY = 57423
const INSTANT = 57424
const ALGORITHM = 57425
const NONE = 57426
const SHARED = 57427
const EXCLUSIVE = 57428
const SUBQUERY_AS_EXPR = 57429
const STRING = 57430
const ID = 57431
const AT_ID = 57432
const AT_AT_ID = 57433
const HEX = 57434
const NCHAR_STRING = 57435
const INTEGRAL = 57436
const FLOAT = 57437
const DECIMAL = 57438
const HEXNUM = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BITNUM = 57442
const BIT_LITERAL = 57443
const COMPRESSION = 57444
const VALUE_ARG = 57445
const LIST_ARG = 57446
const OFFSET_ARG = 57447
const JSON_PRETTY = 57448
const JSON_STORAGE_SIZE = 57449
const JSON_STORAGE_FREE = 57450
const JSON_CONTAINS = 57451
const JSON_CONTAINS_PATH = 57452
const JSON_EXTRACT = 57453
const JSON_KEYS = 57454
const JSON_OVERLAPS = 57455
const JSON_SEARCH = 57456
const JSON_VALUE = 57457
const EXTRACT = 57458
const NULL = 57459
const TRUE = 57460
const FALSE = 57461
const OFF = 57462
const DISCARD = 57463
const IMPORT = 57464
const ENABLE = 57465
const DISABLE = 57466
const TABLESPACE = 57467
const VIRTUAL = 57468
const STORED = 57469
const BOTH = 57470
const LEADING = 57471
const TRAILING = 57472
const KILL = 57473
const EMPTY_FROM_CLAUSE = 57474
const LOWER_THAN_CHARSET = 57475
const CHARSET = 57476
const UNIQUE = 57477
const KEY = 57478
const EXPRESSION_PREC_SETTER = 57479
const OR = 57480
const XOR = 57481
const AND = 57482
const NOT = 57483
const BETWEEN = 57484
const CASE = 57485
const WHEN = 57486
const THEN = 57487
const ELSE = 57488
const END = 57489
const LE = 57490
const GE = 57491
const NE = 57492
const NULL_SAFE_EQUAL = 57493
const IS = 57494
const LIKE = 57495
const REGEXP = 57496
const RLIKE = 57497
const IN = 57498
const ASSIGNMENT_OPT = 57499
const SHIFT_LEFT = 57500
const SHIFT_RIGHT = 57501
const DIV = 57502
const MOD = 57503
const UNARY = 57504
const COLLATE = 57505
const BINARY = 57506
const UNDERSCORE_ARMSCII8 = 57507
const UNDERSCORE_ASCII = 57508
const UNDERSCORE_BIG5 = 57509
const UNDERSCORE_BINARY = 57510
const UNDERSCORE_CP1250 = 57511
const UNDERSCORE_CP1251 = 57512
const UNDERSCORE_CP1256 = 57513
const UNDERSCORE_CP1257 = 57514
const UNDERSCORE_CP850 = 57515
const UNDERSCORE_CP852 = 57516
const UNDERSCORE_CP866 = 57517
const UNDERSCORE_CP932 = 57518
const UNDERSCORE_DEC8 = 57519
const UNDERSCORE_EUCJPMS = 57520
const UNDERSCORE_EUCKR = 57521
const UNDERSCORE_GB18030 = 57522
const UNDERSCORE_GB2312 = 57523
const UNDERSCORE_GBK = 57524
const UNDERSCORE_GEOSTD8 = 57525
const UNDERSCORE_GREEK = 57526
const UNDERSCORE_HEBREW = 57527
const UNDERSCORE_HP8 = 57528
const UNDERSCORE_KEYBCS2 = 57529
const UNDERSCORE_KOI8R = 57530
const UNDERSCORE_KOI8U = 57531
const UNDERSCORE_LATIN1 = 57532
const UNDERSCORE_LATIN2 = 57533
const UNDERSCORE_LATIN5 = 57534
const UNDERSCORE_LATIN7 = 57535
const UNDERSCORE_MACCE = 57536
const UNDERSCORE_MACROMAN = 57537
const UNDERSCORE_SJIS = 57538
const UNDERSCORE_SWE7 = 57539
const UNDERSCORE_TIS620 = 57540
const UNDERSCORE_UCS2 = 57541
const UNDERSCORE_UJIS = 57542
const UNDERSCORE_UTF16 = 57543
const UNDERSCORE_UTF16LE = 57544
const UNDERSCORE_UTF32 = 57545
const UNDERSCORE_UTF8 = 57546
const UNDERSCORE_UTF8MB4 = 57547
const UNDERSCORE_UTF8MB3 = 57548
const INTERVAL = 57549
const WINDOW_EXPR = 57550
const JSON_EXTRACT_OP = 57551
const JSON_UNQUOTE_EXTRACT_OP = 57552
const CREATE = 57553
const ALTER = 57554
const DROP = 57555
const RENAME = 57556
const ANALYZE = 57557
const ADD = 57558
const FLUSH = 57559
const CHANGE = 57560
const MODIFY = 57561
const DEALLOCATE = 57562
const REVERT = 57563
const QUERIES = 57564
const SCHEMA = 57565
const TABLE = 57566
const INDEX = 57567
const VIEW = 57568
const TO = 57569
const IGNORE = 57570
const IF = 57571
const PRIMARY = 57572
const COLUMN = 57573
const SPATIAL = 57574
const FULLTEXT = 57575
const KEY_BLOCK_SIZE = 57576
const CHECK = 57577
const INDEXES = 57578
const ACTION = 57579
const CASCADE = 57580
const CONSTRAINT = 57581
const FOREIGN = 57582
const NO = 57583
const REFERENCES = 57584
const RESTRICT = 57585
const SHOW = 57586
const DESCRIBE = 57587
const EXPLAIN = 57588
const DATE = 57589
const ESCAPE = 57590
const REPAIR = 57591
const OPTIMIZE = 57592
const TRUNCATE = 57593
const COALESCE = 57594
const EXCHANGE = 57595
const REBUILD = 57596
const PARTITIONING = 57597
const REMOVE = 57598
const PREPARE = 57599
const EXECUTE = 57600
const MAXVALUE = 57601
const PARTITION = 57602
const REORGANIZE = 57603
const LESS = 57604
const THAN = 57605
const PROCEDURE = 57606
const TRIGGER = 57607
const VINDEX = 57608
const VINDEXES = 57609
const DIRECTORY = 57610
const NAME = 57611
const UPGRADE = 57612
const STATUS = 57613
const VARIABLES = 57614
const WARNINGS = 57615
const CASCADED = 57616
const DEFINER = 57617
const OPTION = 57618
const SQL = 57619
const UNDEFINED = 57620
const SEQUENCE = 57621
const MERGE = 57622
const TEMPORARY = 57623
const TEMPTABLE = 57624
const INVOKER = 57625
const SECURITY = 57626
const FIRST = 57627
const AFTER = 57628
const LAST = 57629
const VITESS_MIGRATION = 57630
const CANCEL = 57631
const RETRY = 57632
const LAUNCH = 57633
const COMPLETE = 57634
const CLEANUP = 57635
const THROTTLE = 57636
const UNTHROTTLE = 57637
const EXPIRE = 57638
const RATIO = 57639
const VITESS_THROTTLER = 57640
const BEGIN = 57641
const START = 57642
const TRANSACTION = 57643
const COMMIT = 57644
const ROLLBACK = 57645
const SAVEPOINT = 57646
const RELEASE = 57647
const WORK = 57648
const CONSISTENT = 57649
const SNAPSHOT = 57650
const BIT = 57651
const TINYINT = 57652
const SMALLINT = 57653
const MEDIUMINT = 57654
const INT = 57655
const INTEGER = 57656
const BIGINT = 57657
const INTNUM = 57658
const REAL = 57659
const DOUBLE = 57660
const FLOAT_TYPE = 57661
const FLOAT4_TYPE = 57662
const FLOAT8_TYPE = 57663
const DECIMAL_TYPE = 57664
const NUMERIC = 57665
const TIME = 57666
const TIMESTAMP = 57667
const DATETIME = 57668
const YEAR = 57669
const CHAR = 57670
const VARCHAR = 57671
const BOOL = 57672
const CHARACTER = 57673
const VARBINARY = 57674
const NCHAR = 57675
const TEXT = 57676
const TINYTEXT = 57677
const MEDIUMTEXT = 57678
const LONGTEXT = 57679
const BLOB = 57680
const TINYBLOB = 57681
const MEDIUMBLOB = 57682
const LONGBLOB = 57683
const JSON = 57684
const JSON_SCHEMA_VALID = 57685
const JSON_SCHEMA_VALIDATION_REPORT = 57686
const ENUM = 57687
const GEOMETRY = 57688
const POINT = 57689
const LINESTRING = 57690
const POLYGON = 57691
const GEOMCOLLECTION = 57692
const GEOMETRYCOLLECTION = 57693
const MULTIPOINT = 57694
const MULTILINESTRING = 57695
const MULTIPOLYGON = 57696
const ASCII = 57697
const UNICODE = 57698
const NULLX = 57699
const AUTO_INCREMENT = 57700
const APPROXNUM = 57701
const SIGNED = 57702
const UNSIGNED = 57703
const ZEROFILL = 57704
const PURGE = 57705
const BEFORE = 57706
const CODE = 57707
const COLLATION = 57708
const COLUMNS = 57709
const DATABASES = 57710
const ENGINES = 57711
const EVENT = 57712
const EXTENDED = 57713
const FIELDS = 57714
const FULL = 57715
const FUNCTION = 57716
const GTID_EXECUTED = 57717
const KEYSPACES = 57718
const OPEN = 57719
const PLUGINS = 57720
const PRIVILEGES = 57721
const PROCESSLIST = 57722
const SCHEMAS = 57723
const TABLES = 57724
const TRIGGERS = 57725
const USER = 57726
const VGTID_EXECUTED = 57727
const VITESS_KEYSPACES = 57728
const VITESS_METADATA = 57729
const VITESS_MIGRATIONS = 57730
const VITESS_REPLICATION_STATUS = 57731
const VITESS_SHARDS = 57732
const VITESS_TABLETS = 57733
const VITESS_TARGET = 57734
const VSCHEMA = 57735
const VITESS_THROTTLED_APPS = 57736
const NAMES = 57737
const GLOBAL = 57738
const SESSION = 57739
const ISOLATION = 57740
const LEVEL = 57741
const READ = 57742
const WRITE = 57743
const ONLY = 57744
const REPEATABLE = 57745
const COMMITTED = 57746
const UNCOMMITTED = 57747
const SERIALIZABLE = 57748
const ADDDATE = 57749
const CURRENT_TIMESTAMP = 57750
const DATABASE = 57751
const CURRENT_DATE = 57752
const CURDATE = 57753
const DATE_ADD = 57754
const DATE_SUB = 57755
const NOW = 57756
const SUBDATE = 57757
const CURTIME = 57758
const CURRENT_TIME = 57759
const LOCALTIME = 57760
const LOCALTIMESTAMP = 57761
const CURRENT_USER = 57762
const UTC_DATE = 57763
const UTC_TIME = 57764
const UTC_TIMESTAMP = 57765
const SYSDATE = 57766
const DAY = 57767
const DAY_HOUR = 57768
const DAY_MICROSECOND = 57769
const DAY_MINUTE = 57770
const DAY_SECOND = 57771
const HOUR = 57772
const HOUR_MICROSECOND = 57773
const HOUR_MINUTE = 57774
const HOUR_SECOND = 57775
const MICROSECOND = 57776
const MINUTE = 57777
const MINUTE_MICROSECOND = 57778
const MINUTE_SECOND = 57779
const MONTH = 57780
const QUARTER = 57781
const SECOND = 57782
const SECOND_MICROSECOND = 57783
const YEAR_MONTH = 57784
const WEEK = 57785
const SQL_TSI_DAY = 57786
const SQL_TSI_WEEK = 57787
const SQL_TSI_HOUR = 57788
const SQL_TSI_MINUTE = 57789
const SQL_TSI_MONTH = 57790
const SQL_TSI_QUARTER = 57791
const SQL_TSI_SECOND = 57792
const SQL_TSI_MICROSECOND = 57793
const SQL_TSI_YEAR = 57794
const REPLACE = 57795
const CONVERT = 57796
const CAST = 57797
const SUBSTR = 57798
const SUBSTRING = 57799
const SEPARATOR = 57800
const TIMESTAMPADD = 57801
const TIMESTAMPDIFF = 57802
const WEIGHT_STRING = 57803
const LTRIM = 57804
const RTRIM = 57805
const TRIM = 57806
const JSON_ARRAY = 57807
const JSON_OBJECT = 57808
const JSON_QUOTE = 57809
const JSON_DEPTH = 57810
const JSON_TYPE = 57811
const JSON_LENGTH = 57812
const JSON_VALID = 57813
const JSON_ARRAY_APPEND = 57814
const JSON_ARRAY_INSERT = 57815
const JSON_INSERT = 57816
const JSON_MERGE = 57817
const JSON_MERGE_PATCH = 57818
const JSON_MERGE_PRESERVE = 57819
const JSON_REMOVE = 57820
const JSON_REPLACE = 57821
const JSON_SET = 57822
const JSON_UNQUOTE = 57823
const COUNT = 57824
const AVG = 57825
const MAX = 57826
const MIN = 57827
const SUM = 57828
const GROUP_CONCAT = 57829
const BIT_AND = 57830
const BIT_OR = 57831
const BIT_XOR = 57832
const STD = 57833
const STDDEV = 57834
const STDDEV_POP = 57835
const STDDEV_SAMP = 57836
const VAR_POP = 57837
const VAR_SAMP = 57838
const VARIANCE = 57839
const ANY_VALUE = 57840
const REGEXP_INSTR = 57841
const REGEXP_LIKE = 57842
const REGEXP_REPLACE = 57843
const REGEXP_SUBSTR = 57844
const ExtractValue = 57845
const UpdateXML = 57846
const GET_LOCK = 57847
const RELEASE_LOCK = 57848
const RELEASE_ALL_LOCKS = 57849
const IS_FREE_LOCK = 57850
const IS_USED_LOCK = 57851
const LOCATE = 57852
const POSITION = 57853
const ST_GeometryCollectionFromText = 57854
const ST_GeometryFromText = 57855
const ST_LineStringFromText = 57856
const ST_MultiLineStringFromText = 57857
const ST_MultiPointFromText = 57858
const ST_MultiPolygonFromText = 57859
const ST_PointFromText = 57860
const ST_PolygonFromText = 57861
const ST_GeometryCollectionFromWKB = 57862
const ST_GeometryFromWKB = 57863
const ST_LineStringFromWKB = 57864
const ST_MultiLineStringFromWKB = 57865
const ST_MultiPointFromWKB = 57866
const ST_MultiPolygonFromWKB = 57867
const ST_PointFromWKB = 57868
const ST_PolygonFromWKB = 57869
const ST_AsBinary = 57870
const ST_AsText = 57871
const ST_Dimension = 57872
const ST_Envelope = 57873
const ST_IsSimple = 57874
const ST_IsEmpty = 57875
const ST_GeometryType = 57876
const ST_X = 57877
const ST_Y = 57878
const ST_Latitude = 57879
const ST_Longitude = 57880
const ST_EndPoint = 57881
const ST_IsClosed = 57882
const ST_Length = 57883
const ST_NumPoints = 57884
const ST_StartPoint = 57885
const ST_PointN = 57886
const ST_Area = 57887
const ST_Centroid = 57888
const ST_ExteriorRing = 57889
const ST_InteriorRingN = 57890
const ST_NumInteriorRings = 57891
const ST_NumGeometries = 57892
const ST_GeometryN = 57893
const ST_LongFromGeoHash = 57894
const ST_PointFromGeoHash = 57895
const ST_LatFromGeoHash = 57896
const ST_GeoHash = 57897
const ST_AsGeoJSON = 57898
const ST_GeomFromGeoJSON = 57899
const MATCH = 57900
const AGAINST = 57901
const BOOLEAN = 57902
const LANGUAGE = 57903
const WITH = 57904
const QUERY = 57905
const EXPANSION = 57906
const WITHOUT = 57907
const VALIDATION = 57908
const UNUSED = 57909
const ARRAY = 57910
const BYTE = 57911
const CUME_DIST = 57912
const DESCRIPTION = 57913
const DENSE_RANK = 57914
const EMPTY = 57915
const FIRST_VALUE = 57916
const GROUPING = 57917
const GROUPS = 57918
const JSON_TABLE = 57919
const LAG = 57920
const LAST_VALUE = 57921
const LATERAL = 57922
const LEAD = 57923
const NTH_VALUE = 57924
const NTILE = 57925
const OF = 57926
const OVER = 57927
const PERCENT_RANK = 57928
const RANK = 57929
const RECURSIVE = 57930
const ROW_NUMBER = 57931
const SYSTEM = 57932
const WINDOW = 57933
const ACTIVE = 57934
const ADMIN = 57935
const AUTOEXTEND_SIZE = 57936
const BUCKETS = 57937
const CLONE = 57938
const COLUMN_FORMAT = 57939
const COMPONENT = 57940
const DEFINITION = 57941
const ENFORCED = 57942
const ENGINE_ATTRIBUTE = 57943
const EXCLUDE = 57944
const FOLLOWING = 57945
const GET_MASTER_PUBLIC_KEY = 57946
const HISTOGRAM = 57947
const HISTORY = 57948
const INACTIVE = 57949
const INVISIBLE = 57950
const LOCKED = 57951
const MASTER_COMPRESSION_ALGORITHMS = 57952
const MASTER_PUBLIC_KEY_PATH = 57953
const MASTER_TLS_CIPHERSUITES = 57954
const MASTER_ZSTD_COMPRESSION_LEVEL = 57955
const NESTED = 57956
const NETWORK_NAMESPACE = 57957
const NOWAIT = 57958
const NULLS = 57959
const OJ = 57960
const OLD = 57961
const OPTIONAL = 57962
const ORDINALITY = 57963
const ORGANIZATION = 57964
const OTHERS = 57965
const PARTIAL = 57966
const PATH = 57967
const PERSIST = 57968
const PERSIST_ONLY = 57969
const PRECEDING = 57970
const PRIVILEGE_CHECKS_USER = 57971
const PROCESS = 57972
const RANDOM = 57973
const REFERENCE = 57974
const REQUIRE_ROW_FORMAT = 57975
const RESOURCE = 57976
const RESPECT = 57977
const RESTART = 57978
const RETAIN = 57979
const REUSE = 57980
const ROLE = 57981
const SECONDARY = 57982
const SECONDARY_ENGINE = 57983
const SECONDARY_ENGINE_ATTRIBUTE = 57984
const SECONDARY_LOAD = 57985
const SECONDARY_UNLOAD = 57986
const SIMPLE = 57987
const SKIP = 57988
const SRID = 57989
const THREAD_PRIORITY = 57990
const TIES = 57991
const UNBOUNDED = 57992
const VCPU = 57993
const VISIBLE = 57994
const RETURNING = 57995
const FORMAT_BYTES = 57996
const FORMAT_PICO_TIME = 57997
const PS_CURRENT_THREAD_ID = 57998
const PS_THREAD_ID = 57999
const GTID_SUBSET = 58000
const GTID_SUBTRACT = 58001
const WAIT_FOR_EXECUTED_GTID_SET = 58002
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58003
const FORMAT = 58004
const TREE = 58005
const VITESS = 58006
const TRADITIONAL = 58007
const VTEXPLAIN = 58008
const VEXPLAIN = 58009
const PLAN = 58010
const LOCAL = 58011
const LOW_PRIORITY = 58012
const NO_WRITE_TO_BINLOG = 58013
const LOGS = 58014
const ERROR = 58015
const GENERAL = 58016
const HOSTS = 58017
const OPTIMIZER_COSTS = 58018
const USER_RESOURCES = 58019
const SLOW = 58020
const CHANNEL = 58021
const RELAY = 58022
const EXPORT = 58023
const CURRENT = 58024
const ROW = 58025
const ROWS = 58026
const AVG_ROW_LENGTH = 58027
const CONNECTION = 58028
const CHECKSUM = 58029
const DELAY_KEY_WRITE = 58030
const ENCRYPTION = 58031
const ENGINE = 58032
const INSERT_METHOD = 58033
const MAX_ROWS = 58034
const MIN_ROWS = 58035
const PACK_KEYS = 58036
const PASSWORD = 58037
const FIXED = 58038
const DYNAMIC = 58039
const COMPRESSED = 58040
const REDUNDANT = 58041
const COMPACT = 58042
const ROW_FORMAT = 58043
const STATS_AUTO_RECALC = 58044
const STATS_PERSISTENT = 58045
const STATS_SAMPLE_PAGES = 58046
const STORAGE = 58047
const MEMORY = 58048
const DISK = 58049
const PARTITIONS = 58050
const LINEAR = 58051
const RANGE = 58052
const LIST = 58053
const SUBPARTITION = 58054
const SUBPARTITIONS = 58055
const HASH = 58056

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"EXCEPT",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	14, 51,
	15, 51,
	-2, 40,
	-1, 52,
	1, 160,
	732, 160,
	-2, 168,
	-1, 53,
	137, 168,
	179, 168,
	348, 168,
	-2, 524,
	-1, 61,
	37, 773,
	242, 773,
	253, 773,
	288, 787,
	289, 787,
	-2, 775,
	-1, 66,
	244, 811,
	-2, 809,
	-1, 122,
	241, 1587,
	-2, 134,
	-1, 124,
	1, 161,
	732, 161,
	-2, 168,
	-1, 135,
	138, 409,
	247, 409,
	-2, 513,
	-1, 154,
	137, 168,
	179, 168,
	348, 168,
	-2, 533,
	-1, 733,
	165, 41,
	-2, 45,
	-1, 939,
	88, 1604,
	-2, 1458,
	-1, 940,
	88, 1605,
	224, 1609,
	-2, 1459,
	-1, 941,
	224, 1608,
	-2, 42,
	-1, 1026,
	61, 886,
	-2, 901,
	-1, 1113,
	252, 43,
	257, 43,
	-2, 420,
	-1, 1198,
	1, 581,
	732, 581,
	-2, 168,
	-1, 1501,
	224, 1609,
	-2, 1459,
	-1, 1711,
	61, 887,
	-2, 906,
	-1, 1712,
	61, 888,
	-2, 907,
	-1, 1763,
	137, 168,
	179, 168,
	348, 168,
	-2, 459,
	-1, 1844,
	138, 409,
	247, 409,
	-2, 513,
	-1, 1853,
	252, 44,
	257, 44,
	-2, 421,
	-1, 2290,
	224, 1613,
	-2, 1607,
	-1, 2291,
	224, 1609,
	-2, 1605,
	-1, 2391,
	137, 168,
	179, 168,
	348, 168,
	-2, 460,
	-1, 2398,
	27, 189,
	-2, 191,
	-1, 2851,
	79, 99,
	89, 99,
	-2, 965,
	-1, 2920,
	707, 697,
	-2, 671,
	-1, 3127,
	51, 1555,
	-2, 1549,
	-1, 3941,
	707, 697,
	-2, 685,
	-1, 4028,
	91, 629,
	96, 629,
	106, 629,
	181, 629,
	182, 629,
	183, 629,
	184, 629,
	185, 629,
	186, 629,
	187, 629,
	188, 629,
	189, 629,
	190, 629,
	191, 629,
	192, 629,
	193, 629,
	194, 629,
	195, 629,
	196, 629,
	197, 629,
	198, 629,
	199, 629,
	200, 629,
	201, 629,
	202, 629,
	203, 629,
	204, 629,
	205, 629,
	206, 629,
	207, 629,
	208, 629,
	209, 629,
	210, 629,
	211, 629,
	212, 629,
	213, 629,
	214, 629,
	215, 629,
	216, 629,
	217, 629,
	218, 629,
	219, 629,
	220, 629,
	221, 629,
	222, 629,
	-2, 1977,
}

const yyPrivate = 57344

const yyLast = 55968

var yyAct = [...]int{
	955, 3603, 3604, 87, 3602, 4103, 3922, 4007, 3279, 4116,
	4070, 2096, 3554, 4071, 950, 1265, 942, 2084, 3995, 1972,
	2388, 4026, 3906, 3831, 3179, 3407, 3237, 3186, 3228, 2319,
	3242, 3239, 3238, 3236, 3241, 3240, 1263, 2027, 3140, 3904,
	5, 908, 2747, 3541, 42, 2321, 3080, 3257, 3256, 737,
	3194, 2462, 3144, 943, 3452, 3141, 3446, 3641, 3259, 2983,
	2343, 3128, 904, 1766, 764, 2425, 732, 903, 1726, 3972,
	2811, 1822, 731, 2885, 3285, 2965, 2362, 3438, 2917, 2450,
	3472, 2887, 2359, 2430, 2886, 2493, 1024, 1075, 87, 163,
	2376, 1043, 1020, 1145, 1869, 2363, 2836, 3138, 1713, 2817,
	2364, 2803, 2787, 2242, 2274, 2286, 43, 1024, 2241, 2080,
	2119, 2957, 2471, 41, 2035, 2449, 2432, 1851, 2351, 149,
	1755, 1103, 1085, 2510, 2878, 2853, 1108, 1023, 1735, 1027,
	2824, 100, 2366, 1691, 104, 105, 1513, 2339, 2055, 1440,
	2123, 1425, 1968, 1858, 747, 1082, 1079, 3143, 1045, 1114,
	1111, 2447, 1083, 1950, 2421, 2422, 1121, 1109, 1110, 1754,
	1060, 1740, 1062, 735, 1033, 2192, 1473, 3636, 742, 1497,
	2150, 1042, 3894, 2785, 107, 2344, 2026, 2131, 1030, 2287,
	1979, 85, 1254, 1817, 127, 99, 132, 167, 125, 126,
	1017, 133, 1194, 1843, 1029, 905, 1055, 741, 93, 734,
	1031, 1028, 1517, 98, 4104, 1240, 106, 3542, 3225, 84,
	2464, 2465, 2466, 3957, 2464, 722, 2908, 1522, 2940, 2939,
	1261, 2508, 1050, 1054, 3534, 3497, 1016, 1441, 4053, 2973,
	2974, 1036, 3952, 3953, 2316, 2317, 2042, 667, 2041, 3958,
	128, 2040, 2039, 2038, 1150, 1147, 1076, 134, 2037, 2010,
	1687, 1210, 725, 2555, 726, 2783, 4047, 3124, 1164, 1165,
	1166, 1935, 1169, 1170, 1171, 1172, 3084, 3607, 1175, 1176,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186,
	1187, 1188, 1189, 1190, 1191, 1069, 1037, 1124, 723, 4074,
	3607, 1018, 1070, 1125, 2497, 1022, 3247, 1457, 4109, 4126,
	2813, 2, 1092, 3931, 1100, 1044, 1151, 1154, 1155, 1099,
	707, 1211, 128, 1098, 1097, 1158, 4069, 4057, 4094, 4055,
	3412, 3411, 707, 4108, 1720, 727, 2910, 701, 1068, 1072,
	907, 2930, 3953, 1436, 1087, 1451, 909, 95, 2496, 95,
	2933, 95, 4056, 1167, 4054, 3247, 111, 112, 113, 1015,
	116, 190, 3245, 122, 3606, 701, 191, 3907, 3244, 661,
	2058, 2748, 2047, 3304, 1068, 1072, 907, 3827, 3826, 1101,
	1149, 720, 721, 701, 1148, 4084, 129, 3606, 3251, 86,
	128, 1010, 1011, 1012, 1013, 3837, 4051, 95, 1026, 172,
	3566, 1427, 959, 960, 961, 3555, 86, 3547, 698, 3996,
	3548, 3245, 4004, 2827, 2490, 3836, 2089, 4031, 3324, 701,
	1832, 3176, 3177, 2784, 2947, 2948, 1057, 1058, 959, 960,
	961, 3175, 1197, 86, 2383, 2384, 2495, 3251, 2828, 2019,
	2020, 2972, 2867, 4036, 1454, 2862, 1455, 1456, 2861, 2561,
	2382, 2863, 4008, 1447, 2564, 169, 683, 1756, 170, 1757,
	2956, 4034, 1096, 1258, 1203, 1204, 1230, 95, 1008, 681,
	4040, 4041, 1007, 3923, 1441, 1231, 1224, 1235, 1236, 3196,
	3197, 189, 3654, 1975, 95, 1218, 4035, 2874, 1218, 701,
	1219, 2401, 2400, 1219, 2820, 2821, 1206, 1247, 701, 1249,
	2441, 1217, 3248, 1216, 1193, 3018, 3565, 3281, 2984, 678,
	2553, 95, 3312, 3310, 2318, 2018, 715, 2022, 693, 2562,
	1094, 701, 719, 2435, 713, 3286, 2958, 1752, 4012, 1925,
	1695, 1168, 3878, 688, 3879, 3936, 2918, 1246, 1248, 86,
	4106, 2347, 88, 691, 2472, 3274, 2943, 1251, 702, 2511,
	4075, 3248, 2516, 3275, 4012, 1199, 1951, 1437, 1233, 1234,
	1256, 1239, 2960, 1426, 1061, 3536, 3535, 2515, 2534, 1232,
	1225, 4076, 1174, 1926, 1173, 1927, 702, 3532, 1257, 3283,
	2513, 1237, 1451, 3198, 2556, 2557, 2559, 2558, 3195, 1096,
	1192, 1238, 2986, 3811, 702, 173, 1134, 2475, 3611, 3282,
	3198, 2531, 1836, 2532, 179, 2533, 1132, 2517, 1104, 2514,
	1698, 668, 1105, 670, 684, 2360, 704, 95, 703, 674,
	1976, 672, 676, 685, 677, 1105, 671, 1143, 682, 1144,
	702, 673, 686, 687, 690, 694, 695, 696, 692, 689,
	1142, 680, 705, 1244, 1141, 1140, 1139, 1245, 1095, 1138,
	1137, 1136, 1131, 4127, 1196, 4081, 1488, 1250, 1071, 1065,
	1063, 4048, 2996, 2995, 2994, 1116, 1080, 2988, 3218, 2992,
	3019, 2987, 2434, 2985, 1080, 1830, 1080, 1056, 2990, 1117,
	1078, 2961, 1243, 3083, 1969, 2911, 2448, 2989, 2501, 2500,
	1447, 1474, 3531, 1439, 1071, 1065, 1063, 1153, 1965, 2942,
	702, 1428, 1161, 1116, 1829, 2991, 2993, 1152, 1262, 702,
	1262, 1262, 1828, 3301, 2928, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1483, 1482, 1484, 1485, 3449, 1966, 164, 1826,
	665, 660, 702, 2345, 2346, 2523, 2519, 2521, 2522, 2520,
	2524, 2525, 2977, 1489, 1490, 1135, 1446, 1443, 1444, 1445,
	1450, 1452, 1449, 1753, 1448, 1133, 4049, 3919, 3486, 1195,
	1024, 1498, 1503, 1504, 1442, 1507, 1509, 1510, 1511, 1512,
	2945, 1515, 1516, 1518, 1518, 1095, 1518, 1518, 1523, 1523,
	1523, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534,
	1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1252, 1495, 3930, 1102, 1648, 2494, 1650,
	1651, 1652, 1653, 1654, 706, 3495, 3496, 1491, 1492, 1493,
	1494, 1523, 1523, 1523, 1523, 1523, 1523, 1505, 2909, 1418,
	1419, 1420, 1064, 2932, 3605, 699, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	700, 1937, 1936, 1938, 1939, 1940, 1499, 3605, 94, 956,
	1956, 956, 701, 956, 165, 1508, 4039, 1688, 1064, 3249,
	3250, 177, 4010, 3395, 1205, 94, 1519, 2931, 1520, 1521,
	1215, 2912, 3253, 1446, 1443, 1444, 1445, 1450, 1452, 1449,
	1214, 1448, 1220, 1221, 1222, 1223, 1524, 1525, 4010, 89,
	2438, 1442, 94, 1435, 4009, 2347, 1202, 1685, 3564, 2563,
	4038, 1091, 185, 1719, 1093, 1488, 1259, 1260, 3249, 3250,
	1694, 3468, 1857, 2858, 3450, 2955, 1228, 2823, 2954, 1024,
	4009, 3253, 1123, 4120, 2492, 1024, 2562, 2760, 2092, 2439,
	1744, 1024, 1649, 1208, 1123, 1693, 2437, 3092, 2818, 3091,
	666, 2389, 1160, 2788, 2790, 166, 171, 168, 174, 175,
	176, 178, 180, 181, 182, 183, 1488, 124, 1485, 3174,
	1702, 184, 186, 187, 188, 2587, 1707, 1720, 1241, 1686,
	2440, 1980, 1023, 1123, 1468, 2964, 1039, 1255, 3944, 1146,
	2436, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1482, 1484,
	1485, 2576, 3527, 119, 663, 3462, 2512, 2031, 94, 1962,
	1758, 1213, 3004, 1096, 2124, 1088, 1480, 1481, 1483, 1482,
	1484, 1485, 1090, 1089, 1009, 1705, 1706, 2901, 3302, 104,
	105, 1856, 2124, 3650, 2596, 1122, 4085, 2132, 1655, 1656,
	1657, 1658, 1659, 1660, 1455, 1456, 1955, 1122, 1686, 1456,
	1692, 2133, 3502, 1116, 1119, 1120, 2587, 1080, 1679, 3501,
	2479, 1113, 1117, 1866, 1123, 1865, 1081, 1123, 1855, 107,
	2489, 1094, 2487, 702, 2060, 1959, 120, 1957, 1958, 1134,
	1960, 1961, 1112, 2049, 2051, 2052, 1122, 1474, 2061, 1486,
	1487, 2059, 1116, 1119, 1120, 1132, 1080, 2345, 2346, 1700,
	1113, 1117, 2967, 1123, 1833, 1834, 1835, 2966, 2050, 1849,
	4077, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1482,
	1484, 1485, 2789, 1704, 1722, 3487, 1242, 1701, 1703, 1981,
	2491, 1227, 1689, 1920, 1974, 1035, 1871, 1842, 1872, 1018,
	1874, 1876, 1229, 1725, 1880, 1882, 1884, 1886, 1888, 1861,
	1022, 2967, 2484, 1902, 4118, 1212, 2966, 4119, 2484, 4117,
	1198, 1262, 4128, 4122, 1749, 1750, 2279, 1122, 3974, 1159,
	1122, 1910, 1911, 1156, 1860, 1126, 1116, 1916, 1917, 3561,
	1128, 3562, 2130, 1720, 1129, 1127, 1859, 1859, 3912, 1825,
	2129, 2488, 2568, 2569, 2570, 3182, 1952, 2486, 1953, 1095,
	1457, 1954, 3819, 1840, 3818, 1130, 1122, 1852, 1838, 3809,
	1839, 1126, 1116, 3975, 3577, 1945, 1128, 959, 960, 961,
	1129, 1127, 1478, 1479, 1480, 1481, 1483, 1482, 1484, 1485,
	1863, 1943, 1457, 3913, 3576, 3509, 3508, 1708, 1932, 3498,
	3183, 1474, 3226, 2976, 3214, 2883, 2882, 1906, 2881, 4129,
	2279, 2444, 1946, 190, 2276, 1930, 1929, 1898, 1970, 3278,
	1901, 1928, 1903, 2278, 3185, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1483, 1482, 1484, 1485, 1918, 954, 129, 1944,
	1912, 1909, 3180, 1908, 1907, 4090, 1720, 1878, 1699, 2116,
	1422, 172, 707, 1099, 1752, 1942, 128, 1098, 1097, 1457,
	3196, 3197, 1931, 1457, 1831, 3492, 707, 3181, 2865, 707,
	1457, 2876, 2460, 2459, 2458, 2457, 4078, 1986, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1459, 1457, 3939, 1262, 1262,
	2456, 2455, 1982, 1983, 1474, 2352, 2353, 1454, 2633, 1455,
	1456, 3187, 87, 3938, 2008, 87, 1987, 169, 1453, 1720,
	170, 2809, 4105, 1994, 1995, 1996, 2635, 3916, 1475, 1476,
	1477, 1478, 1479, 1480, 1481, 1483, 1482, 1484, 1485, 1454,
	3915, 1455, 1456, 189, 1729, 4065, 1720, 1720, 3006, 1453,
	1720, 2007, 2159, 42, 4088, 1720, 42, 2108, 2097, 2098,
	2099, 2100, 2110, 2101, 2102, 2103, 2115, 2111, 2104, 2105,
	2112, 2113, 2114, 2106, 2107, 2109, 2809, 4003, 3932, 3195,
	3914, 4018, 1720, 3845, 2087, 2087, 2085, 2085, 2088, 3814,
	1730, 3198, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483,
	1482, 1484, 1485, 1457, 2809, 3982, 1454, 2053, 1455, 1456,
	1454, 3798, 1455, 1456, 3797, 2631, 1984, 1454, 3649, 1455,
	1456, 3647, 2116, 1988, 3573, 1990, 1991, 1992, 1993, 101,
	1684, 1685, 1997, 1454, 101, 1455, 1456, 2170, 2809, 3978,
	102, 103, 3965, 1720, 2009, 102, 3545, 3929, 3822, 1720,
	2151, 2809, 3810, 3844, 1474, 2153, 2575, 173, 1683, 2158,
	2154, 1682, 3506, 2155, 2156, 2157, 179, 3491, 2152, 2160,
	2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 1475, 1476,
	1477, 1478, 1479, 1480, 1481, 1483, 1482, 1484, 1485, 1720,
	85, 2032, 1457, 85, 2057, 1720, 3545, 1720, 110, 3287,
	1720, 2809, 3543, 1686, 2484, 1720, 3802, 3184, 3466, 1720,
	109, 1457, 108, 2715, 1720, 2623, 2064, 2062, 2015, 2016,
	2108, 2097, 2098, 2099, 2100, 2110, 2101, 2102, 2103, 2115,
	2111, 2104, 2105, 2112, 2113, 2114, 2106, 2107, 2109, 3284,
	1454, 3217, 1455, 1456, 3216, 2290, 3207, 3206, 2091, 2289,
	2892, 2063, 2879, 2065, 2066, 2067, 2068, 2069, 2070, 2072,
	2074, 2075, 2076, 2077, 2078, 2079, 2288, 1457, 3204, 3205,
	2118, 2120, 3202, 3203, 1499, 1681, 1201, 1474, 1207, 3801,
	1720, 1209, 3202, 3201, 2275, 2134, 2135, 2136, 2137, 2544,
	164, 2125, 2543, 1474, 2277, 2169, 1470, 1720, 1471, 2148,
	2506, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1483, 1482,
	1484, 1485, 1472, 1486, 1487, 1469, 2505, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 1483, 1482, 1484, 1485, 2342, 1454,
	2368, 1455, 1456, 2833, 1720, 2184, 1430, 2293, 2294, 103,
	2290, 2324, 110, 2011, 2357, 1457, 2562, 2941, 1454, 2854,
	1455, 1456, 4016, 1720, 109, 1977, 108, 104, 105, 1821,
	2922, 2288, 2915, 2916, 2825, 103, 2854, 2398, 1941, 1457,
	1933, 2370, 2809, 2808, 1457, 2589, 1720, 3553, 2805, 104,
	105, 2090, 1720, 2919, 2182, 1923, 2056, 1919, 1915, 1914,
	1457, 1913, 2335, 103, 2193, 1821, 1820, 3139, 1720, 1764,
	1763, 1457, 1085, 1731, 1454, 1253, 1455, 1456, 3461, 2825,
	2292, 2897, 2855, 2295, 2296, 2485, 2397, 2832, 2407, 2408,
	2409, 2410, 2857, 2402, 1720, 2403, 2404, 2405, 2406, 2855,
	4014, 1720, 2393, 2392, 1036, 1085, 2833, 3169, 3461, 2562,
	2323, 2413, 2414, 2415, 2416, 2374, 3188, 2562, 109, 1457,
	3192, 2589, 2311, 1453, 3891, 1720, 2329, 3191, 2330, 3889,
	1720, 3463, 2427, 3970, 2266, 2267, 2268, 2269, 2270, 2337,
	2334, 2396, 2833, 2484, 3943, 3886, 1720, 2809, 2473, 2833,
	2433, 3461, 1454, 2355, 1455, 1456, 3868, 1720, 3416, 3204,
	3112, 3193, 2379, 2380, 2378, 2381, 3189, 2589, 2715, 3510,
	1069, 3190, 2395, 2394, 2620, 1457, 1454, 1070, 1455, 1456,
	2619, 1454, 2484, 1455, 1456, 2467, 2470, 1453, 1457, 2313,
	2350, 2443, 1457, 1724, 2314, 2193, 165, 1454, 2090, 1455,
	1456, 2033, 2017, 177, 3437, 1720, 1964, 1751, 1454, 1107,
	1455, 1456, 1106, 95, 2428, 1457, 2417, 2419, 2420, 2424,
	3511, 3512, 3513, 2478, 2442, 4044, 2481, 3985, 2482, 2446,
	1025, 1457, 3833, 2454, 1727, 1457, 3799, 3661, 3526, 2498,
	3523, 3504, 3329, 3328, 185, 1823, 2426, 3276, 1124, 2428,
	2477, 2480, 2476, 1457, 1125, 3231, 1454, 1457, 1455, 1456,
	3430, 1720, 1457, 3227, 1859, 2499, 2502, 2923, 1457, 2423,
	2503, 2504, 3229, 3427, 1720, 2418, 3479, 3425, 1720, 1457,
	2593, 2412, 1721, 1723, 1894, 2411, 1948, 166, 171, 168,
	174, 175, 176, 178, 180, 181, 182, 183, 2567, 1457,
	3387, 1720, 1854, 184, 186, 187, 188, 1850, 95, 1819,
	121, 2889, 1454, 2509, 1455, 1456, 3385, 1720, 1457, 2888,
	3381, 1720, 1509, 1197, 1509, 1454, 1457, 1455, 1456, 1454,
	4100, 1455, 1456, 3514, 3280, 1895, 1896, 1897, 3378, 1720,
	2579, 1748, 3376, 1720, 1457, 3473, 3474, 3374, 1720, 1457,
	3834, 2441, 1454, 2592, 1455, 1456, 1457, 2327, 2290, 2537,
	1765, 1457, 2289, 4098, 3372, 1720, 1457, 2889, 1454, 2013,
	1455, 1456, 1454, 3947, 1455, 1456, 4072, 1890, 1728, 2582,
	3515, 3516, 3517, 3951, 3370, 1720, 3873, 1457, 3476, 3223,
	1454, 3222, 1455, 1456, 1454, 3221, 1455, 1456, 3139, 1454,
	3835, 1455, 1456, 3368, 1720, 1454, 2902, 1455, 1456, 2552,
	2538, 3366, 1720, 2341, 3478, 3161, 1454, 1457, 1455, 1456,
	3162, 2333, 1457, 2560, 1891, 1892, 1893, 3159, 1457, 3364,
	1720, 2014, 3160, 3158, 3362, 1720, 1454, 3157, 1455, 1456,
	3467, 3360, 1720, 1904, 3129, 3131, 3358, 1720, 2571, 3117,
	3116, 3356, 1720, 3132, 2057, 1454, 3454, 1455, 1456, 3911,
	3640, 1457, 3642, 1454, 3453, 1455, 1456, 1457, 3163, 3126,
	2842, 2843, 3354, 1720, 1040, 2573, 3457, 1457, 1949, 1963,
	1006, 1454, 1041, 1455, 1456, 3200, 1454, 1457, 1455, 1456,
	2872, 1457, 2585, 1454, 2893, 1455, 1456, 3319, 1454, 1457,
	1455, 1456, 2584, 1454, 1163, 1455, 1456, 3352, 1720, 1162,
	2572, 1985, 2574, 2595, 4079, 3295, 2888, 1457, 1989, 2970,
	3631, 2577, 3630, 2578, 1454, 1421, 1455, 1456, 3459, 2000,
	2001, 2002, 2003, 2004, 2005, 2006, 2580, 1457, 2929, 2759,
	101, 2132, 129, 1457, 2546, 2547, 3350, 1720, 1457, 2549,
	103, 102, 3348, 1720, 1454, 2133, 1455, 1456, 2550, 1454,
	2583, 1455, 1456, 1720, 2629, 1454, 4114, 1455, 1456, 3219,
	3629, 2791, 3334, 1720, 2541, 101, 3317, 1720, 2352, 2353,
	1457, 4023, 103, 3928, 2780, 1720, 102, 1457, 3829, 1024,
	2087, 3199, 2085, 2794, 2846, 2338, 1048, 1049, 1454, 2530,
	1455, 1456, 2778, 1720, 1454, 1457, 1455, 1456, 108, 2529,
	2830, 2831, 2528, 3115, 1454, 2527, 1455, 1456, 2792, 2368,
	1457, 3114, 1024, 2850, 1454, 2526, 1455, 1456, 1454, 3927,
	1455, 1456, 2602, 2753, 1720, 3439, 1454, 2566, 1455, 1456,
	110, 1021, 3899, 3898, 3876, 3648, 2056, 2829, 2795, 2617,
	2797, 42, 109, 2810, 1454, 1457, 1455, 1456, 3646, 3645,
	2847, 3638, 1457, 2849, 3524, 2730, 1720, 110, 1457, 3458,
	3456, 3232, 2722, 1720, 1454, 2468, 1455, 1456, 1837, 109,
	1454, 108, 1455, 1456, 2806, 1454, 1047, 1455, 1456, 110,
	2713, 1720, 109, 3637, 1457, 2848, 2819, 1692, 2782, 3615,
	3447, 109, 2825, 108, 1457, 2711, 1720, 4102, 4101, 1025,
	2805, 3020, 103, 2621, 2875, 2877, 2802, 1454, 1457, 1455,
	1456, 2325, 1745, 1737, 1454, 2036, 1455, 1456, 4101, 2822,
	1457, 2868, 1686, 2807, 114, 115, 2927, 1457, 2852, 4102,
	2698, 1720, 1454, 3917, 1455, 1456, 3490, 2696, 1720, 1038,
	1457, 2856, 2859, 2694, 1720, 2030, 3, 1454, 10, 1455,
	1456, 2433, 2866, 2028, 1457, 97, 9, 1, 1457, 1014,
	2869, 1424, 2127, 2938, 1457, 1423, 3494, 2128, 2891, 2692,
	1720, 1457, 4033, 2894, 2895, 1457, 679, 2880, 2029, 2690,
	1720, 8, 1454, 1457, 1455, 1456, 2315, 1457, 2890, 1454,
	1733, 1455, 1456, 2688, 1720, 1454, 1690, 1455, 1456, 4073,
	4029, 4030, 1457, 2188, 2898, 2686, 1720, 2903, 2904, 2905,
	2899, 1934, 2684, 1720, 1457, 1924, 3556, 2240, 2935, 3830,
	1457, 1454, 3235, 1455, 1456, 2682, 1720, 1842, 2474, 2980,
	2981, 1454, 1457, 1455, 1456, 3522, 1457, 2924, 2925, 2680,
	1720, 2431, 1457, 2678, 1720, 1454, 2914, 1455, 1456, 2676,
	1720, 2934, 1115, 1457, 154, 2390, 1732, 1454, 1457, 1455,
	1456, 3806, 1457, 2391, 1454, 3998, 1455, 1456, 2674, 1720,
	1457, 118, 2672, 1720, 1073, 117, 1118, 1454, 1457, 1455,
	1456, 2959, 2978, 2272, 2997, 1457, 1226, 2670, 1720, 2469,
	3546, 1454, 2962, 1455, 1456, 1454, 2873, 1455, 1456, 2668,
	1720, 1454, 2399, 1455, 1456, 2666, 1720, 1770, 1454, 1768,
	1455, 1456, 1454, 2305, 1455, 1456, 1769, 2664, 1720, 1767,
	1454, 3840, 1455, 1456, 1454, 1772, 1455, 1456, 3528, 1771,
	1721, 2312, 3303, 2622, 3394, 2998, 2936, 2021, 3481, 1454,
	3001, 1455, 1456, 2659, 1720, 714, 2845, 2655, 1720, 1457,
	708, 1454, 192, 1455, 1456, 2653, 1720, 1454, 1759, 1455,
	1456, 1738, 1457, 2646, 1720, 3408, 2336, 1457, 1157, 1454,
	3432, 1455, 1456, 1454, 669, 1455, 1456, 3208, 2507, 1454,
	2979, 1455, 1456, 3022, 675, 1506, 2012, 3113, 1457, 3078,
	1454, 2968, 1455, 1456, 2969, 1454, 2860, 1455, 1456, 1454,
	1457, 1455, 1456, 1067, 1059, 2326, 2796, 1454, 1066, 1455,
	1456, 3807, 3147, 2354, 3451, 1454, 3125, 1455, 1456, 2982,
	3127, 2358, 1454, 2361, 1455, 1456, 2036, 2999, 1457, 2812,
	3130, 3123, 3910, 3085, 2644, 1720, 3639, 3096, 3983, 3087,
	2870, 1734, 3415, 2594, 2122, 1496, 2368, 3428, 3013, 2367,
	3610, 2048, 3393, 739, 2275, 1457, 2275, 738, 736, 3058,
	2798, 1457, 2826, 1460, 2277, 1457, 2277, 944, 2445, 3146,
	2786, 87, 1746, 3389, 2368, 2368, 2368, 2368, 2368, 3000,
	3068, 3069, 3070, 3071, 3072, 3326, 1454, 2370, 1455, 1456,
	2837, 2835, 2834, 2539, 2368, 2375, 3086, 2368, 3088, 1454,
	3096, 1455, 1456, 3475, 1454, 3095, 1455, 1456, 1457, 3471,
	4025, 3151, 1027, 3325, 1974, 2370, 2370, 2370, 2370, 2370,
	2369, 3168, 3120, 2365, 2804, 1454, 3111, 1455, 1456, 3107,
	1457, 895, 894, 748, 740, 2370, 1457, 1454, 2370, 1455,
	1456, 2884, 730, 893, 3118, 3121, 3322, 1457, 892, 3262,
	2776, 3263, 1457, 2944, 3133, 3134, 2838, 2841, 2842, 2843,
	2839, 3252, 2840, 2844, 3277, 1454, 3150, 1455, 1456, 3152,
	3170, 3260, 3155, 3171, 3119, 3153, 3154, 1029, 3156, 104,
	105, 3164, 2946, 2871, 1028, 3108, 3109, 3110, 3172, 3273,
	1438, 1710, 1454, 2775, 1455, 1456, 724, 3178, 1454, 1086,
	1455, 1456, 1454, 1019, 1455, 1456, 3300, 3934, 3210, 3060,
	3209, 3062, 3211, 1457, 2565, 2771, 3323, 1709, 1457, 3941,
	3243, 2770, 3212, 3213, 2036, 3540, 3224, 3073, 3074, 3075,
	3076, 2518, 2769, 3264, 2920, 3261, 3136, 2768, 3265, 1457,
	2535, 2536, 2433, 3233, 2540, 1454, 3254, 1455, 1456, 2461,
	69, 46, 3905, 3271, 3971, 2545, 887, 1457, 884, 3612,
	3613, 1457, 2548, 3142, 3614, 3081, 3082, 1454, 3142, 1455,
	1456, 3954, 3955, 1454, 3288, 1455, 1456, 3291, 3290, 883,
	3956, 2177, 1434, 3298, 1454, 1431, 1455, 1456, 2551, 1454,
	4046, 1455, 1456, 2023, 3308, 96, 3305, 3306, 2767, 3307,
	36, 3255, 3309, 2766, 3311, 35, 3313, 2838, 2841, 2842,
	2843, 2839, 34, 2840, 2844, 33, 32, 3473, 3474, 26,
	25, 24, 23, 22, 2757, 29, 19, 21, 20, 18,
	1509, 3246, 4068, 4113, 1509, 2581, 123, 55, 52, 2586,
	50, 131, 2756, 130, 53, 49, 2755, 1200, 47, 31,
	1454, 30, 1455, 1456, 3234, 1454, 17, 1455, 1456, 16,
	15, 14, 2590, 3410, 2591, 13, 12, 11, 7, 2598,
	3414, 6, 39, 2600, 2601, 38, 1454, 37, 1455, 1456,
	28, 3299, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614,
	2615, 2616, 27, 2618, 1454, 40, 1455, 1456, 1454, 4,
	1455, 1456, 2907, 2463, 0, 3145, 0, 0, 0, 0,
	2368, 0, 0, 0, 0, 0, 2624, 2625, 2626, 2627,
	2628, 0, 2630, 3488, 0, 3443, 2632, 3440, 3441, 3455,
	2637, 2638, 0, 2639, 3448, 0, 2642, 0, 2643, 2645,
	2647, 2648, 2649, 2650, 2651, 2652, 2654, 2656, 2657, 2658,
	2660, 2370, 2662, 2663, 2665, 2667, 2669, 2671, 2673, 2675,
	2677, 2679, 2681, 2683, 2685, 2687, 2689, 2691, 2693, 2695,
	2697, 2699, 2700, 2701, 3480, 2703, 3477, 2705, 3460, 2707,
	2708, 3489, 2710, 2712, 2714, 3264, 3483, 3261, 2717, 3445,
	3265, 3482, 2721, 1457, 0, 0, 2726, 2727, 2728, 2729,
	0, 1457, 3505, 0, 3507, 1457, 0, 0, 0, 2740,
	2741, 2742, 2743, 2744, 2745, 1457, 0, 2749, 2750, 1457,
	3293, 3294, 3470, 1457, 0, 2752, 3499, 3500, 1457, 3417,
	2758, 3419, 3420, 3421, 0, 0, 2761, 2762, 2763, 2764,
	2765, 3484, 3485, 0, 0, 0, 1457, 2772, 2773, 0,
	2774, 1457, 0, 2777, 2779, 2336, 0, 2781, 0, 0,
	3550, 3551, 1457, 0, 0, 0, 0, 2793, 0, 0,
	0, 0, 0, 0, 0, 0, 1457, 0, 2754, 3533,
	0, 3552, 0, 3537, 3538, 3539, 2751, 0, 0, 1457,
	2746, 0, 0, 1457, 0, 0, 0, 0, 0, 0,
	2739, 0, 0, 0, 2738, 0, 0, 3568, 2737, 3529,
	3530, 0, 1457, 2736, 0, 0, 0, 0, 0, 0,
	0, 0, 1457, 0, 0, 0, 1457, 0, 0, 0,
	1454, 2735, 1455, 1456, 0, 1457, 2734, 0, 1454, 1457,
	1455, 1456, 1454, 0, 1455, 1456, 1457, 2733, 0, 2851,
	0, 0, 1454, 0, 1455, 1456, 1454, 0, 1455, 1456,
	1454, 2732, 1455, 1456, 0, 1454, 0, 1455, 1456, 3618,
	1457, 3619, 3620, 3621, 2731, 0, 0, 0, 2725, 3628,
	0, 3632, 3633, 1454, 1457, 1455, 1456, 0, 1454, 0,
	1455, 1456, 0, 0, 0, 3608, 0, 2724, 0, 1454,
	0, 1455, 1456, 1457, 3146, 0, 87, 2723, 3146, 0,
	0, 2720, 3634, 1454, 0, 1455, 1456, 0, 0, 1457,
	2719, 0, 0, 2900, 2718, 0, 1454, 0, 1455, 1456,
	1454, 2716, 1455, 1456, 1457, 3572, 2087, 0, 2085, 3663,
	0, 0, 3635, 3655, 1457, 0, 3644, 42, 3643, 1454,
	1457, 1455, 1456, 0, 1457, 2709, 3653, 3651, 0, 1454,
	0, 1455, 1456, 1454, 0, 1455, 1456, 0, 0, 2706,
	0, 0, 1454, 3813, 1455, 1456, 1454, 0, 1455, 1456,
	3667, 0, 0, 1454, 0, 1455, 1456, 0, 2704, 2949,
	2950, 2951, 2952, 2953, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2702, 0, 0, 1454, 0, 1455,
	1456, 0, 3804, 2036, 2963, 0, 3805, 0, 0, 2661,
	0, 1454, 0, 1455, 1456, 3820, 0, 3803, 0, 2641,
	0, 0, 3832, 3825, 3824, 2640, 0, 0, 2971, 2636,
	1454, 0, 1455, 1456, 3870, 3871, 3008, 3009, 3010, 3011,
	3012, 0, 0, 3664, 3665, 3657, 1454, 0, 1455, 1456,
	0, 0, 2087, 0, 2085, 3874, 3017, 0, 3815, 3816,
	3817, 1454, 0, 1455, 1456, 0, 0, 0, 0, 0,
	3599, 1454, 0, 1455, 1456, 0, 0, 1454, 0, 1455,
	1456, 1454, 0, 1455, 1456, 3146, 0, 3142, 0, 3877,
	0, 3659, 0, 3880, 3808, 0, 0, 0, 0, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1644, 1645, 1646, 1647, 1661, 1662, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 728, 3921,
	3145, 3875, 3918, 3903, 3145, 3900, 3901, 1457, 3902, 1718,
	1714, 1457, 3935, 0, 0, 1457, 0, 0, 1718, 1714,
	0, 0, 0, 0, 1715, 0, 0, 0, 0, 0,
	87, 3920, 0, 1715, 3148, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2331,
	2332, 1717, 3166, 1716, 0, 3924, 0, 0, 1711, 1712,
	1717, 3937, 1716, 0, 0, 0, 3940, 3942, 0, 3812,
	0, 42, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3909,
	0, 0, 2634, 0, 0, 0, 2599, 0, 0, 0,
	2588, 0, 0, 0, 0, 0, 0, 1046, 0, 0,
	1052, 1052, 0, 0, 0, 0, 0, 0, 0, 0,
	3960, 0, 0, 3961, 3980, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 0, 0, 3926, 3220, 0,
	0, 0, 0, 3969, 1454, 0, 1455, 1456, 1454, 0,
	1455, 1456, 1454, 0, 1455, 1456, 3976, 0, 0, 0,
	3986, 0, 0, 0, 3258, 0, 3984, 3997, 3989, 0,
	42, 3945, 3994, 3991, 3990, 3988, 3993, 3992, 3272, 3297,
	3832, 4000, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3145, 0, 4021, 0, 0, 0, 3289, 0, 0,
	3292, 3314, 3315, 4042, 3316, 0, 3318, 3320, 4032, 4024,
	4011, 4037, 4050, 0, 0, 0, 4052, 0, 0, 0,
	3327, 0, 0, 0, 4063, 3331, 3332, 3333, 3335, 3336,
	3337, 3338, 3339, 3340, 3341, 3342, 3343, 3344, 3345, 3346,
	3347, 3349, 3351, 3353, 3355, 3357, 3359, 3361, 3363, 3365,
	3367, 3369, 3371, 3373, 3375, 3377, 3379, 3380, 3382, 3383,
	3384, 3386, 4011, 4083, 3388, 1974, 3390, 3391, 3392, 4082,
	4086, 3396, 3397, 3398, 3399, 3400, 3401, 3402, 3403, 3404,
	3405, 3406, 4099, 2087, 4097, 2085, 4096, 4093, 4095, 4092,
	3413, 4067, 4062, 4107, 3418, 0, 3981, 0, 3422, 3423,
	0, 3424, 3426, 4115, 3429, 3431, 0, 3433, 3434, 3435,
	3436, 4123, 4121, 3142, 0, 3442, 0, 0, 0, 3949,
	0, 0, 0, 0, 0, 0, 0, 3959, 0, 0,
	0, 0, 4132, 4133, 3871, 4131, 0, 0, 0, 4011,
	0, 2087, 0, 2085, 4130, 0, 0, 0, 3933, 3444,
	3464, 3465, 0, 0, 3469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4080, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4058, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3518, 0, 0, 3519, 3520, 3521,
	3544, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	0, 151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3563, 0, 0, 3567, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3578, 0, 0, 0, 169, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 139, 161, 160, 189, 0, 0, 0, 0, 0,
	4066, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1787, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3609, 0, 0, 0, 0, 0, 0, 0, 3616,
	0, 0, 0, 190, 0, 0, 1787, 0, 0, 0,
	0, 0, 0, 0, 0, 2913, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 0,
	151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 155, 136, 158, 143, 135,
	0, 156, 157, 0, 0, 0, 0, 0, 173, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 144, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 150, 0,
	0, 0, 147, 145, 140, 141, 142, 146, 0, 0,
	0, 0, 0, 0, 137, 0, 0, 169, 0, 0,
	170, 0, 0, 148, 0, 0, 1775, 0, 1458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	1846, 161, 160, 189, 3821, 0, 0, 0, 0, 0,
	0, 0, 0, 3828, 0, 0, 0, 0, 1514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 3838, 3839, 0, 3841, 0, 3842, 3843,
	0, 0, 0, 3846, 3847, 3848, 3849, 3850, 3851, 3852,
	3853, 3854, 3855, 3856, 3857, 3858, 3859, 3860, 3861, 3862,
	3863, 3864, 3865, 3866, 3867, 0, 3869, 3872, 0, 0,
	1788, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3881, 3882, 3883, 3884, 3885, 3887, 3888, 3890,
	3892, 3893, 3895, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 1847, 158, 0, 1844, 0,
	156, 157, 0, 0, 0, 0, 1788, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	3925, 0, 1801, 1804, 1805, 1806, 1807, 1808, 1809, 0,
	1810, 1811, 1813, 1814, 1812, 1815, 1816, 1789, 1790, 1791,
	1792, 1773, 1774, 1802, 0, 1776, 0, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 0, 159, 1786, 1793,
	1794, 1795, 1796, 0, 1797, 1798, 1799, 1800, 1801, 1804,
	1805, 1806, 1807, 1808, 1809, 0, 1810, 1811, 1813, 1814,
	1812, 1815, 1816, 1789, 1790, 1791, 1792, 1773, 1774, 1802,
	0, 1776, 0, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 0, 0, 1786, 1793, 1794, 1795, 1796, 0,
	1797, 1798, 1799, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1736, 165, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3946, 0, 0, 0, 3950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 3966, 0,
	0, 0, 0, 0, 3967, 3968, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1803, 0, 0, 3979, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 940, 166, 171,
	168, 174, 175, 176, 178, 180, 181, 182, 183, 0,
	0, 0, 4005, 4006, 184, 186, 187, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 4013, 4015, 4017, 1803,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4045, 0, 195, 152, 0, 195, 153, 0, 0,
	712, 0, 0, 0, 0, 718, 0, 0, 0, 0,
	0, 0, 1978, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 4064,
	0, 0, 195, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 718, 195, 718,
	0, 0, 0, 4087, 4089, 4091, 0, 0, 0, 0,
	0, 0, 0, 190, 185, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4112, 0, 129, 0,
	151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 4124, 4125, 0, 166, 171, 168,
	174, 175, 176, 178, 180, 181, 182, 183, 0, 0,
	0, 0, 0, 184, 186, 187, 188, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	1846, 161, 160, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2043, 2044, 2045, 2046, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2054, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 1847, 158, 0, 1844, 0,
	156, 157, 2093, 2094, 0, 0, 0, 173, 2117, 1052,
	1052, 2121, 0, 0, 0, 2126, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147,
	0, 2149, 0, 0, 0, 2171, 2172, 2173, 2174, 2175,
	2176, 2178, 0, 2183, 0, 2185, 2186, 2187, 0, 2189,
	2190, 2191, 0, 2194, 2195, 2196, 2197, 2198, 2199, 2200,
	2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210,
	2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220,
	2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230,
	2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2243,
	2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253,
	2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263,
	2264, 2265, 0, 0, 0, 0, 0, 2271, 0, 2273,
	164, 2280, 2281, 2282, 2283, 2284, 2285, 1052, 0, 1052,
	1052, 1052, 1052, 1052, 0, 0, 0, 0, 0, 0,
	2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 0, 2306,
	2307, 2308, 2309, 2310, 0, 0, 0, 0, 0, 0,
	0, 0, 86, 44, 45, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 92, 0, 0, 0, 48, 76, 77, 1052,
	74, 78, 0, 0, 0, 0, 0, 0, 0, 75,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2348, 2349, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 0,
	0, 0, 0, 0, 0, 0, 0, 2387, 0, 0,
	95, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 0,
	195, 0, 0, 195, 0, 0, 83, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2429, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 718, 0, 718, 718, 0,
	0, 0, 0, 0, 152, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 718, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 54, 57, 56, 59, 0, 73, 0, 0, 82,
	79, 957, 0, 2279, 0, 0, 958, 0, 0, 0,
	0, 0, 0, 0, 185, 0, 2086, 0, 0, 0,
	0, 0, 0, 61, 91, 90, 0, 0, 71, 72,
	58, 0, 0, 0, 0, 0, 80, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 171, 168,
	174, 175, 176, 178, 180, 181, 182, 183, 0, 0,
	0, 0, 0, 184, 186, 187, 188, 0, 63, 64,
	0, 65, 66, 67, 68, 0, 0, 0, 0, 0,
	0, 964, 965, 966, 967, 968, 969, 970, 971, 972,
	973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 60, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2603, 2604, 2605, 2606, 0, 0, 0,
	0, 0, 89, 0, 0, 195, 0, 0, 0, 718,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 1514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	718, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	0, 94, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1501, 0, 0, 0, 0, 0, 718, 718,
	0, 718, 0, 718, 718, 0, 718, 718, 718, 718,
	718, 718, 0, 0, 0, 0, 0, 0, 0, 1501,
	0, 0, 1501, 718, 1501, 195, 0, 0, 0, 957,
	0, 0, 0, 0, 958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2086, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 718, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 718, 0, 195, 0, 0, 1736,
	0, 0, 0, 0, 0, 0, 70, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	195, 195, 195, 195, 195, 195, 195, 195, 718, 964,
	965, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 718, 718, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2975, 0, 718, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1052, 0,
	0, 3002, 3003, 0, 0, 3005, 0, 0, 3007, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3014, 3015,
	3016, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	3021, 0, 0, 3023, 3024, 3025, 1501, 0, 0, 3026,
	3027, 0, 0, 3028, 0, 3029, 0, 0, 0, 0,
	0, 0, 3030, 1501, 3031, 0, 0, 0, 3032, 0,
	3033, 0, 0, 3034, 0, 3035, 0, 3036, 0, 3037,
	0, 3038, 0, 3039, 0, 3040, 0, 3041, 0, 3042,
	0, 3043, 0, 3044, 0, 3045, 0, 3046, 0, 3047,
	0, 3048, 0, 3049, 0, 3050, 0, 3051, 0, 0,
	0, 3052, 0, 3053, 0, 3054, 0, 0, 3055, 0,
	3056, 0, 3057, 0, 2243, 3059, 0, 0, 3061, 0,
	0, 3063, 3064, 3065, 3066, 0, 0, 0, 0, 3067,
	2243, 2243, 2243, 2243, 2243, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3077, 0, 0, 0, 0,
	0, 0, 0, 3090, 0, 0, 3094, 0, 1052, 0,
	0, 0, 0, 0, 0, 3097, 3098, 3099, 3100, 3101,
	3102, 0, 0, 0, 3103, 3104, 0, 3105, 0, 3106,
	0, 0, 0, 0, 0, 0, 0, 2291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3137, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 718, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 718, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 0, 0, 0, 718,
	0, 0, 2291, 195, 0, 195, 0, 195, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 0, 0,
	3230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3321, 0, 939, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 0, 718, 0, 0, 0, 718, 718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 697,
	0, 0, 0, 0, 0, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 195, 0, 0, 195, 0, 195, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 195, 0, 0, 717, 0, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	95, 0, 0, 957, 0, 0, 0, 945, 958, 959,
	960, 961, 946, 0, 0, 947, 948, 0, 949, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 954, 962, 963, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3525, 0, 1501, 0,
	2291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3549,
	0, 3266, 3267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 0, 3569, 0, 3570, 0,
	0, 3571, 0, 0, 3574, 3575, 0, 0, 0, 0,
	0, 0, 0, 3579, 0, 0, 0, 0, 0, 0,
	0, 0, 897, 0, 0, 0, 0, 3580, 0, 3581,
	0, 3582, 0, 3583, 0, 3584, 3268, 3585, 0, 3586,
	0, 3587, 0, 3588, 0, 3589, 0, 3590, 0, 3591,
	0, 3592, 0, 3593, 0, 3594, 0, 3595, 0, 0,
	3596, 0, 0, 0, 3597, 0, 3598, 0, 0, 0,
	0, 0, 3600, 0, 0, 0, 0, 0, 193, 0,
	0, 664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3617, 0, 0, 0, 0,
	0, 664, 0, 0, 3622, 0, 3623, 3624, 0, 3625,
	0, 3626, 0, 3269, 3270, 0, 3627, 1034, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 0, 1053, 1053, 0, 0, 0, 0,
	195, 3652, 0, 664, 0, 0, 0, 0, 0, 0,
	0, 718, 3660, 0, 0, 3662, 0, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 3666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3800, 0, 0, 195, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 910, 0, 0,
	0, 0, 0, 914, 0, 0, 0, 911, 912, 0,
	0, 0, 913, 915, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	0, 0, 896, 0, 0, 195, 0, 0, 0, 0,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3908, 0, 1501, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	716, 195, 195, 195, 195, 195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 195, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 1077, 0, 1084, 717, 1417, 717, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3948,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3962, 718, 0, 3963, 0,
	3964, 0, 0, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 718, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1500, 0,
	0, 718, 0, 0, 0, 1501, 0, 0, 718, 718,
	1501, 195, 195, 195, 195, 195, 0, 0, 0, 0,
	0, 0, 0, 195, 4043, 0, 0, 0, 0, 195,
	0, 195, 0, 0, 195, 195, 195, 0, 0, 0,
	0, 0, 0, 664, 0, 664, 0, 0, 664, 0,
	0, 0, 0, 4059, 0, 4060, 0, 4061, 0, 717,
	717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 718, 0, 0, 1501, 0, 0, 0,
	717, 718, 0, 664, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 717, 0, 0, 0, 0,
	195, 0, 0, 0, 0, 0, 1818, 4110, 0, 4111,
	0, 0, 0, 1502, 0, 0, 1827, 0, 0, 195,
	0, 0, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 717,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 1862,
	0, 0, 1500, 1864, 0, 0, 1867, 1868, 717, 717,
	0, 717, 0, 717, 717, 0, 717, 717, 717, 717,
	717, 717, 0, 0, 0, 0, 0, 0, 0, 1500,
	1899, 1900, 1500, 717, 1500, 0, 1905, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1967, 0, 0, 717, 0, 718, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 0, 0, 0, 0, 0, 0, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1264, 0, 1264, 1264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1502, 0, 0, 0, 0, 0, 0,
	0, 0, 1429, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 0, 0, 0, 0, 0, 195, 0, 0, 195,
	195, 195, 0, 0, 0, 0, 0, 0, 0, 718,
	718, 0, 0, 0, 0, 1034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 664, 718, 718,
	718, 718, 0, 0, 0, 717, 717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1502, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1502, 0, 717, 1502, 0, 1502,
	664, 0, 0, 0, 0, 0, 1500, 0, 0, 0,
	0, 0, 0, 0, 0, 2095, 0, 0, 0, 0,
	1921, 0, 0, 1500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 664, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 0,
	0, 0, 0, 0, 0, 664, 0, 0, 0, 0,
	195, 0, 0, 0, 1998, 1999, 664, 664, 664, 664,
	664, 664, 664, 0, 1696, 1697, 0, 0, 0, 1501,
	0, 0, 0, 0, 718, 0, 718, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 717, 0, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 0, 0,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 718, 1077, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 717, 0, 0, 0,
	0, 0, 0, 1870, 1870, 0, 1870, 0, 1870, 1870,
	0, 1879, 1870, 1870, 1870, 1870, 1870, 0, 0, 0,
	0, 0, 0, 0, 0, 717, 0, 0, 1077, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 717,
	0, 0, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	718, 718, 717, 1947, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 717,
	0, 0, 0, 1264, 0, 0, 2451, 2452, 2453, 0,
	0, 1502, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1053, 1053, 0, 717, 0, 1502, 0,
	0, 0, 717, 1862, 0, 0, 1862, 0, 1862, 0,
	0, 0, 0, 0, 2483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 717,
	0, 0, 0, 0, 717, 0, 0, 0, 717, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 718, 195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1053, 1973, 1053, 1053, 1053, 1053, 1053, 0, 0,
	1264, 1264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2024, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 717,
	0, 0, 0, 0, 0, 0, 1921, 0, 0, 0,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 0,
	0, 0, 0, 1053, 0, 1501, 0, 718, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1034, 0, 0,
	0, 2081, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 718, 2291, 0, 0, 0, 0, 1973, 664, 0,
	664, 0, 664, 2377, 0, 0, 0, 0, 1500, 0,
	717, 0, 0, 718, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 718, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 0, 195, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 718, 0, 718, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1264, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2328, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 664, 0, 0, 0, 0, 0, 0, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 664, 664, 0,
	2340, 664, 0, 2542, 0, 0, 0, 0, 0, 0,
	0, 0, 664, 0, 1742, 0, 0, 1264, 0, 664,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 717, 0, 0, 0, 0, 0, 1077, 0, 0,
	0, 0, 717, 0, 0, 664, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2864, 0, 0,
	0, 0, 0, 0, 1084, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1077, 0, 1502, 0, 1973, 0, 1084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 717, 0, 0, 0,
	0, 0, 0, 717, 1077, 0, 0, 1862, 1862, 2081,
	0, 0, 717, 2081, 2081, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1500, 2937,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2554, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 664, 0, 0,
	0, 0, 0, 0, 0, 1921, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 664, 0, 0, 0, 0, 664, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 0, 0, 0, 0, 0, 0, 2906, 0, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 717, 0, 0, 0, 1500, 0, 0, 717, 717,
	1500, 0, 0, 1502, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 664, 664, 664,
	664, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	664, 664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3215, 0, 0, 0, 664, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2799, 0, 0, 0,
	0, 0, 0, 717, 0, 0, 1500, 2814, 0, 0,
	0, 717, 1053, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2896, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2340, 0, 0, 0, 0, 0, 0, 2921, 0,
	0, 0, 0, 0, 0, 0, 0, 2926, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1053, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2081, 0,
	1502, 0, 0, 0, 0, 1502, 664, 664, 664, 664,
	664, 0, 0, 0, 0, 0, 0, 0, 3165, 0,
	0, 0, 0, 0, 1921, 3493, 664, 0, 0, 664,
	3173, 1973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2081, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 717,
	717, 0, 0, 0, 0, 664, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1502, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 664, 0, 0, 717, 717,
	717, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 664, 0, 0, 664, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3079, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1264, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3122, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1264, 0, 0, 0,
	0, 0, 0, 3149, 1870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 664, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1500,
	0, 0, 0, 0, 717, 0, 717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1077, 0,
	0, 0, 0, 0, 0, 0, 2340, 0, 0, 0,
	0, 0, 664, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 717, 0, 0, 0, 0, 0,
	0, 664, 0, 0, 0, 0, 0, 0, 0, 0,
	717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 664, 0, 717, 664, 664, 664, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 717, 0, 0, 0,
	717, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3409, 0, 0, 0, 0, 0, 0, 0, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1921, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1502, 0, 0, 717, 0, 0,
	0, 0, 0, 0, 2340, 2340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3557, 3558, 3559, 3560, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1921, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1500, 0, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 717, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3656,
	0, 3658, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 717, 0, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1264, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1921, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 664, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3896, 0, 0, 0, 3896, 3896, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2340, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3999, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1921, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1973, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3973, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3977, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1264, 1264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4019, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4027, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3973, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 3409, 0, 4027, 1399,
	1400, 1385, 520, 0, 1327, 1403, 1296, 1315, 1413, 1318,
	1321, 1364, 1274, 1342, 411, 1312, 1267, 1300, 1269, 1307,
	1270, 1298, 1329, 269, 1295, 1387, 1346, 1402, 362, 266,
	1276, 1301, 425, 1317, 203, 1366, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	1409, 366, 1352, 0, 491, 396, 0, 0, 0, 1331,
	1391, 1340, 1378, 1326, 1365, 1284, 1351, 1404, 1313, 1361,
	1405, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 4001, 941, 0, 0, 0, 0, 4002, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	1309, 1358, 1398, 1310, 1360, 264, 319, 271, 263, 572,
	1410, 1390, 1273, 1339, 1397, 1334, 0, 0, 228, 1401,
	1333, 0, 1363, 0, 1416, 1268, 1354, 0, 1271, 1275,
	1412, 1395, 1304, 274, 0, 0, 0, 0, 0, 0,
	0, 1330, 1341, 1375, 1379, 1324, 0, 0, 0, 0,
	0, 0, 0, 0, 1302, 0, 1350, 0, 0, 0,
	1280, 1272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1328, 0, 0, 0, 0, 1283,
	0, 1303, 1376, 0, 1266, 296, 1277, 397, 256, 0,
	448, 1383, 1394, 1325, 616, 1396, 1323, 1322, 1370, 1281,
	1389, 1316, 361, 1279, 328, 197, 224, 0, 1314, 407,
	456, 468, 1388, 1299, 1308, 252, 1306, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 1349, 1368, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 1278,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 1294, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 1384,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 1373, 1415,
	420, 467, 239, 596, 490, 199, 1288, 1293, 1286, 0,
	253, 254, 1355, 567, 1289, 1287, 1344, 1345, 1290, 1406,
	1407, 1408, 1392, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 1377, 1282, 0, 1291, 1292, 1386, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 1348, 196, 220, 364,
	1411, 449, 287, 637, 606, 601, 205, 222, 1285, 261,
	1297, 1305, 1311, 1319, 1320, 1332, 1335, 1336, 1337, 1338,
	1356, 1357, 1359, 1367, 1369, 1372, 1374, 1381, 1393, 1414,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 431, 432, 434, 436, 438, 450,
	455, 469, 470, 471, 472, 473, 476, 477, 482, 483,
	484, 485, 486, 494, 495, 508, 578, 580, 595, 613,
	619, 475, 299, 300, 439, 440, 312, 313, 633, 634,
	298, 590, 620, 588, 632, 614, 433, 374, 1347, 1353,
	377, 280, 303, 318, 1362, 605, 496, 226, 461, 289,
	250, 1380, 1382, 210, 245, 229, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 243, 454, 240, 479,
	511, 512, 513, 515, 391, 265, 428, 1343, 1371, 372,
	568, 569, 314, 392, 0, 0, 0, 1399, 1400, 1385,
	520, 0, 1327, 1403, 1296, 1315, 1413, 1318, 1321, 1364,
	1274, 1342, 411, 1312, 1267, 1300, 1269, 1307, 1270, 1298,
	1329, 269, 1295, 1387, 1346, 1402, 362, 266, 1276, 1301,
	425, 1317, 203, 1366, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 1409, 366,
	1352, 0, 491, 396, 0, 0, 0, 1331, 1391, 1340,
	1378, 1326, 1365, 1284, 1351, 1404, 1313, 1361, 1405, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 1309, 1358,
	1398, 1310, 1360, 264, 319, 271, 263, 572, 1410, 1390,
	1273, 1339, 1397, 1334, 0, 0, 228, 1401, 1333, 0,
	1363, 0, 1416, 1268, 1354, 0, 1271, 1275, 1412, 1395,
	1304, 274, 0, 0, 0, 0, 0, 0, 0, 1330,
	1341, 1375, 1379, 1324, 0, 0, 0, 0, 0, 0,
	3174, 0, 1302, 0, 1350, 0, 0, 0, 1280, 1272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1328, 0, 0, 0, 0, 1283, 0, 1303,
	1376, 0, 1266, 296, 1277, 397, 256, 0, 448, 1383,
	1394, 1325, 616, 1396, 1323, 1322, 1370, 1281, 1389, 1316,
	361, 1279, 328, 197, 224, 0, 1314, 407, 456, 468,
	1388, 1299, 1308, 252, 1306, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 1349, 1368, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 1278, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 1294, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 1384, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 1373, 1415, 420, 467,
	239, 596, 490, 199, 1288, 1293, 1286, 0, 253, 254,
	1355, 567, 1289, 1287, 1344, 1345, 1290, 1406, 1407, 1408,
	1392, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 1377,
	1282, 0, 1291, 1292, 1386, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 1348, 196, 220, 364, 1411, 449,
	287, 637, 606, 601, 205, 222, 1285, 261, 1297, 1305,
	1311, 1319, 1320, 1332, 1335, 1336, 1337, 1338, 1356, 1357,
	1359, 1367, 1369, 1372, 1374, 1381, 1393, 1414, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	299, 300, 439, 440, 312, 313, 633, 634, 298, 590,
	620, 588, 632, 614, 433, 374, 1347, 1353, 377, 280,
	303, 318, 1362, 605, 496, 226, 461, 289, 250, 1380,
	1382, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 1343, 1371, 372, 568, 569,
	314, 392, 0, 0, 0, 1399, 1400, 1385, 520, 0,
	1327, 1403, 1296, 1315, 1413, 1318, 1321, 1364, 1274, 1342,
	411, 1312, 1267, 1300, 1269, 1307, 1270, 1298, 1329, 269,
	1295, 1387, 1346, 1402, 362, 266, 1276, 1301, 425, 1317,
	203, 1366, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 1409, 366, 1352, 0,
	491, 396, 0, 0, 0, 1331, 1391, 1340, 1378, 1326,
	1365, 1284, 1351, 1404, 1313, 1361, 1405, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 0, 707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 1309, 1358, 1398, 1310,
	1360, 264, 319, 271, 263, 572, 1410, 1390, 1273, 1339,
	1397, 1334, 0, 0, 228, 1401, 1333, 0, 1363, 0,
	1416, 1268, 1354, 0, 1271, 1275, 1412, 1395, 1304, 274,
	0, 0, 0, 0, 0, 0, 0, 1330, 1341, 1375,
	1379, 1324, 0, 0, 0, 0, 0, 0, 3135, 0,
	1302, 0, 1350, 0, 0, 0, 1280, 1272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1328, 0, 0, 0, 0, 1283, 0, 1303, 1376, 0,
	1266, 296, 1277, 397, 256, 0, 448, 1383, 1394, 1325,
	616, 1396, 1323, 1322, 1370, 1281, 1389, 1316, 361, 1279,
	328, 197, 224, 0, 1314, 407, 456, 468, 1388, 1299,
	1308, 252, 1306, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 1349, 1368, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 1278, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 1294, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 1384, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 1373, 1415, 420, 467, 239, 596,
	490, 199, 1288, 1293, 1286, 0, 253, 254, 1355, 567,
	1289, 1287, 1344, 1345, 1290, 1406, 1407, 1408, 1392, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 1377, 1282, 0,
	1291, 1292, 1386, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 1348, 196, 220, 364, 1411, 449, 287, 637,
	606, 601, 205, 222, 1285, 261, 1297, 1305, 1311, 1319,
	1320, 1332, 1335, 1336, 1337, 1338, 1356, 1357, 1359, 1367,
	1369, 1372, 1374, 1381, 1393, 1414, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	431, 432, 434, 436, 438, 450, 455, 469, 470, 471,
	472, 473, 476, 477, 482, 483, 484, 485, 486, 494,
	495, 508, 578, 580, 595, 613, 619, 475, 299, 300,
	439, 440, 312, 313, 633, 634, 298, 590, 620, 588,
	632, 614, 433, 374, 1347, 1353, 377, 280, 303, 318,
	1362, 605, 496, 226, 461, 289, 250, 1380, 1382, 210,
	245, 229, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 243, 454, 240, 479, 511, 512, 513, 515,
	391, 265, 428, 1343, 1371, 372, 568, 569, 314, 392,
	0, 0, 0, 1399, 1400, 1385, 520, 0, 1327, 1403,
	1296, 1315, 1413, 1318, 1321, 1364, 1274, 1342, 411, 1312,
	1267, 1300, 1269, 1307, 1270, 1298, 1329, 269, 1295, 1387,
	1346, 1402, 362, 266, 1276, 1301, 425, 1317, 203, 1366,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 1409, 366, 1352, 0, 491, 396,
	0, 0, 0, 1331, 1391, 1340, 1378, 1326, 1365, 1284,
	1351, 1404, 1313, 1361, 1405, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 0, 941, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 1309, 1358, 1398, 1310, 1360, 264,
	319, 271, 263, 572, 1410, 1390, 1273, 1339, 1397, 1334,
	0, 0, 228, 1401, 1333, 0, 1363, 0, 1416, 1268,
	1354, 0, 1271, 1275, 1412, 1395, 1304, 274, 0, 0,
	0, 0, 0, 0, 0, 1330, 1341, 1375, 1379, 1324,
	0, 0, 0, 0, 0, 0, 2356, 0, 1302, 0,
	1350, 0, 0, 0, 1280, 1272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1328, 0,
	0, 0, 0, 1283, 0, 1303, 1376, 0, 1266, 296,
	1277, 397, 256, 0, 448, 1383, 1394, 1325, 616, 1396,
	1323, 1322, 1370, 1281, 1389, 1316, 361, 1279, 328, 197,
	224, 0, 1314, 407, 456, 468, 1388, 1299, 1308, 252,
	1306, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 1349, 1368, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 1278, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	1294, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 1384, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 1373, 1415, 420, 467, 239, 596, 490, 199,
	1288, 1293, 1286, 0, 253, 254, 1355, 567, 1289, 1287,
	1344, 1345, 1290, 1406, 1407, 1408, 1392, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 1377, 1282, 0, 1291, 1292,
	1386, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	1348, 196, 220, 364, 1411, 449, 287, 637, 606, 601,
	205, 222, 1285, 261, 1297, 1305, 1311, 1319, 1320, 1332,
	1335, 1336, 1337, 1338, 1356, 1357, 1359, 1367, 1369, 1372,
	1374, 1381, 1393, 1414, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 431, 432,
	434, 436, 438, 450, 455, 469, 470, 471, 472, 473,
	476, 477, 482, 483, 484, 485, 486, 494, 495, 508,
	578, 580, 595, 613, 619, 475, 299, 300, 439, 440,
	312, 313, 633, 634, 298, 590, 620, 588, 632, 614,
	433, 374, 1347, 1353, 377, 280, 303, 318, 1362, 605,
	496, 226, 461, 289, 250, 1380, 1382, 210, 245, 229,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	243, 454, 240, 479, 511, 512, 513, 515, 391, 265,
	428, 1343, 1371, 372, 568, 569, 314, 392, 0, 0,
	0, 1399, 1400, 1385, 520, 0, 1327, 1403, 1296, 1315,
	1413, 1318, 1321, 1364, 1274, 1342, 411, 1312, 1267, 1300,
	1269, 1307, 1270, 1298, 1329, 269, 1295, 1387, 1346, 1402,
	362, 266, 1276, 1301, 425, 1317, 203, 1366, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 1409, 366, 1352, 0, 491, 396, 0, 0,
	0, 1331, 1391, 1340, 1378, 1326, 1365, 1284, 1351, 1404,
	1313, 1361, 1405, 321, 247, 323, 202, 408, 492, 285,
	0, 95, 0, 0, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 1309, 1358, 1398, 1310, 1360, 264, 319, 271,
	263, 572, 1410, 1390, 1273, 1339, 1397, 1334, 0, 0,
	228, 1401, 1333, 0, 1363, 0, 1416, 1268, 1354, 0,
	1271, 1275, 1412, 1395, 1304, 274, 0, 0, 0, 0,
	0, 0, 0, 1330, 1341, 1375, 1379, 1324, 0, 0,
	0, 0, 0, 0, 0, 0, 1302, 0, 1350, 0,
	0, 0, 1280, 1272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1328, 0, 0, 0,
	0, 1283, 0, 1303, 1376, 0, 1266, 296, 1277, 397,
	256, 0, 448, 1383, 1394, 1325, 616, 1396, 1323, 1322,
	1370, 1281, 1389, 1316, 361, 1279, 328, 197, 224, 0,
	1314, 407, 456, 468, 1388, 1299, 1308, 252, 1306, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 1349,
	1368, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 1278, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 1294, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 1384, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	1373, 1415, 420, 467, 239, 596, 490, 199, 1288, 1293,
	1286, 0, 253, 254, 1355, 567, 1289, 1287, 1344, 1345,
	1290, 1406, 1407, 1408, 1392, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 1377, 1282, 0, 1291, 1292, 1386, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 1348, 196,
	220, 364, 1411, 449, 287, 637, 606, 601, 205, 222,
	1285, 261, 1297, 1305, 1311, 1319, 1320, 1332, 1335, 1336,
	1337, 1338, 1356, 1357, 1359, 1367, 1369, 1372, 1374, 1381,
	1393, 1414, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 299, 300, 439, 440, 312, 313,
	633, 634, 298, 590, 620, 588, 632, 614, 433, 374,
	1347, 1353, 377, 280, 303, 318, 1362, 605, 496, 226,
	461, 289, 250, 1380, 1382, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 1343,
	1371, 372, 568, 569, 314, 392, 0, 0, 0, 1399,
	1400, 1385, 520, 0, 1327, 1403, 1296, 1315, 1413, 1318,
	1321, 1364, 1274, 1342, 411, 1312, 1267, 1300, 1269, 1307,
	1270, 1298, 1329, 269, 1295, 1387, 1346, 1402, 362, 266,
	1276, 1301, 425, 1317, 203, 1366, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	1409, 366, 1352, 0, 491, 396, 0, 0, 0, 1331,
	1391, 1340, 1378, 1326, 1365, 1284, 1351, 1404, 1313, 1361,
	1405, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	1309, 1358, 1398, 1310, 1360, 264, 319, 271, 263, 572,
	1410, 1390, 1273, 1339, 1397, 1334, 0, 0, 228, 1401,
	1333, 0, 1363, 0, 1416, 1268, 1354, 0, 1271, 1275,
	1412, 1395, 1304, 274, 0, 0, 0, 0, 0, 0,
	0, 1330, 1341, 1375, 1379, 1324, 0, 0, 0, 0,
	0, 0, 0, 0, 1302, 0, 1350, 0, 0, 0,
	1280, 1272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1328, 0, 0, 0, 0, 1283,
	0, 1303, 1376, 0, 1266, 296, 1277, 397, 256, 0,
	448, 1383, 1394, 1325, 616, 1396, 1323, 1322, 1370, 1281,
	1389, 1316, 361, 1279, 328, 197, 224, 0, 1314, 407,
	456, 468, 1388, 1299, 1308, 252, 1306, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 1349, 1368, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 1278,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 1294, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 1384,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 1373, 1415,
	420, 467, 239, 596, 490, 199, 1288, 1293, 1286, 0,
	253, 254, 1355, 567, 1289, 1287, 1344, 1345, 1290, 1406,
	1407, 1408, 1392, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 1377, 1282, 0, 1291, 1292, 1386, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 1348, 196, 220, 364,
	1411, 449, 287, 637, 606, 601, 205, 222, 1285, 261,
	1297, 1305, 1311, 1319, 1320, 1332, 1335, 1336, 1337, 1338,
	1356, 1357, 1359, 1367, 1369, 1372, 1374, 1381, 1393, 1414,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 431, 432, 434, 436, 438, 450,
	455, 469, 470, 471, 472, 473, 476, 477, 482, 483,
	484, 485, 486, 494, 495, 508, 578, 580, 595, 613,
	619, 475, 299, 300, 439, 440, 312, 313, 633, 634,
	298, 590, 620, 588, 632, 614, 433, 374, 1347, 1353,
	377, 280, 303, 318, 1362, 605, 496, 226, 461, 289,
	250, 1380, 1382, 210, 245, 229, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 243, 454, 240, 479,
	511, 512, 513, 515, 391, 265, 428, 1343, 1371, 372,
	568, 569, 314, 392, 0, 0, 0, 1399, 1400, 1385,
	520, 0, 1327, 1403, 1296, 1315, 1413, 1318, 1321, 1364,
	1274, 1342, 411, 1312, 1267, 1300, 1269, 1307, 1270, 1298,
	1329, 269, 1295, 1387, 1346, 1402, 362, 266, 1276, 1301,
	425, 1317, 203, 1366, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 1409, 366,
	1352, 0, 491, 396, 0, 0, 0, 1331, 1391, 1340,
	1378, 1326, 1365, 1284, 1351, 1404, 1313, 1361, 1405, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 1309, 1358,
	1398, 1310, 1360, 264, 319, 271, 263, 572, 1410, 1390,
	1273, 1339, 1397, 1334, 0, 0, 228, 1401, 1333, 0,
	1363, 0, 1416, 1268, 1354, 0, 1271, 1275, 1412, 1395,
	1304, 274, 0, 0, 0, 0, 0, 0, 0, 1330,
	1341, 1375, 1379, 1324, 0, 0, 0, 0, 0, 0,
	0, 0, 1302, 0, 1350, 0, 0, 0, 1280, 1272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1328, 0, 0, 0, 0, 1283, 0, 1303,
	1376, 0, 1266, 296, 1277, 397, 256, 0, 448, 1383,
	1394, 1325, 616, 1396, 1323, 1322, 1370, 1281, 1389, 1316,
	361, 1279, 328, 197, 224, 0, 1314, 407, 456, 468,
	1388, 1299, 1308, 252, 1306, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 1349, 1368, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 1278, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 1294, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 1384, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 1373, 1415, 420, 467,
	239, 596, 490, 199, 1288, 1293, 1286, 0, 253, 254,
	1355, 567, 1289, 1287, 1344, 1345, 1290, 1406, 1407, 1408,
	1392, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 1377,
	1282, 0, 1291, 1292, 1386, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 1348, 196, 220, 364, 1411, 449,
	287, 637, 606, 601, 205, 222, 1285, 261, 1297, 1305,
	1311, 1319, 1320, 1332, 1335, 1336, 1337, 1338, 1356, 1357,
	1359, 1367, 1369, 1372, 1374, 1381, 1393, 1414, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	299, 300, 439, 440, 312, 313, 633, 634, 298, 590,
	620, 588, 632, 614, 433, 374, 1347, 1353, 377, 280,
	303, 318, 1362, 605, 496, 226, 461, 289, 250, 1380,
	1382, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 1343, 1371, 372, 568, 569,
	314, 392, 0, 0, 0, 1399, 1400, 1385, 520, 0,
	1327, 1403, 1296, 1315, 1413, 1318, 1321, 1364, 1274, 1342,
	411, 1312, 1267, 1300, 1269, 1307, 1270, 1298, 1329, 269,
	1295, 1387, 1346, 1402, 362, 266, 1276, 1301, 425, 1317,
	203, 1366, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 1409, 366, 1352, 0,
	491, 396, 0, 0, 0, 1331, 1391, 1340, 1378, 1326,
	1365, 1284, 1351, 1404, 1313, 1361, 1405, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 0, 941,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 1309, 1358, 1398, 1310,
	1360, 264, 319, 271, 263, 572, 1410, 1390, 1273, 1339,
	1397, 1334, 0, 0, 228, 1401, 1333, 0, 1363, 0,
	1416, 1268, 1354, 0, 1271, 1275, 1412, 1395, 1304, 274,
	0, 0, 0, 0, 0, 0, 0, 1330, 1341, 1375,
	1379, 1324, 0, 0, 0, 0, 0, 0, 0, 0,
	1302, 0, 1350, 0, 0, 0, 1280, 1272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1328, 0, 0, 0, 0, 1283, 0, 1303, 1376, 0,
	1266, 296, 1277, 397, 256, 0, 448, 1383, 1394, 1325,
	616, 1396, 1323, 1322, 1370, 1281, 1389, 1316, 361, 1279,
	328, 197, 224, 0, 1314, 407, 456, 468, 1388, 1299,
	1308, 252, 1306, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 1349, 1368, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 1278, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 1294, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 1384, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 1373, 1415, 420, 467, 239, 596,
	490, 199, 1288, 1293, 1286, 0, 253, 254, 1355, 567,
	1289, 1287, 1344, 1345, 1290, 1406, 1407, 1408, 1392, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 1377, 1282, 0,
	1291, 1292, 1386, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 1348, 196, 220, 364, 1411, 449, 287, 637,
	606, 601, 205, 222, 1285, 261, 1297, 1305, 1311, 1319,
	1320, 1332, 1335, 1336, 1337, 1338, 1356, 1357, 1359, 1367,
	1369, 1372, 1374, 1381, 1393, 1414, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	431, 432, 434, 436, 438, 450, 455, 469, 470, 471,
	472, 473, 476, 477, 482, 483, 484, 485, 486, 494,
	495, 508, 578, 580, 595, 613, 619, 475, 299, 300,
	439, 440, 312, 313, 633, 634, 298, 590, 620, 588,
	632, 614, 433, 374, 1347, 1353, 377, 280, 303, 318,
	1362, 605, 496, 226, 461, 289, 250, 1380, 1382, 210,
	245, 229, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 243, 454, 240, 479, 511, 512, 513, 515,
	391, 265, 428, 1343, 1371, 372, 568, 569, 314, 392,
	0, 0, 0, 0, 0, 0, 520, 0, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 749, 0, 0, 0, 269, 754, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 760, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 756, 757, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 95, 0, 0, 957, 941, 733, 907,
	945, 958, 959, 960, 961, 946, 0, 237, 947, 948,
	244, 949, 0, 906, 791, 793, 792, 856, 857, 858,
	859, 860, 861, 862, 789, 954, 962, 963, 0, 264,
	319, 271, 263, 572, 0, 0, 2179, 2180, 2181, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	729, 746, 0, 759, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 743, 744, 0, 0, 0, 0,
	901, 0, 745, 0, 0, 753, 964, 965, 966, 967,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 900, 0, 0, 616, 0,
	0, 898, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 951,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 952, 953, 255, 639,
	797, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 805, 806, 279, 305, 882,
	881, 880, 304, 306, 878, 879, 877, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 888,
	910, 899, 765, 766, 889, 890, 914, 891, 768, 769,
	911, 912, 762, 763, 767, 913, 915, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 902, 752, 751, 0, 758,
	0, 787, 788, 790, 794, 795, 796, 807, 854, 855,
	863, 865, 866, 864, 867, 868, 869, 872, 873, 874,
	875, 870, 871, 876, 770, 774, 771, 772, 773, 785,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	786, 925, 926, 927, 928, 929, 930, 800, 804, 803,
	801, 802, 798, 799, 826, 825, 827, 828, 829, 830,
	831, 832, 834, 833, 835, 836, 837, 838, 839, 840,
	808, 809, 812, 813, 811, 810, 814, 823, 824, 815,
	816, 817, 818, 819, 820, 822, 821, 841, 842, 843,
	844, 845, 847, 846, 850, 851, 849, 848, 853, 852,
	750, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 916, 261, 917, 0, 921, 0, 0, 0,
	923, 922, 0, 924, 886, 885, 0, 0, 918, 919,
	0, 920, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 431, 432,
	434, 436, 438, 450, 455, 469, 470, 471, 472, 473,
	476, 477, 482, 483, 484, 485, 486, 494, 495, 508,
	578, 580, 595, 613, 619, 475, 931, 932, 933, 934,
	935, 936, 937, 938, 298, 590, 620, 588, 632, 614,
	433, 374, 0, 0, 377, 280, 303, 318, 0, 605,
	496, 226, 461, 289, 250, 956, 0, 210, 245, 229,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	243, 454, 240, 479, 511, 512, 513, 515, 391, 265,
	428, 392, 0, 372, 568, 569, 314, 0, 520, 0,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 749, 0, 0, 0, 269,
	754, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 760, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 756, 757, 0,
	0, 0, 0, 0, 0, 2385, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 95, 0, 0, 957, 941,
	733, 907, 945, 958, 959, 960, 961, 946, 0, 237,
	947, 948, 244, 949, 0, 906, 791, 793, 792, 856,
	857, 858, 859, 860, 861, 862, 789, 954, 962, 963,
	2386, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 729, 746, 0, 759, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 743, 744, 0, 0,
	0, 0, 901, 0, 745, 0, 0, 753, 964, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 900, 0, 0,
	616, 0, 0, 898, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 951, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 952, 953,
	255, 639, 797, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 805, 806, 279,
	305, 882, 881, 880, 304, 306, 878, 879, 877, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 888, 910, 899, 765, 766, 889, 890, 914, 891,
	768, 769, 911, 912, 762, 763, 767, 913, 915, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 902, 752, 751,
	0, 758, 0, 787, 788, 790, 794, 795, 796, 807,
	854, 855, 863, 865, 866, 864, 867, 868, 869, 872,
	873, 874, 875, 870, 871, 876, 770, 774, 771, 772,
	773, 785, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 786, 925, 926, 927, 928, 929, 930, 800,
	804, 803, 801, 802, 798, 799, 826, 825, 827, 828,
	829, 830, 831, 832, 834, 833, 835, 836, 837, 838,
	839, 840, 808, 809, 812, 813, 811, 810, 814, 823,
	824, 815, 816, 817, 818, 819, 820, 822, 821, 841,
	842, 843, 844, 845, 847, 846, 850, 851, 849, 848,
	853, 852, 750, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 916, 261, 917, 0, 921, 0,
	0, 0, 923, 922, 0, 924, 886, 885, 0, 0,
	918, 919, 0, 920, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	431, 432, 434, 436, 438, 450, 455, 469, 470, 471,
	472, 473, 476, 477, 482, 483, 484, 485, 486, 494,
	495, 508, 578, 580, 595, 613, 619, 475, 931, 932,
	933, 934, 935, 936, 937, 938, 298, 590, 620, 588,
	632, 614, 433, 374, 0, 0, 377, 280, 303, 318,
	0, 605, 496, 226, 461, 289, 250, 956, 0, 210,
	245, 229, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 243, 454, 240, 479, 511, 512, 513, 515,
	391, 265, 428, 392, 0, 372, 568, 569, 314, 86,
	520, 0, 761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 749, 0, 0,
	0, 269, 754, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 760, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 756,
	757, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 95, 0, 0,
	957, 941, 733, 907, 945, 958, 959, 960, 961, 946,
	0, 237, 947, 948, 244, 949, 0, 906, 791, 793,
	792, 856, 857, 858, 859, 860, 861, 862, 789, 954,
	962, 963, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 729, 746, 0, 759, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 743, 744,
	0, 0, 0, 0, 901, 0, 745, 0, 0, 753,
	964, 965, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 900,
	0, 0, 616, 0, 0, 898, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 951, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	952, 953, 255, 639, 797, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 805,
	806, 279, 305, 882, 881, 880, 304, 306, 878, 879,
	877, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 888, 910, 899, 765, 766, 889, 890,
	914, 891, 768, 769, 911, 912, 762, 763, 767, 913,
	915, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 902,
	752, 751, 0, 758, 0, 787, 788, 790, 794, 795,
	796, 807, 854, 855, 863, 865, 866, 864, 867, 868,
	869, 872, 873, 874, 875, 870, 871, 876, 770, 774,
	771, 772, 773, 785, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 786, 925, 926, 927, 928, 929,
	930, 800, 804, 803, 801, 802, 798, 799, 826, 825,
	827, 828, 829, 830, 831, 832, 834, 833, 835, 836,
	837, 838, 839, 840, 808, 809, 812, 813, 811, 810,
	814, 823, 824, 815, 816, 817, 818, 819, 820, 822,
	821, 841, 842, 843, 844, 845, 847, 846, 850, 851,
	849, 848, 853, 852, 750, 196, 220, 364, 94, 449,
	287, 637, 606, 601, 205, 222, 916, 261, 917, 0,
	921, 0, 0, 0, 923, 922, 0, 924, 886, 885,
	0, 0, 918, 919, 0, 920, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	931, 932, 933, 934, 935, 936, 937, 938, 298, 590,
	620, 588, 632, 614, 433, 374, 0, 0, 377, 280,
	303, 318, 0, 605, 496, 226, 461, 289, 250, 956,
	0, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 392, 0, 372, 568, 569,
	314, 0, 520, 0, 761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 749,
	0, 0, 0, 269, 754, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	760, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 756, 757, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 95,
	0, 0, 957, 941, 733, 907, 945, 958, 959, 960,
	961, 946, 0, 237, 947, 948, 244, 949, 0, 906,
	791, 793, 792, 856, 857, 858, 859, 860, 861, 862,
	789, 954, 962, 963, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 729, 746, 0, 759,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	743, 744, 0, 0, 0, 0, 901, 0, 745, 0,
	0, 753, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 755, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 900, 0, 0, 616, 0, 0, 898, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 951, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 3987, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 952, 953, 255, 639, 797, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 805, 806, 279, 305, 882, 881, 880, 304, 306,
	878, 879, 877, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 888, 910, 899, 765, 766,
	889, 890, 914, 891, 768, 769, 911, 912, 762, 763,
	767, 913, 915, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 902, 752, 751, 0, 758, 0, 787, 788, 790,
	794, 795, 796, 807, 854, 855, 863, 865, 866, 864,
	867, 868, 869, 872, 873, 874, 875, 870, 871, 876,
	770, 774, 771, 772, 773, 785, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 786, 925, 926, 927,
	928, 929, 930, 800, 804, 803, 801, 802, 798, 799,
	826, 825, 827, 828, 829, 830, 831, 832, 834, 833,
	835, 836, 837, 838, 839, 840, 808, 809, 812, 813,
	811, 810, 814, 823, 824, 815, 816, 817, 818, 819,
	820, 822, 821, 841, 842, 843, 844, 845, 847, 846,
	850, 851, 849, 848, 853, 852, 750, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 916, 261,
	917, 0, 921, 0, 0, 0, 923, 922, 0, 924,
	886, 885, 0, 0, 918, 919, 0, 920, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 431, 432, 434, 436, 438, 450,
	455, 469, 470, 471, 472, 473, 476, 477, 482, 483,
	484, 485, 486, 494, 495, 508, 578, 580, 595, 613,
	619, 475, 931, 932, 933, 934, 935, 936, 937, 938,
	298, 590, 620, 588, 632, 614, 433, 374, 0, 0,
	377, 280, 303, 318, 0, 605, 496, 226, 461, 289,
	250, 956, 0, 210, 245, 229, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 243, 454, 240, 479,
	511, 512, 513, 515, 391, 265, 428, 392, 0, 372,
	568, 569, 314, 0, 520, 0, 761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 749, 0, 0, 0, 269, 754, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 760, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 756, 757, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 95, 0, 1720, 957, 941, 733, 907, 945, 958,
	959, 960, 961, 946, 0, 237, 947, 948, 244, 949,
	0, 906, 791, 793, 792, 856, 857, 858, 859, 860,
	861, 862, 789, 954, 962, 963, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 729, 746,
	0, 759, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 743, 744, 0, 0, 0, 0, 901, 0,
	745, 0, 0, 753, 964, 965, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 900, 0, 0, 616, 0, 0, 898,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 951, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 952, 953, 255, 639, 797, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 805, 806, 279, 305, 882, 881, 880,
	304, 306, 878, 879, 877, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 888, 910, 899,
	765, 766, 889, 890, 914, 891, 768, 769, 911, 912,
	762, 763, 767, 913, 915, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 902, 752, 751, 0, 758, 0, 787,
	788, 790, 794, 795, 796, 807, 854, 855, 863, 865,
	866, 864, 867, 868, 869, 872, 873, 874, 875, 870,
	871, 876, 770, 774, 771, 772, 773, 785, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 786, 925,
	926, 927, 928, 929, 930, 800, 804, 803, 801, 802,
	798, 799, 826, 825, 827, 828, 829, 830, 831, 832,
	834, 833, 835, 836, 837, 838, 839, 840, 808, 809,
	812, 813, 811, 810, 814, 823, 824, 815, 816, 817,
	818, 819, 820, 822, 821, 841, 842, 843, 844, 845,
	847, 846, 850, 851, 849, 848, 853, 852, 750, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	916, 261, 917, 0, 921, 0, 0, 0, 923, 922,
	0, 924, 886, 885, 0, 0, 918, 919, 0, 920,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 931, 932, 933, 934, 935, 936,
	937, 938, 298, 590, 620, 588, 632, 614, 433, 374,
	0, 0, 377, 280, 303, 318, 0, 605, 496, 226,
	461, 289, 250, 956, 0, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 392,
	0, 372, 568, 569, 314, 0, 520, 0, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 749, 0, 0, 0, 269, 754, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 760, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 756, 757, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 95, 0, 0, 957, 941, 733, 907,
	945, 958, 959, 960, 961, 946, 0, 237, 947, 948,
	244, 949, 0, 906, 791, 793, 792, 856, 857, 858,
	859, 860, 861, 862, 789, 954, 962, 963, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	729, 746, 0, 759, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 743, 744, 1051, 0, 0, 0,
	901, 0, 745, 0, 0, 753, 964, 965, 966, 967,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 900, 0, 0, 616, 0,
	0, 898, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 951,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 952, 953, 255, 639,
	797, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 805, 806, 279, 305, 882,
	881, 880, 304, 306, 878, 879, 877, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 888,
	910, 899, 765, 766, 889, 890, 914, 891, 768, 769,
	911, 912, 762, 763, 767, 913, 915, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 902, 752, 751, 0, 758,
	0, 787, 788, 790, 794, 795, 796, 807, 854, 855,
	863, 865, 866, 864, 867, 868, 869, 872, 873, 874,
	875, 870, 871, 876, 770, 774, 771, 772, 773, 785,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	786, 925, 926, 927, 928, 929, 930, 800, 804, 803,
	801, 802, 798, 799, 826, 825, 827, 828, 829, 830,
	831, 832, 834, 833, 835, 836, 837, 838, 839, 840,
	808, 809, 812, 813, 811, 810, 814, 823, 824, 815,
	816, 817, 818, 819, 820, 822, 821, 841, 842, 843,
	844, 845, 847, 846, 850, 851, 849, 848, 853, 852,
	750, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 916, 261, 917, 0, 921, 0, 0, 0,
	923, 922, 0, 924, 886, 885, 0, 0, 918, 919,
	0, 920, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 431, 432,
	434, 436, 438, 450, 455, 469, 470, 471, 472, 473,
	476, 477, 482, 483, 484, 485, 486, 494, 495, 508,
	578, 580, 595, 613, 619, 475, 931, 932, 933, 934,
	935, 936, 937, 938, 298, 590, 620, 588, 632, 614,
	433, 374, 0, 0, 377, 280, 303, 318, 0, 605,
	496, 226, 461, 289, 250, 956, 0, 210, 245, 229,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	243, 454, 240, 479, 511, 512, 513, 515, 391, 265,
	428, 392, 0, 372, 568, 569, 314, 0, 520, 0,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 749, 0, 0, 0, 269,
	754, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 760, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 756, 757, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 95, 0, 0, 957, 941,
	733, 907, 945, 958, 959, 960, 961, 946, 0, 237,
	947, 948, 244, 949, 0, 906, 791, 793, 792, 856,
	857, 858, 859, 860, 861, 862, 789, 954, 962, 963,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 729, 746, 0, 759, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 743, 744, 0, 0,
	0, 0, 901, 0, 745, 0, 0, 753, 964, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 900, 0, 0,
	616, 0, 0, 898, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 951, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 952, 953,
	255, 639, 797, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 805, 806, 279,
	305, 882, 881, 880, 304, 306, 878, 879, 877, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 888, 910, 899, 765, 766, 889, 890, 914, 891,
	768, 769, 911, 912, 762, 763, 767, 913, 915, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 902, 752, 751,
	0, 758, 0, 787, 788, 790, 794, 795, 796, 807,
	854, 855, 863, 865, 866, 864, 867, 868, 869, 872,
	873, 874, 875, 870, 871, 876, 770, 774, 771, 772,
	773, 785, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 786, 925, 926, 927, 928, 929, 930, 800,
	804, 803, 801, 802, 798, 799, 826, 825, 827, 828,
	829, 830, 831, 832, 834, 833, 835, 836, 837, 838,
	839, 840, 808, 809, 812, 813, 811, 810, 814, 823,
	824, 815, 816, 817, 818, 819, 820, 822, 821, 841,
	842, 843, 844, 845, 847, 846, 850, 851, 849, 848,
	853, 852, 750, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 916, 261, 917, 0, 921, 0,
	0, 0, 923, 922, 0, 924, 886, 885, 0, 0,
	918, 919, 0, 920, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	431, 432, 434, 436, 438, 450, 455, 469, 470, 471,
	472, 473, 476, 477, 482, 483, 484, 485, 486, 494,
	495, 508, 578, 580, 595, 613, 619, 475, 931, 932,
	933, 934, 935, 936, 937, 938, 298, 590, 620, 588,
	632, 614, 433, 374, 0, 0, 377, 280, 303, 318,
	0, 605, 496, 226, 461, 289, 250, 956, 0, 210,
	245, 229, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 243, 454, 240, 479, 511, 512, 513, 515,
	391, 265, 428, 392, 0, 372, 568, 569, 314, 0,
	520, 0, 761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 749, 0, 0,
	0, 269, 754, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 760, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 756,
	757, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 95, 0, 0,
	957, 941, 733, 907, 945, 958, 959, 960, 961, 946,
	0, 237, 947, 948, 244, 949, 0, 906, 791, 793,
	792, 856, 857, 858, 859, 860, 861, 862, 789, 954,
	962, 963, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 729, 746, 0, 759, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 743, 744,
	0, 0, 0, 0, 901, 0, 745, 0, 0, 753,
	964, 965, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 3093, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 900,
	0, 0, 616, 0, 0, 898, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 951, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	952, 953, 255, 639, 797, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 805,
	806, 279, 305, 882, 881, 880, 304, 306, 878, 879,
	877, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 888, 910, 899, 765, 766, 889, 890,
	914, 891, 768, 769, 911, 912, 762, 763, 767, 913,
	915, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 902,
	752, 751, 0, 758, 0, 787, 788, 790, 794, 795,
	796, 807, 854, 855, 863, 865, 866, 864, 867, 868,
	869, 872, 873, 874, 875, 870, 871, 876, 770, 774,
	771, 772, 773, 785, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 786, 925, 926, 927, 928, 929,
	930, 800, 804, 803, 801, 802, 798, 799, 826, 825,
	827, 828, 829, 830, 831, 832, 834, 833, 835, 836,
	837, 838, 839, 840, 808, 809, 812, 813, 811, 810,
	814, 823, 824, 815, 816, 817, 818, 819, 820, 822,
	821, 841, 842, 843, 844, 845, 847, 846, 850, 851,
	849, 848, 853, 852, 750, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 916, 261, 917, 0,
	921, 0, 0, 0, 923, 922, 0, 924, 886, 885,
	0, 0, 918, 919, 0, 920, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	931, 932, 933, 934, 935, 936, 937, 938, 298, 590,
	620, 588, 632, 614, 433, 374, 0, 0, 377, 280,
	303, 318, 0, 605, 496, 226, 461, 289, 250, 956,
	0, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 392, 0, 372, 568, 569,
	314, 0, 520, 0, 761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 749,
	0, 0, 0, 269, 754, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	760, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 756, 757, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 95,
	0, 0, 957, 941, 733, 907, 945, 958, 959, 960,
	961, 946, 0, 237, 947, 948, 244, 949, 0, 906,
	791, 793, 792, 856, 857, 858, 859, 860, 861, 862,
	789, 954, 962, 963, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 729, 746, 0, 759,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	743, 744, 0, 0, 0, 0, 901, 0, 745, 0,
	0, 753, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 3089, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 900, 0, 0, 616, 0, 0, 898, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 951, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 952, 953, 255, 639, 797, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 805, 806, 279, 305, 882, 881, 880, 304, 306,
	878, 879, 877, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 888, 910, 899, 765, 766,
	889, 890, 914, 891, 768, 769, 911, 912, 762, 763,
	767, 913, 915, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 902, 752, 751, 0, 758, 0, 787, 788, 790,
	794, 795, 796, 807, 854, 855, 863, 865, 866, 864,
	867, 868, 869, 872, 873, 874, 875, 870, 871, 876,
	770, 774, 771, 772, 773, 785, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 786, 925, 926, 927,
	928, 929, 930, 800, 804, 803, 801, 802, 798, 799,
	826, 825, 827, 828, 829, 830, 831, 832, 834, 833,
	835, 836, 837, 838, 839, 840, 808, 809, 812, 813,
	811, 810, 814, 823, 824, 815, 816, 817, 818, 819,
	820, 822, 821, 841, 842, 843, 844, 845, 847, 846,
	850, 851, 849, 848, 853, 852, 750, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 916, 261,
	917, 0, 921, 0, 0, 0, 923, 922, 0, 924,
	886, 885, 0, 0, 918, 919, 0, 920, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 431, 432, 434, 436, 438, 450,
	455, 469, 470, 471, 472, 473, 476, 477, 482, 483,
	484, 485, 486, 494, 495, 508, 578, 580, 595, 613,
	619, 475, 931, 932, 933, 934, 935, 936, 937, 938,
	298, 590, 620, 588, 632, 614, 433, 374, 0, 0,
	377, 280, 303, 318, 0, 605, 496, 226, 461, 289,
	250, 956, 0, 210, 245, 229, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 243, 454, 240, 479,
	511, 512, 513, 515, 391, 265, 428, 392, 0, 372,
	568, 569, 314, 0, 520, 0, 761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 749, 0, 0, 0, 269, 754, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 760, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 756, 757, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 95, 0, 0, 957, 941, 1072, 907, 945, 958,
	959, 960, 961, 946, 0, 237, 947, 948, 244, 949,
	0, 906, 791, 793, 792, 856, 857, 858, 859, 860,
	861, 862, 789, 954, 962, 963, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 746,
	0, 759, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 743, 744, 0, 0, 0, 0, 901, 0,
	745, 0, 0, 753, 964, 965, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 900, 0, 0, 616, 0, 0, 898,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 951, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 952, 953, 255, 639, 797, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 805, 806, 279, 305, 882, 881, 880,
	304, 306, 878, 879, 877, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 888, 910, 899,
	765, 766, 889, 890, 914, 891, 768, 769, 911, 912,
	762, 763, 767, 913, 915, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 902, 752, 751, 0, 758, 0, 787,
	788, 790, 794, 795, 796, 807, 854, 855, 863, 865,
	866, 864, 867, 868, 869, 872, 873, 874, 875, 870,
	871, 876, 770, 774, 771, 772, 773, 785, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 786, 925,
	926, 927, 928, 929, 930, 800, 804, 803, 801, 802,
	798, 799, 826, 825, 827, 828, 829, 830, 831, 832,
	834, 833, 835, 836, 837, 838, 839, 840, 808, 809,
	812, 813, 811, 810, 814, 823, 824, 815, 816, 817,
	818, 819, 820, 822, 821, 841, 842, 843, 844, 845,
	847, 846, 850, 851, 849, 848, 853, 852, 750, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	916, 261, 917, 0, 921, 0, 0, 0, 923, 922,
	0, 924, 886, 885, 0, 0, 918, 919, 0, 920,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 931, 932, 933, 934, 935, 936,
	937, 938, 298, 590, 620, 588, 632, 614, 433, 374,
	0, 0, 377, 280, 303, 318, 0, 605, 496, 226,
	461, 289, 250, 956, 0, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 392,
	0, 372, 568, 569, 314, 0, 520, 0, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 749, 0, 0, 0, 269, 754, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 760, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 756, 757, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 95, 0, 0, 957, 941, 1072, 907,
	945, 958, 959, 960, 961, 946, 0, 237, 947, 948,
	244, 949, 0, 906, 791, 793, 792, 856, 857, 858,
	859, 860, 861, 862, 789, 954, 962, 963, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 746, 0, 759, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 743, 744, 0, 0, 0, 0,
	901, 0, 745, 0, 0, 753, 964, 965, 966, 967,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 2073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 900, 0, 0, 616, 0,
	0, 898, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 951,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 952, 953, 255, 639,
	797, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 805, 806, 279, 305, 882,
	881, 880, 304, 306, 878, 879, 877, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 888,
	910, 899, 765, 766, 889, 890, 914, 891, 768, 769,
	911, 912, 762, 763, 767, 913, 915, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 902, 752, 751, 0, 758,
	0, 787, 788, 790, 794, 795, 796, 807, 854, 855,
	863, 865, 866, 864, 867, 868, 869, 872, 873, 874,
	875, 870, 871, 876, 770, 774, 771, 772, 773, 785,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	786, 925, 926, 927, 928, 929, 930, 800, 804, 803,
	801, 802, 798, 799, 826, 825, 827, 828, 829, 830,
	831, 832, 834, 833, 835, 836, 837, 838, 839, 840,
	808, 809, 812, 813, 811, 810, 814, 823, 824, 815,
	816, 817, 818, 819, 820, 822, 821, 841, 842, 843,
	844, 845, 847, 846, 850, 851, 849, 848, 853, 852,
	750, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 916, 261, 917, 0, 921, 0, 0, 0,
	923, 922, 0, 924, 886, 885, 0, 0, 918, 919,
	0, 920, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 431, 432,
	434, 436, 438, 450, 455, 469, 470, 471, 472, 473,
	476, 477, 482, 483, 484, 485, 486, 494, 495, 508,
	578, 580, 595, 613, 619, 475, 931, 932, 933, 934,
	935, 936, 937, 938, 298, 590, 620, 588, 632, 614,
	433, 374, 0, 0, 377, 280, 303, 318, 0, 605,
	496, 226, 461, 289, 250, 956, 0, 210, 245, 229,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	243, 454, 240, 479, 511, 512, 513, 515, 391, 265,
	428, 392, 0, 372, 568, 569, 314, 0, 520, 0,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 749, 0, 0, 0, 269,
	754, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 760, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 756, 757, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 95, 0, 0, 957, 941,
	1072, 907, 945, 958, 959, 960, 961, 946, 0, 237,
	947, 948, 244, 949, 0, 906, 791, 793, 792, 856,
	857, 858, 859, 860, 861, 862, 789, 954, 962, 963,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 746, 0, 759, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 743, 744, 0, 0,
	0, 0, 901, 0, 745, 0, 0, 753, 964, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	2071, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 900, 0, 0,
	616, 0, 0, 898, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 951, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 952, 953,
	255, 639, 797, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 805, 806, 279,
	305, 882, 881, 880, 304, 306, 878, 879, 877, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 888, 910, 899, 765, 766, 889, 890, 914, 891,
	768, 769, 911, 912, 762, 763, 767, 913, 915, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 902, 752, 751,
	0, 758, 0, 787, 788, 790, 794, 795, 796, 807,
	854, 855, 863, 865, 866, 864, 867, 868, 869, 872,
	873, 874, 875, 870, 871, 876, 770, 774, 771, 772,
	773, 785, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 786, 925, 926, 927, 928, 929, 930, 800,
	804, 803, 801, 802, 798, 799, 826, 825, 827, 828,
	829, 830, 831, 832, 834, 833, 835, 836, 837, 838,
	839, 840, 808, 809, 812, 813, 811, 810, 814, 823,
	824, 815, 816, 817, 818, 819, 820, 822, 821, 841,
	842, 843, 844, 845, 847, 846, 850, 851, 849, 848,
	853, 852, 750, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 916, 261, 917, 0, 921, 0,
	0, 0, 923, 922, 0, 924, 886, 885, 0, 0,
	918, 919, 0, 920, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	431, 432, 434, 436, 438, 450, 455, 469, 470, 471,
	472, 473, 476, 477, 482, 483, 484, 485, 486, 494,
	495, 508, 578, 580, 595, 613, 619, 475, 931, 932,
	933, 934, 935, 936, 937, 938, 298, 590, 620, 588,
	632, 614, 433, 374, 0, 0, 377, 280, 303, 318,
	0, 605, 496, 226, 461, 289, 250, 956, 0, 210,
	245, 229, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 243, 454, 240, 479, 511, 512, 513, 515,
	391, 265, 428, 392, 0, 372, 568, 569, 314, 0,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 1123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 1122, 616, 0, 0, 0, 0, 0, 1119, 1120,
	361, 1080, 328, 197, 224, 1113, 1117, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	299, 300, 439, 440, 312, 313, 633, 634, 298, 590,
	620, 588, 632, 614, 433, 374, 0, 0, 377, 280,
	303, 318, 0, 605, 496, 226, 461, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 392, 0, 372, 568, 569,
	314, 0, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 1681, 941, 0, 0, 1678, 0, 0, 0,
	0, 1676, 0, 237, 1677, 1675, 244, 1680, 0, 906,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 431, 432, 434, 436, 438, 450,
	455, 469, 470, 471, 472, 473, 476, 477, 482, 483,
	484, 485, 486, 494, 495, 508, 578, 580, 595, 613,
	619, 475, 299, 300, 439, 440, 312, 313, 633, 634,
	298, 590, 620, 588, 632, 614, 433, 374, 0, 0,
	377, 280, 303, 318, 0, 605, 496, 226, 461, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 243, 454, 240, 479,
	511, 512, 513, 515, 391, 265, 428, 392, 0, 372,
	568, 569, 314, 86, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 95, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 94, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 2372, 0, 0,
	2371, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 299, 300, 439, 440, 312, 313,
	633, 634, 298, 590, 620, 588, 632, 614, 433, 374,
	0, 0, 377, 280, 303, 318, 0, 605, 496, 226,
	461, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 1739,
	0, 372, 568, 569, 314, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 1741, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 1743, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 1454, 0, 1455, 1456,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 431, 432,
	434, 436, 438, 450, 455, 469, 470, 471, 472, 473,
	476, 477, 482, 483, 484, 485, 486, 494, 495, 508,
	578, 580, 595, 613, 619, 475, 299, 300, 439, 440,
	312, 313, 633, 634, 298, 590, 620, 588, 632, 614,
	433, 374, 0, 0, 377, 280, 303, 318, 0, 605,
	496, 226, 461, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	243, 454, 240, 479, 511, 512, 513, 515, 391, 265,
	428, 392, 0, 372, 568, 569, 314, 86, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 95, 0, 1720, 0, 707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 94, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	431, 432, 434, 436, 438, 450, 455, 469, 470, 471,
	472, 473, 476, 477, 482, 483, 484, 485, 486, 494,
	495, 508, 578, 580, 595, 613, 619, 475, 299, 300,
	439, 440, 312, 313, 633, 634, 298, 590, 620, 588,
	632, 614, 433, 374, 0, 0, 377, 280, 303, 318,
	0, 605, 496, 226, 461, 289, 250, 0, 0, 210,
	245, 229, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 243, 454, 240, 479, 511, 512, 513, 515,
	391, 265, 428, 392, 0, 372, 568, 569, 314, 0,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 95, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 2372, 0, 0, 2371, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	299, 300, 439, 440, 312, 313, 633, 634, 298, 590,
	620, 588, 632, 614, 433, 374, 0, 0, 377, 280,
	303, 318, 0, 605, 496, 226, 461, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 392, 0, 372, 568, 569,
	314, 0, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 2322, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 1922, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 2320, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 431, 432, 434, 436, 438, 450,
	455, 469, 470, 471, 472, 473, 476, 477, 482, 483,
	484, 485, 486, 494, 495, 508, 578, 580, 595, 613,
	619, 475, 299, 300, 439, 440, 312, 313, 633, 634,
	298, 590, 620, 588, 632, 614, 433, 374, 0, 0,
	377, 280, 303, 318, 0, 605, 496, 226, 461, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 243, 454, 240, 479,
	511, 512, 513, 515, 391, 265, 428, 392, 0, 372,
	568, 569, 314, 0, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 1074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 1080, 328, 197, 224, 1078,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 299, 300, 439, 440, 312, 313,
	633, 634, 298, 590, 620, 588, 632, 614, 433, 374,
	0, 0, 377, 280, 303, 318, 0, 605, 496, 226,
	461, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 392,
	0, 372, 568, 569, 314, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 2322, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 1922, 194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 431, 432,
	434, 436, 438, 450, 455, 469, 470, 471, 472, 473,
	476, 477, 482, 483, 484, 485, 486, 494, 495, 508,
	578, 580, 595, 613, 619, 475, 299, 300, 439, 440,
	312, 313, 633, 634, 298, 590, 620, 588, 632, 614,
	433, 374, 0, 0, 377, 280, 303, 318, 0, 605,
	496, 226, 461, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	243, 454, 240, 479, 511, 512, 513, 515, 391, 265,
	428, 392, 0, 372, 568, 569, 314, 0, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 1720, 0, 707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 3897, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	431, 432, 434, 436, 438, 450, 455, 469, 470, 471,
	472, 473, 476, 477, 482, 483, 484, 485, 486, 494,
	495, 508, 578, 580, 595, 613, 619, 475, 299, 300,
	439, 440, 312, 313, 633, 634, 298, 590, 620, 588,
	632, 614, 433, 374, 0, 0, 377, 280, 303, 318,
	0, 605, 496, 226, 461, 289, 250, 0, 0, 210,
	245, 229, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 243, 454, 240, 479, 511, 512, 513, 515,
	391, 265, 428, 392, 0, 372, 568, 569, 314, 0,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	2082, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	299, 300, 439, 440, 312, 313, 633, 634, 298, 590,
	620, 588, 632, 614, 433, 374, 0, 0, 377, 280,
	303, 318, 0, 605, 496, 226, 461, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 392, 0, 372, 568, 569,
	314, 0, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 2815, 707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 431, 432, 434, 436, 438, 450,
	455, 469, 470, 471, 472, 473, 476, 477, 482, 483,
	484, 485, 486, 494, 495, 508, 578, 580, 595, 613,
	619, 475, 299, 300, 439, 440, 312, 313, 633, 634,
	298, 590, 620, 588, 632, 614, 433, 374, 0, 0,
	377, 280, 303, 318, 0, 605, 496, 226, 461, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 243, 454, 240, 479,
	511, 512, 513, 515, 391, 265, 428, 392, 0, 372,
	568, 569, 314, 0, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 0, 707, 0, 0, 0, 0,
	2800, 0, 0, 0, 0, 237, 0, 0, 244, 2801,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 299, 300, 439, 440, 312, 313,
	633, 634, 298, 590, 620, 588, 632, 614, 433, 374,
	0, 0, 377, 280, 303, 318, 0, 605, 496, 226,
	461, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 392,
	0, 372, 568, 569, 314, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 1762, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 1761, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 431, 432,
	434, 436, 438, 450, 455, 469, 470, 471, 472, 473,
	476, 477, 482, 483, 484, 485, 486, 494, 495, 508,
	578, 580, 595, 613, 619, 475, 299, 300, 439, 440,
	312, 313, 633, 634, 298, 590, 620, 588, 632, 614,
	433, 374, 0, 0, 377, 280, 303, 318, 0, 605,
	496, 226, 461, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	243, 454, 240, 479, 511, 512, 513, 515, 391, 265,
	428, 392, 0, 372, 568, 569, 314, 0, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 0, 709,
	710, 711, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	431, 432, 434, 436, 438, 450, 455, 469, 470, 471,
	472, 473, 476, 477, 482, 483, 484, 485, 486, 494,
	495, 508, 578, 580, 595, 613, 619, 475, 299, 300,
	439, 440, 312, 313, 633, 634, 298, 590, 620, 588,
	632, 614, 433, 374, 0, 0, 377, 280, 303, 318,
	0, 605, 496, 226, 461, 289, 250, 0, 0, 210,
	245, 229, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 243, 454, 240, 479, 511, 512, 513, 515,
	391, 265, 428, 392, 0, 372, 568, 569, 314, 0,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 4020, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	299, 300, 439, 440, 312, 313, 633, 634, 298, 590,
	620, 588, 632, 614, 433, 374, 0, 0, 377, 280,
	303, 318, 0, 605, 496, 226, 461, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 392, 0, 372, 568, 569,
	314, 0, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 1922, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 431, 432, 434, 436, 438, 450,
	455, 469, 470, 471, 472, 473, 476, 477, 482, 483,
	484, 485, 486, 494, 495, 508, 578, 580, 595, 613,
	619, 475, 299, 300, 439, 440, 312, 313, 633, 634,
	298, 590, 620, 588, 632, 614, 433, 374, 0, 0,
	377, 280, 303, 318, 0, 605, 496, 226, 461, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 243, 454, 240, 479,
	511, 512, 513, 515, 391, 265, 428, 392, 0, 372,
	568, 569, 314, 0, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	3897, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 299, 300, 439, 440, 312, 313,
	633, 634, 298, 590, 620, 588, 632, 614, 433, 374,
	0, 0, 377, 280, 303, 318, 0, 605, 496, 226,
	461, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 392,
	0, 372, 568, 569, 314, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 95, 0, 0, 0, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 431, 432,
	434, 436, 438, 450, 455, 469, 470, 471, 472, 473,
	476, 477, 482, 483, 484, 485, 486, 494, 495, 508,
	578, 580, 595, 613, 619, 475, 299, 300, 439, 440,
	312, 313, 633, 634, 298, 590, 620, 588, 632, 614,
	433, 374, 0, 0, 377, 280, 303, 318, 0, 605,
	496, 226, 461, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	243, 454, 240, 479, 511, 512, 513, 515, 391, 265,
	428, 392, 0, 372, 568, 569, 314, 0, 520, 0,
	0, 0, 0, 2373, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	431, 432, 434, 436, 438, 450, 455, 469, 470, 471,
	472, 473, 476, 477, 482, 483, 484, 485, 486, 494,
	495, 508, 578, 580, 595, 613, 619, 475, 299, 300,
	439, 440, 312, 313, 633, 634, 298, 590, 620, 588,
	632, 614, 433, 374, 0, 0, 377, 280, 303, 318,
	0, 605, 496, 226, 461, 289, 250, 0, 0, 210,
	245, 229, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 243, 454, 240, 479, 511, 512, 513, 515,
	391, 265, 428, 392, 0, 372, 568, 569, 314, 0,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	1743, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	299, 300, 439, 440, 312, 313, 633, 634, 298, 590,
	620, 588, 632, 614, 433, 374, 0, 0, 377, 280,
	303, 318, 0, 605, 496, 226, 461, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 392, 0, 372, 568, 569,
	314, 0, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	2034, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 431, 432, 434, 436, 438, 450,
	455, 469, 470, 471, 472, 473, 476, 477, 482, 483,
	484, 485, 486, 494, 495, 508, 578, 580, 595, 613,
	619, 475, 299, 300, 439, 440, 312, 313, 633, 634,
	298, 590, 620, 588, 632, 614, 433, 374, 0, 0,
	377, 280, 303, 318, 0, 605, 496, 226, 461, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 243, 454, 240, 479,
	511, 512, 513, 515, 391, 265, 428, 392, 0, 372,
	568, 569, 314, 0, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 2025, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 299, 300, 439, 440, 312, 313,
	633, 634, 298, 590, 620, 588, 632, 614, 433, 374,
	0, 0, 377, 280, 303, 318, 0, 605, 496, 226,
	461, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 392,
	0, 372, 568, 569, 314, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	1889, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 0, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 431, 432,
	434, 436, 438, 450, 455, 469, 470, 471, 472, 473,
	476, 477, 482, 483, 484, 485, 486, 494, 495, 508,
	578, 580, 595, 613, 619, 475, 299, 300, 439, 440,
	312, 313, 633, 634, 298, 590, 620, 588, 632, 614,
	433, 374, 0, 0, 377, 280, 303, 318, 0, 605,
	496, 226, 461, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	243, 454, 240, 479, 511, 512, 513, 515, 391, 265,
	428, 392, 0, 372, 568, 569, 314, 0, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 1887, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 0, 707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	431, 432, 434, 436, 438, 450, 455, 469, 470, 471,
	472, 473, 476, 477, 482, 483, 484, 485, 486, 494,
	495, 508, 578, 580, 595, 613, 619, 475, 299, 300,
	439, 440, 312, 313, 633, 634, 298, 590, 620, 588,
	632, 614, 433, 374, 0, 0, 377, 280, 303, 318,
	0, 605, 496, 226, 461, 289, 250, 0, 0, 210,
	245, 229, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 243, 454, 240, 479, 511, 512, 513, 515,
	391, 265, 428, 392, 0, 372, 568, 569, 314, 0,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 1885, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	299, 300, 439, 440, 312, 313, 633, 634, 298, 590,
	620, 588, 632, 614, 433, 374, 0, 0, 377, 280,
	303, 318, 0, 605, 496, 226, 461, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 392, 0, 372, 568, 569,
	314, 0, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 1883, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 0, 707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 431, 432, 434, 436, 438, 450,
	455, 469, 470, 471, 472, 473, 476, 477, 482, 483,
	484, 485, 486, 494, 495, 508, 578, 580, 595, 613,
	619, 475, 299, 300, 439, 440, 312, 313, 633, 634,
	298, 590, 620, 588, 632, 614, 433, 374, 0, 0,
	377, 280, 303, 318, 0, 605, 496, 226, 461, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 243, 454, 240, 479,
	511, 512, 513, 515, 391, 265, 428, 392, 0, 372,
	568, 569, 314, 0, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 1881, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 299, 300, 439, 440, 312, 313,
	633, 634, 298, 590, 620, 588, 632, 614, 433, 374,
	0, 0, 377, 280, 303, 318, 0, 605, 496, 226,
	461, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 392,
	0, 372, 568, 569, 314, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	1877, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 0, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 431, 432,
	434, 436, 438, 450, 455, 469, 470, 471, 472, 473,
	476, 477, 482, 483, 484, 485, 486, 494, 495, 508,
	578, 580, 595, 613, 619, 475, 299, 300, 439, 440,
	312, 313, 633, 634, 298, 590, 620, 588, 632, 614,
	433, 374, 0, 0, 377, 280, 303, 318, 0, 605,
	496, 226, 461, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	243, 454, 240, 479, 511, 512, 513, 515, 391, 265,
	428, 392, 0, 372, 568, 569, 314, 0, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 1875, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 0, 707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	431, 432, 434, 436, 438, 450, 455, 469, 470, 471,
	472, 473, 476, 477, 482, 483, 484, 485, 486, 494,
	495, 508, 578, 580, 595, 613, 619, 475, 299, 300,
	439, 440, 312, 313, 633, 634, 298, 590, 620, 588,
	632, 614, 433, 374, 0, 0, 377, 280, 303, 318,
	0, 605, 496, 226, 461, 289, 250, 0, 0, 210,
	245, 229, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 243, 454, 240, 479, 511, 512, 513, 515,
	391, 265, 428, 392, 0, 372, 568, 569, 314, 0,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 1873, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	299, 300, 439, 440, 312, 313, 633, 634, 298, 590,
	620, 588, 632, 614, 433, 374, 0, 0, 377, 280,
	303, 318, 0, 605, 496, 226, 461, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 392, 0, 372, 568, 569,
	314, 0, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 1848,
	0, 0, 0, 707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 0, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 431, 432, 434, 436, 438, 450,
	455, 469, 470, 471, 472, 473, 476, 477, 482, 483,
	484, 485, 486, 494, 495, 508, 578, 580, 595, 613,
	619, 475, 299, 300, 439, 440, 312, 313, 633, 634,
	298, 590, 620, 588, 632, 614, 433, 374, 0, 0,
	377, 280, 303, 318, 0, 605, 496, 226, 461, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 243, 454, 240, 479,
	511, 512, 513, 515, 391, 265, 428, 392, 0, 372,
	568, 569, 314, 0, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 1747, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 404, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 299, 300, 439, 440, 312, 313,
	633, 634, 298, 590, 620, 588, 632, 614, 433, 374,
	0, 0, 377, 280, 303, 318, 0, 605, 496, 226,
	461, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 392,
	0, 372, 568, 569, 314, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 95, 0, 0, 0, 941, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 431, 432,
	434, 436, 438, 450, 455, 469, 470, 471, 472, 473,
	476, 477, 482, 483, 484, 485, 486, 494, 495, 508,
	578, 580, 595, 613, 619, 475, 299, 300, 439, 440,
	312, 313, 633, 634, 298, 590, 620, 588, 632, 614,
	433, 374, 0, 0, 377, 280, 303, 318, 0, 605,
	496, 226, 461, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	243, 454, 240, 479, 511, 512, 513, 515, 391, 265,
	428, 392, 0, 372, 568, 569, 314, 0, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 0, 194,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1433,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	431, 432, 434, 436, 438, 450, 455, 469, 470, 471,
	472, 473, 476, 477, 482, 483, 484, 485, 486, 494,
	495, 508, 578, 580, 595, 613, 619, 475, 299, 300,
	439, 440, 312, 313, 633, 634, 1432, 590, 620, 588,
	632, 614, 433, 374, 0, 0, 377, 280, 303, 318,
	0, 605, 496, 226, 461, 289, 250, 0, 0, 210,
	245, 229, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 243, 454, 240, 479, 511, 512, 513, 515,
	391, 265, 428, 392, 0, 372, 568, 569, 314, 0,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1032, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	299, 300, 439, 440, 312, 313, 633, 634, 298, 590,
	620, 588, 632, 614, 433, 374, 0, 0, 377, 280,
	303, 318, 0, 605, 496, 226, 461, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 392, 0, 372, 568, 569,
	314, 0, 520, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 0, 0, 0, 362, 266,
	0, 0, 425, 0, 203, 0, 481, 251, 373, 370,
	575, 281, 272, 268, 249, 315, 381, 423, 510, 417,
	0, 366, 0, 0, 491, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 247, 323, 202, 408, 492, 285, 0, 0,
	0, 0, 0, 194, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 244, 0, 0, 0,
	347, 356, 355, 336, 337, 339, 341, 346, 353, 359,
	0, 0, 0, 0, 0, 264, 319, 271, 263, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 397, 256, 0,
	448, 0, 662, 0, 616, 0, 0, 0, 0, 0,
	0, 0, 361, 0, 328, 197, 224, 0, 0, 407,
	456, 468, 0, 0, 0, 252, 0, 466, 421, 594,
	232, 283, 453, 427, 464, 435, 286, 0, 0, 465,
	368, 577, 445, 591, 617, 618, 262, 401, 603, 514,
	611, 635, 225, 259, 415, 499, 597, 488, 393, 573,
	574, 327, 487, 294, 201, 365, 623, 223, 474, 367,
	241, 230, 579, 600, 288, 451, 630, 212, 509, 589,
	238, 478, 0, 0, 638, 246, 498, 214, 586, 497,
	389, 324, 325, 213, 0, 452, 267, 292, 0, 0,
	257, 410, 581, 582, 255, 639, 227, 610, 219, 0,
	609, 403, 576, 587, 390, 379, 218, 585, 388, 378,
	332, 351, 352, 279, 305, 442, 371, 443, 304, 306,
	399, 398, 400, 206, 598, 0, 207, 0, 493, 599,
	640, 447, 211, 233, 234, 236, 0, 278, 282, 290,
	293, 301, 302, 311, 363, 414, 441, 437, 446, 0,
	571, 592, 604, 615, 621, 622, 624, 625, 626, 627,
	628, 631, 629, 402, 309, 489, 331, 369, 0, 0,
	420, 467, 239, 596, 490, 199, 0, 0, 0, 0,
	253, 254, 0, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 636, 500, 506, 501, 502, 503, 504, 505, 0,
	507, 0, 0, 0, 0, 0, 0, 583, 584, 659,
	380, 480, 593, 333, 345, 348, 338, 357, 0, 358,
	334, 335, 340, 342, 343, 344, 349, 350, 354, 360,
	248, 209, 386, 394, 570, 310, 215, 216, 217, 516,
	517, 518, 519, 607, 608, 612, 204, 457, 458, 459,
	460, 291, 602, 307, 463, 462, 329, 330, 375, 444,
	532, 534, 545, 549, 551, 553, 559, 562, 533, 535,
	546, 550, 552, 554, 560, 563, 522, 524, 526, 528,
	541, 540, 537, 565, 566, 543, 548, 527, 539, 544,
	557, 564, 561, 521, 525, 529, 538, 556, 555, 536,
	547, 558, 542, 530, 523, 531, 0, 196, 220, 364,
	0, 449, 287, 637, 606, 601, 205, 222, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 200, 208, 221, 231, 235, 242, 260, 275, 277,
	284, 297, 308, 316, 317, 320, 326, 376, 382, 383,
	384, 385, 404, 405, 406, 409, 412, 413, 416, 418,
	419, 422, 426, 430, 431, 432, 434, 436, 438, 450,
	455, 469, 470, 471, 472, 473, 476, 477, 482, 483,
	484, 485, 486, 494, 495, 508, 578, 580, 595, 613,
	619, 475, 299, 300, 439, 440, 312, 313, 633, 634,
	298, 590, 620, 588, 632, 614, 433, 374, 0, 0,
	377, 280, 303, 318, 0, 605, 496, 226, 461, 289,
	250, 0, 0, 210, 245, 229, 258, 273, 276, 322,
	387, 395, 424, 429, 295, 270, 243, 454, 240, 479,
	511, 512, 513, 515, 391, 265, 428, 392, 0, 372,
	568, 569, 314, 0, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	362, 266, 0, 0, 425, 0, 203, 0, 481, 251,
	373, 370, 575, 281, 272, 268, 249, 315, 381, 423,
	510, 417, 0, 366, 0, 0, 491, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 247, 323, 202, 408, 492, 285,
	0, 0, 0, 0, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 244, 0,
	0, 0, 347, 356, 355, 336, 337, 339, 341, 346,
	353, 359, 0, 0, 0, 0, 0, 264, 319, 271,
	263, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 397,
	256, 0, 448, 0, 0, 0, 616, 0, 0, 0,
	0, 0, 0, 0, 361, 0, 328, 197, 224, 0,
	0, 407, 456, 468, 0, 0, 0, 252, 0, 466,
	421, 594, 232, 283, 453, 427, 464, 435, 286, 0,
	0, 465, 368, 577, 445, 591, 617, 618, 262, 401,
	603, 514, 611, 635, 225, 259, 415, 499, 597, 488,
	393, 573, 574, 327, 487, 294, 201, 365, 623, 223,
	474, 367, 241, 230, 579, 600, 288, 451, 630, 212,
	509, 589, 238, 478, 0, 0, 638, 246, 498, 214,
	586, 497, 389, 324, 325, 213, 0, 452, 267, 292,
	0, 0, 257, 410, 581, 582, 255, 639, 227, 610,
	219, 0, 609, 403, 576, 587, 390, 379, 218, 585,
	388, 378, 332, 351, 352, 279, 305, 442, 371, 443,
	304, 306, 399, 398, 400, 206, 598, 0, 207, 0,
	493, 599, 640, 447, 211, 233, 234, 236, 0, 278,
	282, 290, 293, 301, 302, 311, 363, 414, 441, 437,
	446, 0, 571, 592, 604, 615, 621, 622, 624, 625,
	626, 627, 628, 631, 629, 402, 309, 489, 331, 369,
	0, 0, 420, 467, 239, 596, 490, 199, 0, 0,
	0, 0, 253, 254, 0, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 636, 500, 506, 501, 502, 503, 504,
	505, 0, 507, 0, 0, 0, 0, 0, 0, 583,
	584, 659, 380, 480, 593, 333, 345, 348, 338, 357,
	0, 358, 334, 335, 340, 342, 343, 344, 349, 350,
	354, 360, 248, 209, 386, 394, 570, 310, 215, 216,
	217, 516, 517, 518, 519, 607, 608, 612, 204, 457,
	458, 459, 460, 291, 602, 307, 463, 462, 329, 330,
	375, 444, 532, 534, 545, 549, 551, 553, 559, 562,
	533, 535, 546, 550, 552, 554, 560, 563, 522, 524,
	526, 528, 541, 540, 537, 565, 566, 543, 548, 527,
	539, 544, 557, 564, 561, 521, 525, 529, 538, 556,
	555, 536, 547, 558, 542, 530, 523, 531, 0, 196,
	220, 364, 0, 449, 287, 637, 606, 601, 205, 222,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 200, 208, 221, 231, 235, 242, 260,
	275, 277, 284, 297, 308, 316, 317, 320, 326, 376,
	382, 383, 384, 385, 4028, 405, 406, 409, 412, 413,
	416, 418, 419, 422, 426, 430, 431, 432, 434, 436,
	438, 450, 455, 469, 470, 471, 472, 473, 476, 477,
	482, 483, 484, 485, 486, 494, 495, 508, 578, 580,
	595, 613, 619, 475, 299, 300, 439, 440, 312, 313,
	633, 634, 298, 590, 620, 588, 632, 614, 433, 374,
	0, 0, 377, 280, 303, 318, 0, 605, 496, 226,
	461, 289, 250, 0, 0, 210, 245, 229, 258, 273,
	276, 322, 387, 395, 424, 429, 295, 270, 243, 454,
	240, 479, 511, 512, 513, 515, 391, 265, 428, 392,
	0, 372, 568, 569, 314, 0, 520, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 411, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 362, 266, 0, 0, 425, 0, 203, 0,
	481, 251, 373, 370, 575, 281, 272, 268, 249, 315,
	381, 423, 510, 417, 0, 366, 0, 0, 491, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 247, 323, 202, 408,
	492, 285, 0, 0, 0, 0, 0, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	244, 0, 0, 0, 347, 356, 355, 336, 337, 339,
	341, 346, 353, 359, 0, 0, 0, 0, 0, 264,
	319, 271, 263, 572, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 397, 256, 0, 448, 0, 0, 0, 616, 0,
	0, 0, 0, 0, 0, 0, 361, 0, 328, 197,
	224, 0, 0, 407, 456, 468, 0, 0, 0, 252,
	0, 466, 421, 594, 232, 283, 453, 427, 464, 435,
	286, 0, 0, 465, 368, 577, 445, 591, 617, 618,
	262, 401, 603, 514, 611, 635, 225, 259, 415, 499,
	597, 488, 393, 573, 574, 327, 487, 294, 201, 365,
	623, 223, 474, 367, 241, 230, 579, 600, 288, 451,
	630, 212, 509, 589, 238, 478, 0, 0, 638, 246,
	498, 214, 586, 497, 389, 324, 325, 213, 0, 452,
	267, 292, 0, 0, 257, 410, 581, 582, 255, 639,
	227, 610, 219, 0, 609, 403, 576, 587, 390, 379,
	218, 585, 388, 378, 332, 351, 352, 279, 305, 442,
	371, 443, 304, 306, 399, 398, 400, 206, 598, 0,
	207, 0, 493, 599, 640, 447, 211, 233, 234, 236,
	0, 278, 282, 290, 293, 301, 302, 311, 363, 414,
	441, 437, 446, 0, 571, 592, 604, 615, 621, 622,
	624, 625, 626, 627, 628, 631, 629, 402, 309, 489,
	331, 369, 0, 0, 420, 467, 239, 596, 490, 199,
	0, 0, 0, 0, 253, 254, 0, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 636, 500, 506, 501, 502,
	503, 504, 505, 0, 507, 0, 0, 0, 0, 0,
	0, 583, 584, 659, 380, 480, 593, 333, 345, 348,
	338, 357, 0, 358, 334, 335, 340, 342, 343, 344,
	349, 350, 354, 360, 248, 209, 386, 394, 570, 310,
	215, 216, 217, 516, 517, 518, 519, 607, 608, 612,
	204, 457, 458, 459, 460, 291, 602, 307, 463, 462,
	329, 330, 375, 444, 532, 534, 545, 549, 551, 553,
	559, 562, 533, 535, 546, 550, 552, 554, 560, 563,
	522, 524, 526, 528, 541, 540, 537, 565, 566, 543,
	548, 527, 539, 544, 557, 564, 561, 521, 525, 529,
	538, 556, 555, 536, 547, 558, 542, 530, 523, 531,
	0, 196, 220, 364, 0, 449, 287, 637, 606, 601,
	205, 222, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 200, 208, 221, 231, 235,
	242, 260, 275, 277, 284, 297, 308, 316, 317, 320,
	326, 376, 382, 383, 384, 385, 404, 405, 406, 409,
	412, 413, 416, 418, 419, 422, 426, 430, 431, 432,
	434, 436, 438, 450, 455, 469, 470, 471, 472, 473,
	476, 477, 482, 483, 484, 485, 486, 494, 495, 508,
	578, 580, 595, 613, 619, 475, 299, 300, 439, 440,
	312, 313, 633, 634, 298, 590, 620, 588, 632, 614,
	433, 374, 0, 0, 377, 280, 303, 318, 0, 605,
	496, 226, 461, 289, 250, 0, 0, 210, 245, 229,
	258, 273, 276, 322, 387, 395, 424, 429, 295, 270,
	243, 454, 240, 479, 511, 512, 513, 515, 391, 265,
	428, 392, 0, 372, 568, 569, 314, 0, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 362, 266, 0, 0, 425, 0,
	203, 0, 481, 251, 373, 370, 575, 281, 272, 268,
	249, 315, 381, 423, 510, 417, 0, 366, 0, 0,
	491, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 247, 323,
	202, 408, 492, 285, 0, 0, 0, 0, 0, 941,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 244, 0, 0, 0, 347, 356, 355, 336,
	337, 339, 341, 346, 353, 359, 0, 0, 0, 0,
	0, 264, 319, 271, 263, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 397, 256, 0, 448, 0, 0, 0,
	616, 0, 0, 0, 0, 0, 0, 0, 361, 0,
	328, 197, 224, 0, 0, 407, 456, 468, 0, 0,
	0, 252, 0, 466, 421, 594, 232, 283, 453, 427,
	464, 435, 286, 0, 0, 465, 368, 577, 445, 591,
	617, 618, 262, 401, 603, 514, 611, 635, 225, 259,
	415, 499, 597, 488, 393, 573, 574, 327, 487, 294,
	201, 365, 623, 223, 474, 367, 241, 230, 579, 600,
	288, 451, 630, 212, 509, 589, 238, 478, 0, 0,
	638, 246, 498, 214, 586, 497, 389, 324, 325, 213,
	0, 452, 267, 292, 0, 0, 257, 410, 581, 582,
	255, 639, 227, 610, 219, 0, 609, 403, 576, 587,
	390, 379, 218, 585, 388, 378, 332, 351, 352, 279,
	305, 442, 371, 443, 304, 306, 399, 398, 400, 206,
	598, 0, 207, 0, 493, 599, 640, 447, 211, 233,
	234, 236, 0, 278, 282, 290, 293, 301, 302, 311,
	363, 414, 441, 437, 446, 0, 571, 592, 604, 615,
	621, 622, 624, 625, 626, 627, 628, 631, 629, 402,
	309, 489, 331, 369, 0, 0, 420, 467, 239, 596,
	490, 199, 0, 0, 0, 0, 253, 254, 0, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 636, 500, 506,
	501, 502, 503, 504, 505, 0, 507, 0, 0, 0,
	0, 0, 0, 583, 584, 659, 380, 480, 593, 333,
	345, 348, 338, 357, 0, 358, 334, 335, 340, 342,
	343, 344, 349, 350, 354, 360, 248, 209, 386, 394,
	570, 310, 215, 216, 217, 516, 517, 518, 519, 607,
	608, 612, 204, 457, 458, 459, 460, 291, 602, 307,
	463, 462, 329, 330, 375, 444, 532, 534, 545, 549,
	551, 553, 559, 562, 533, 535, 546, 550, 552, 554,
	560, 563, 522, 524, 526, 528, 541, 540, 537, 565,
	566, 543, 548, 527, 539, 544, 557, 564, 561, 521,
	525, 529, 538, 556, 555, 536, 547, 558, 542, 530,
	523, 531, 0, 196, 220, 364, 0, 449, 287, 637,
	606, 601, 205, 222, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 200, 208, 221,
	231, 235, 242, 260, 275, 277, 284, 297, 308, 316,
	317, 320, 326, 376, 382, 383, 384, 385, 404, 405,
	406, 409, 412, 413, 416, 418, 419, 422, 426, 430,
	431, 432, 434, 436, 438, 450, 455, 469, 470, 471,
	472, 473, 476, 477, 482, 483, 484, 485, 486, 494,
	495, 508, 578, 580, 595, 613, 619, 475, 299, 300,
	439, 440, 312, 313, 633, 634, 298, 590, 620, 588,
	632, 614, 433, 374, 0, 0, 377, 280, 303, 318,
	0, 605, 496, 226, 461, 289, 250, 0, 0, 210,
	245, 229, 258, 273, 276, 322, 387, 395, 424, 429,
	295, 270, 243, 454, 240, 479, 511, 512, 513, 515,
	391, 265, 428, 392, 0, 372, 568, 569, 314, 0,
	520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 362, 266, 0, 0,
	425, 0, 203, 0, 481, 251, 373, 370, 575, 281,
	272, 268, 249, 315, 381, 423, 510, 417, 0, 366,
	0, 0, 491, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	247, 323, 202, 408, 492, 285, 0, 0, 0, 0,
	0, 194, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 244, 0, 0, 0, 347, 356,
	355, 336, 337, 339, 341, 346, 353, 359, 0, 0,
	0, 0, 0, 264, 319, 271, 263, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 397, 256, 0, 448, 0,
	0, 0, 616, 0, 0, 0, 0, 0, 0, 0,
	361, 0, 328, 197, 224, 0, 0, 407, 456, 468,
	0, 0, 0, 252, 0, 466, 421, 594, 232, 283,
	453, 427, 464, 435, 286, 0, 0, 465, 368, 577,
	445, 591, 617, 618, 262, 401, 603, 514, 611, 635,
	225, 259, 415, 499, 597, 488, 393, 573, 574, 327,
	487, 294, 201, 365, 623, 223, 474, 367, 241, 230,
	579, 600, 288, 451, 630, 212, 509, 589, 238, 478,
	0, 0, 638, 246, 498, 214, 586, 497, 389, 324,
	325, 213, 0, 452, 267, 292, 0, 0, 257, 410,
	581, 582, 255, 639, 227, 610, 219, 0, 609, 403,
	576, 587, 390, 379, 218, 585, 388, 378, 332, 351,
	352, 279, 305, 442, 371, 443, 304, 306, 399, 398,
	400, 206, 598, 0, 207, 0, 493, 599, 640, 447,
	211, 233, 234, 236, 0, 278, 282, 290, 293, 301,
	302, 311, 363, 414, 441, 437, 446, 0, 571, 592,
	604, 615, 621, 622, 624, 625, 626, 627, 628, 631,
	629, 402, 309, 489, 331, 369, 0, 0, 420, 467,
	239, 596, 490, 199, 0, 0, 0, 0, 253, 254,
	0, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 636,
	500, 506, 501, 502, 503, 504, 505, 0, 507, 0,
	0, 0, 0, 0, 0, 583, 584, 659, 380, 480,
	593, 333, 345, 348, 338, 357, 0, 358, 334, 335,
	340, 342, 343, 344, 349, 350, 354, 360, 248, 209,
	386, 394, 570, 310, 215, 216, 217, 516, 517, 518,
	519, 607, 608, 612, 204, 457, 458, 459, 460, 291,
	602, 307, 463, 462, 329, 330, 375, 444, 532, 534,
	545, 549, 551, 553, 559, 562, 533, 535, 546, 550,
	552, 554, 560, 563, 522, 524, 526, 528, 541, 540,
	537, 565, 566, 543, 548, 527, 539, 544, 557, 564,
	561, 521, 525, 529, 538, 556, 555, 536, 547, 558,
	542, 530, 523, 531, 0, 196, 220, 364, 0, 449,
	287, 637, 606, 601, 205, 222, 0, 261, 3688, 3690,
	3689, 3753, 3754, 3755, 3756, 3757, 3758, 3759, 789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 200,
	208, 221, 231, 235, 242, 260, 275, 277, 284, 297,
	308, 316, 317, 320, 326, 376, 382, 383, 384, 385,
	404, 405, 406, 409, 412, 413, 416, 418, 419, 422,
	426, 430, 431, 432, 434, 436, 438, 450, 455, 469,
	470, 471, 472, 473, 476, 477, 482, 483, 484, 485,
	486, 494, 495, 508, 578, 580, 595, 613, 619, 475,
	299, 300, 439, 440, 312, 313, 633, 634, 298, 590,
	620, 588, 632, 614, 433, 374, 0, 0, 377, 280,
	303, 318, 0, 605, 496, 226, 461, 289, 250, 0,
	0, 210, 245, 229, 258, 273, 276, 322, 387, 395,
	424, 429, 295, 270, 243, 454, 240, 479, 511, 512,
	513, 515, 391, 265, 428, 0, 0, 372, 568, 569,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3702,
	3703, 0, 0, 3778, 3777, 3776, 0, 0, 3774, 3775,
	3773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3779, 910, 0, 765, 766, 3780, 3781,
	914, 3782, 768, 769, 911, 912, 0, 763, 767, 913,
	915, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3685, 3686, 3687, 3691, 3692,
	3693, 3704, 3751, 3752, 3760, 3762, 866, 3761, 3763, 3764,
	3765, 3768, 3769, 3770, 3771, 3766, 3767, 3772, 3668, 3672,
	3669, 3670, 3671, 3683, 3673, 3674, 3675, 3676, 3677, 3678,
	3679, 3680, 3681, 3682, 3684, 3783, 3784, 3785, 3786, 3787,
	3788, 3697, 3701, 3700, 3698, 3699, 3695, 3696, 3723, 3722,
	3724, 3725, 3726, 3727, 3728, 3729, 3731, 3730, 3732, 3733,
	3734, 3735, 3736, 3737, 3705, 3706, 3709, 3710, 3708, 3707,
	3711, 3720, 3721, 3712, 3713, 3714, 3715, 3716, 3717, 3719,
	3718, 3738, 3739, 3740, 3741, 3742, 3744, 3743, 3747, 3748,
	3746, 3745, 3750, 3749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 916, 0, 917, 0,
	921, 0, 0, 0, 923, 922, 0, 924, 886, 885,
	0, 0, 918, 919, 0, 920, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3789, 3790, 3791, 3792, 3793, 3794, 3795, 3796,
}

var yyPact = [...]int{
	-1000, -1000, 5472, -1000, -529, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2301, 2431, -1000, -1000, -1000, -1000, 2470, -1000, 1005,
	1972, -1000, 2259, 4236, -1000, 54809, 480, -1000, 51921, 479,
	860, 218, 36037, -1000, 196, -1000, 183, 53365, 191, -1000,
	-1000, -1000, -1000, -434, 21597, 2184, 63, 59, 54809, -1000,
	-1000, -1000, -1000, -354, 2382, 1970, -1000, 386, -1000, -1000,
	-1000, -1000, -1000, -1000, 51199, -1000, 1124, -1000, -1000, 2269,
	2266, 2485, 912, 2180, -1000, 2336, 1970, -1000, 21597, 2415,
	2321, 20875, 20875, 422, -1000, -1000, 236, -1000, -1000, 30983,
	54809, 38925, 863, -1000, 2259, -1000, -1000, -1000, 190, -1000,
	325, 1873, -1000, 1870, -1000, 895, 1018, 365, 468, 458,
	364, 363, 362, 359, 358, 357, 353, 340, 347, -1000,
	926, 926, -209, -213, 1335, 445, 407, 407, 1015, 448,
	2222, 2217, -1000, -1000, 926, 926, 926, 342, 926, 926,
	926, 926, 279, 277, 926, 926, 926, 926, 926, 926,
	926, 926, 926, 926, 926, 926, 926, 926, 926, 926,
	926, 339, 2259, 258, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	54809, 212, 54809, -1000, 809, 54809, -438, 1084, 1084, 94,
	1084, 1084, 1084, 1084, 178, 979, 57, -1000, 177, 260,
	179, 263, 1052, 246, -1000, -1000, 248, 1052, 1734, -1000,
	916, 262, 169, -1000, 1084, 1084, -1000, 14353, 230, 14353,
	14353, -1000, 2241, -1000, -1000, -1000, -1000, -1000, 1287, -1000,
	-1000, -1000, -1000, -26, 447, -1000, -1000, -1000, -1000, 53365,
	50477, 308, -1000, -1000, 284, -1000, -1000, 1784, 1389, 21597,
	1255, 909, -1000, -1000, 1571, 877, -1000, -1000, -1000, -1000,
	-1000, 507, -1000, 23763, 23763, 23763, 23763, -1000, -1000, 1875,
	49755, 1875, 1875, 23763, 1875, 23763, 1875, 1875, 1875, 21597,
	1875, 1875, 1875, 1875, -1000, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, -1000, -1000, -1000, -1000, 1875, 808, 1875, 1875,
	1875, 1875, 1875, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1875, 1875, 1875, 1875, 1875, 1875, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	26651, 1490, 1487, 1459, -1000, 18709, 1875, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 54809, -1000, 1875,
	215, 53365, 53365, 326, 1281, -1000, -1000, 2336, 1970, 2449,
	-1000, -1000, 2382, 2409, 386, -1000, 3793, 1754, 1530, 1377,
	1970, 1854, 54809, -1000, 1896, -1000, -1000, -1000, -1000, 2065,
	1419, 1732, -1000, -1000, -1000, -1000, 2527, 21597, -1000, -1000,
	2457, -1000, 28095, 806, 2456, 49033, -1000, 422, 422, 1868,
	425, 32, -1000, -1000, -1000, -1000, 947, 35315, -1000, -1000,
	-1000, -1000, -1000, 1730, 54809, -1000, -1000, 4392, 1290, -1000,
	1971, -1000, 1726, -1000, 1907, 21597, 1990, 478, 1290, 460,
	452, 423, -1000, -60, -1000, -1000, -1000, -1000, -1000, -1000,
	926, 926, 926, -1000, 320, 2407, 4236, 5065, -1000, -1000,
	-1000, 48311, 1969, 1290, -1000, 1964, -1000, 1019, 874, 883,
	883, 1290, -1000, -1000, 54087, 1290, 1016, 1014, 1290, 1290,
	53365, 53365, -1000, 47589, -1000, 46867, 46145, 1280, 53365, 45423,
	44701, 43979, 43257, 42535, -1000, 2094, -1000, 2001, -1000, -1000,
	-1000, 54087, 1290, 1290, 54087, 53365, 54087, 54809, 1290, -1000,
	-1000, 374, -1000, -1000, 1277, 1276, 1274, 926, 926, 1273,
	1720, 1718, 1717, 926, 926, 1269, 1716, 37481, 1714, 261,
	1254, 1249, 1248, 1295, 1699, 228, 1697, 1288, 1272, 1245,
	53365, 1948, 54809, -1000, 254, 1058, 859, 946, 2259, 2183,
	1867, 444, 476, 1290, 428, 428, 53365, -1000, 15081, -1000,
	229, -1000, 1684, 21597, -1000, 1055, 1052, 1052, -1000, -1000,
	-1000, -1000, -1000, -1000, 1084, 54809, 1055, -1000, -1000, -1000,
	1052, 1084, 54809, 1084, 1084, 1084, 1084, 1052, 1052, 1052,
	1084, 54809, 54809, 54809, 54809, 54809, 54809, 54809, 54809, 54809,
	14353, 916, 1084, -440, -1000, 1672, -1000, -1000, 2103, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 14353, 14353, -1000,
	-1000, -1000, -1000, -1000, 1863, -1000, 181, 11, 186, -1000,
	41813, 519, 944, -1000, 519, -1000, -1000, -1000, 1862, 41091,
	-1000, -441, -446, -447, -448, -1000, -1000, -1000, -451, -453,
	-1000, -1000, -1000, 21597, 21597, 21597, 21597, -239, -1000, 1053,
	23763, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21597, 253,
	1017, 23763, 23763, 23763, 23763, 23763, 23763, 23763, 25207, 24485,
	23763, 23763, 23763, 23763, 23763, 23763, -1000, -1000, 33149, 6008,
	6008, 877, 877, 877, 877, -1000, -170, 1859, 54087, -1000,
	-1000, -1000, 804, 21597, 21597, 877, -1000, 1290, 1035, 18709,
	20875, 20875, 21597, 955, 1389, 54087, 21597, -1000, 1377, -1000,
	-1000, -1000, -1000, 1183, -1000, -1000, 1101, 2265, 2265, 2265,
	2265, 21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597,
	21597, 2265, 21597, 1128, 1128, 1198, 21597, 21597, 21597, 21597,
	21597, 21597, 17265, 21597, 21597, 23763, 21597, 21597, 21597, 1377,
	21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597,
	21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597,
	21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597,
	21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597,
	21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597,
	21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597,
	21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597,
	21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597, 1377,
	21597, 1247, 21597, 21597, 21597, 21597, 21597, 21597, 20875, 16537,
	20875, 20875, 20875, 20875, 20875, -1000, -1000, -1000, -1000, -1000,
	-1000, 21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597, 1377,
	21597, 21597, 21597, 21597, 21597, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1610, 1525, 1380, 21597, -1000,
	1855, -1000, -183, 30261, 21597, 1670, 2455, 2028, 53365, -1000,
	-1000, -1000, -1000, -1000, 2336, -1000, 2336, 1610, 3784, 2110,
	20875, -1000, -1000, 3784, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1728, -1000, 54809, 1854, 2318, 53365, 2099, 1657,
	351, -1000, 21597, 21597, 1851, -1000, 1396, 54809, -1000, -239,
	-1000, 40369, -1000, -1000, 13625, 54809, 328, 54809, -1000, 29539,
	39647, 272, -1000, 32, 1826, -1000, 24, 6, 17987, 862,
	-1000, -1000, -1000, 1335, 25929, 1746, 862, 104, -1000, -1000,
	-1000, 1907, -1000, 1907, 1907, 1907, 1907, 351, 351, 351,
	351, -1000, -1000, -1000, -1000, -1000, 1947, 1943, -1000, 1907,
	1907, 1907, 1907, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1937, 1937, 1937, 1931, 1931, 1908, 1908, 404, -1000, 21597,
	411, 38925, 2299, 1244, 1627, 254, 430, 2022, 1290, 1290,
	1290, 430, -1000, 1329, 1313, 1311, -1000, -516, 1846, -1000,
	-1000, 2404, -1000, -1000, 934, 1057, 1041, 1054, 53365, 232,
	310, -1000, 412, -1000, 38925, 1290, 1011, 883, 1290, -1000,
	1290, -1000, -1000, -1000, -1000, -1000, 1290, -1000, -1000, 1843,
	-1000, 1804, 1159, 1034, 1153, 1032, 1843, -1000, -1000, -175,
	1843, -1000, 1843, -1000, 1843, -1000, 1843, -1000, 1843, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 990, 281,
	-331, 53365, 232, 435, -1000, 434, 33149, -1000, -1000, -1000,
	33149, 33149, -1000, -1000, -1000, -1000, 1645, 1629, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -501, 54809, -1000,
	245, 943, 287, 316, 301, 54809, 419, 2350, 2340, 2337,
	2334, 2324, 296, 273, 54809, 54809, 428, 2082, 54809, 2296,
	54809, -1000, -1000, -1000, -1000, 1621, 1618, -1000, 1389, 54809,
	-1000, -1000, 1084, 1084, -1000, -1000, 54809, 1084, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1084, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 54809, -1000, -1000, -1000, -1000, -26, 175, -1000,
	-1000, 53365, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -106, -1000, 47, 22, 420, -1000, -1000, -1000, -1000,
	-1000, 2363, -1000, 1389, 991, 995, -1000, 1875, -1000, -1000,
	1162, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 253,
	23763, 23763, 23763, 1432, 826, 1555, 1346, 914, 1143, 1143,
	935, 23763, 935, 23763, 882, 882, 882, 882, 882, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1604, -1000, 1875,
	54087, 1712, 16537, 2283, 2163, 1377, 896, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3811, 1706, -1000,
	1706, 2014, 973, -1000, 21597, 1377, 3807, -1000, -1000, 1377,
	1377, 21597, -1000, -1000, 21597, 21597, 21597, 21597, 1627, 1627,
	1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 21597, 1627,
	1841, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1835,
	2447, 1608, 1627, 1627, 1627, 1627, 1627, 21597, 1519, -1000,
	-1000, -1000, 1349, 3803, 1282, 3510, 1627, 1627, -1000, 1627,
	3506, 3500, 1377, 1784, 2705, 2634, 1627, 1627, 1627, 1627,
	1627, 2626, 2618, 1627, 1627, 2614, 1627, 3490, 1627, 2588,
	2576, 2570, 2558, 2543, 2539, 2520, 2514, 2510, 2496, 2483,
	2476, 2464, 2450, 2440, 2414, 2408, 2401, 1627, 1627, 1627,
	3475, 1627, 3459, 1627, 3440, 1627, 1627, 3426, 2366, 2351,
	1377, 1829, -1000, 3402, 1627, 3395, 3391, 3382, 2333, 3378,
	3368, 3349, 1627, 1627, 1627, 2326, 3345, 3332, 3318, 3307,
	3302, 3284, 3279, 3275, 3271, 1627, 1380, 1380, 1380, 1380,
	1380, 3261, -241, 1627, 1377, -1000, -1000, -1000, -1000, -1000,
	3257, 2294, 3249, 3017, 3013, 2995, 1377, 1828, 1875, 803,
	-1000, -1000, 1706, 1377, 1377, 1706, 1706, 2974, 2969, 2908,
	2903, 2892, 2886, 1627, 1627, -1000, 1627, 2864, 2821, 2263,
	2245, 1377, -1000, 1380, 54809, -1000, -431, -1000, -5, 967,
	1875, -1000, 37481, 1377, -1000, 5620, -1000, 1163, -1000, -1000,
	-1000, -1000, -1000, 34593, 1782, 3784, -1000, -1000, 1875, 1703,
	-1000, -1000, 351, 91, 33871, 858, 858, 112, 1389, 1389,
	21597, -1000, -1000, -1000, -1000, -1000, -1000, 793, 2435, 369,
	1875, -1000, 1803, 2848, -1000, -1000, -1000, 2317, 27373, -1000,
	-1000, 1875, 1875, 54809, 1770, 1753, -1000, 789, -1000, 1292,
	1826, 32, 18, -1000, -1000, -1000, -1000, 1389, -1000, 1307,
	338, 343, -1000, 414, -1000, -1000, -1000, -1000, 2198, 98,
	-1000, -1000, -1000, 815, 351, -1000, -1000, -1000, -1000, -1000,
	-1000, 1581, 1581, -1000, -1000, -1000, -1000, -1000, 1241, -1000,
	-1000, -1000, -1000, 1239, -1000, -1000, 1238, -1000, -1000, 2811,
	2034, 411, -1000, -1000, 926, 1579, -1000, -1000, 2203, 926,
	926, 53365, -1000, -1000, 1741, 2299, 245, 54809, 972, 2078,
	-1000, 2022, 2022, 2022, 54809, -1000, -1000, -1000, -1000, -1000,
	-1000, -509, 187, 587, -1000, -1000, -1000, 4415, 53365, 1693,
	-1000, 223, -1000, 1713, -1000, 53365, -1000, 1690, 1929, 1290,
	1290, -1000, -1000, -1000, 53365, 1875, -1000, -1000, -1000, -1000,
	463, 2255, 298, -1000, -1000, -277, -1000, -1000, 232, 223,
	54087, 1290, 862, -1000, -1000, -1000, -1000, -1000, -505, 1677,
	446, 235, 323, 54809, 54809, 54809, 54809, 54809, 785, -1000,
	-1000, 43, -1000, -1000, 203, -1000, -1000, -1000, -1000, 203,
	-1000, -1000, -1000, -1000, 266, 427, -1000, 54809, 54809, 986,
	-1000, -1000, -1000, -1000, -1000, 1052, -1000, -1000, 1052, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2234, 54809, 14, -469, -1000, -466, 21597, -1000, -1000,
	-1000, -1000, 1189, 467, 1555, 23763, 23763, 1035, 1035, 23763,
	-1000, -1000, -1000, 318, 318, 33149, -1000, 23763, 21597, 20875,
	-1000, -1000, 21597, 21597, 950, -1000, 21597, 1318, -1000, 21597,
	-1000, -1000, 1380, 1627, 1627, 1627, 1627, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1848, -1000, 21597,
	21597, 21597, 1377, 315, -1000, -1000, -1000, -1000, -1000, 2445,
	-1000, 21597, -1000, 33149, 21597, 21597, 21597, -1000, -1000, -1000,
	21597, 21597, -1000, -1000, 21597, -1000, 21597, -1000, -1000, -1000,
	-1000, -1000, -1000, 21597, -1000, 21597, -1000, -1000, -1000, 21597,
	-1000, 21597, -1000, -1000, 21597, -1000, 21597, -1000, 21597, -1000,
	21597, -1000, 21597, -1000, 21597, -1000, 21597, -1000, 21597, -1000,
	21597, -1000, 21597, -1000, 21597, -1000, 21597, -1000, 21597, -1000,
	21597, -1000, 21597, -1000, 21597, -1000, 21597, -1000, 21597, -1000,
	-1000, -1000, 21597, -1000, 21597, -1000, 21597, -1000, -1000, 21597,
	-1000, 21597, -1000, 21597, -1000, 21597, 21597, -1000, 21597, 21597,
	21597, -1000, 21597, 21597, 21597, 21597, -1000, -1000, -1000, -1000,
	21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597, 21597,
	-1000, -1000, -1000, -1000, -1000, -1000, 21597, -1000, 38925, 21,
	-241, 1247, 21, 1247, 23041, 816, 814, 22319, -1000, 20875,
	15809, -1000, -1000, -1000, -1000, -1000, 21597, 21597, 21597, 21597,
	21597, 21597, -1000, -1000, -1000, 21597, 21597, -1000, 21597, -1000,
	21597, -1000, -1000, -1000, -1000, -1000, 967, -1000, 883, 883,
	883, 53365, -1000, -1000, -1000, -1000, 1821, -1000, 2347, -1000,
	2141, 2140, 2444, 2435, -1000, 29539, 3784, -1000, -1000, 53365,
	-422, -1000, 2171, 2145, 858, 858, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 12897, 2336, 21597, 2070, 54087, 251, -1000,
	28817, 53365, 54087, 29539, 29539, 29539, 29539, 29539, -1000, 2119,
	2115, -1000, 2109, 2097, 2150, 54809, -1000, 1610, 1664, -1000,
	21597, 31705, 1778, 29539, -1000, -1000, 29539, 54809, 12169, -1000,
	-1000, 4, -10, -1000, -1000, -1000, -1000, 1335, -1000, -1000,
	1252, 2314, 2192, -1000, -1000, -1000, -1000, -1000, 1613, -1000,
	1603, 1820, 1599, 1577, 281, -1000, 1978, 2231, 926, 926,
	-1000, 1237, -1000, 1290, 1573, 1570, -1000, -1000, -1000, 415,
	-1000, 2291, 54809, 2067, 2063, 2061, -1000, -521, 1235, 1925,
	1939, 21597, 1917, 2400, 1808, 53365, -1000, -1000, 54087, -1000,
	299, -1000, 411, 53365, -1000, -1000, -1000, 310, 54809, -1000,
	6892, -1000, -1000, -1000, 223, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 54809, 243, -1000, 1909, 1256, -1000, -1000, 2005,
	-1000, -1000, -1000, -1000, 214, 286, 1568, 201, 1528, 201,
	-1000, 54809, 937, 2034, 54809, -1000, -1000, -1000, 1084, 1084,
	-1000, -1000, 2230, -1000, 1290, 1627, 23763, 23763, -1000, 877,
	-1000, -1000, 539, -222, 1907, 1907, -1000, 1907, 1908, -1000,
	1907, 172, 1907, 171, 1907, -1000, -1000, 1377, 1377, -1000,
	1380, -1000, 2237, 2223, -1000, 1389, 21597, 2817, -1000, -1000,
	-1000, -1000, -1000, -67, 2784, 2756, 1627, -1000, 1905, 1904,
	21597, 1627, 1377, 2233, 1627, 1627, 1627, 1627, 1627, 1627,
	1627, 1627, 1627, 1627, 1627, 1627, 2213, 2207, 2168, 2133,
	2112, 2107, 2102, 2095, 2090, 2072, 2064, 2045, 2025, 2008,
	2003, 1999, 1627, 1627, 1981, 1627, 1977, 1961, -1000, 1389,
	1380, 2744, 1380, 1627, 1627, 2723, 293, 1627, 1544, 1544,
	1544, 1544, 1544, 1380, 1380, 1380, 1380, 1627, 53365, -1000,
	-241, -1000, -1000, -313, -314, -1000, 1377, -241, 1819, 23763,
	1627, 23763, 23763, 23763, 1627, 1377, -1000, 1938, 1934, 2718,
	1921, 1627, 2641, 1627, 1627, 1627, 1865, -1000, 2361, 2361,
	2361, 1535, 1163, 54809, -1000, -1000, -1000, -1000, 2435, 2432,
	1810, -1000, -1000, 91, 663, -1000, 2157, 2145, -1000, 2399,
	2175, 2398, -1000, -1000, -1000, -1000, -1000, 1389, -1000, 2246,
	1739, -1000, 942, 1792, -1000, -1000, 20153, 1539, 2131, 787,
	1535, 1812, 2848, 2017, 2060, 2999, -1000, -1000, -1000, -1000,
	2096, -1000, 1958, -1000, -1000, 1896, -1000, 2609, 328, 29539,
	1767, 1767, -1000, 524, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1095, 6892, 2482, -1000, 1496, -1000, 1304, 192, 1232,
	-1000, -1000, 926, 926, -1000, 1010, 1003, -1000, 54809, 1903,
	-1000, 351, 1491, 351, 1229, -1000, -1000, 1228, -1000, -1000,
	-1000, -1000, 1886, 2050, -1000, -1000, -1000, -1000, 54809, -1000,
	-1000, 54809, 54809, 54809, 1902, 2393, -1000, 21597, 1900, 939,
	2598, 53365, 53365, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 403, 926, -483, 271, 270, 926,
	926, 926, -522, -1000, -1000, 1532, 1527, -1000, -182, -1000,
	21597, -1000, -1000, -1000, -1000, -1000, 1210, 1210, 1490, 1487,
	1459, -1000, 1896, -1000, -1000, -1000, 1707, -1000, -1000, -184,
	53365, 53365, 53365, 53365, -1000, -1000, 1172, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 877,
	1377, 421, -190, 1377, -1000, -1000, 351, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 21597, -1000, 21597,
	-1000, 1389, 21597, 2336, 1453, 21597, 21597, -1000, 1227, 1207,
	1627, -1000, -1000, -1000, 21597, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21597, -1000,
	21597, -1000, 21597, -1000, 21597, -1000, 21597, -1000, 21597, -1000,
	21597, -1000, 21597, -1000, 21597, -1000, 21597, -1000, 21597, -1000,
	21597, -1000, 21597, -1000, 21597, -1000, 21597, -1000, 21597, -1000,
	-1000, 21597, -1000, -1000, -1000, 21597, -1000, 21597, -1000, 21597,
	-1000, -1000, -1000, 21597, 234, 318, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1377, 311, -1000,
	-1000, -1000, -1000, 2433, -1000, 1377, 21597, 1035, -1000, 1035,
	1035, 1035, -1000, -1000, -1000, 21597, -1000, 21597, 21597, -1000,
	21597, -1000, 21597, -1000, -1000, -1000, -1000, 21597, 1875, 2252,
	1875, 1875, 31705, -1000, -1000, 2432, 2424, 2390, 2155, 2158,
	2158, 2157, -1000, 2388, 2387, -1000, 1450, 2374, 1447, 984,
	-1000, 54087, 21597, 251, -1000, 413, 53365, 251, 53365, -1000,
	2422, -1000, -1000, 21597, 1899, -1000, 21597, -1000, -1000, -1000,
	-1000, 6008, 2435, 1767, -1000, -1000, 888, -1000, 21597, -1000,
	55289, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1443,
	1440, -1000, -1000, 1898, 21597, -1000, -1000, -1000, 1609, 1536,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1896, -1000,
	-1000, -1000, -1000, 310, -512, 2531, 53365, 1202, -1000, 1482,
	1808, 303, 251, 1418, 926, 926, 926, 1197, 1195, 37481,
	1479, -1000, 53365, 314, -1000, 310, -1000, -215, -216, 1627,
	-1000, -1000, 2311, -1000, -1000, 15809, -1000, -1000, 1894, 2021,
	-1000, -1000, -1000, -1000, 2086, -173, -196, -1000, -1000, 1627,
	1627, 2592, 1377, -1000, 1627, 1627, 1483, 1413, -1000, 1627,
	1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627,
	1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 1627, 1380,
	1817, -1000, 234, 1377, 2058, -1000, -1000, 6008, -1000, -1000,
	2422, 2373, 21, -1000, -1000, 220, 21, 1389, 977, 1377,
	1377, 977, 1806, 1627, 1790, 1785, 1627, 1627, 32427, -1000,
	2372, 2371, 38203, 38203, 967, 2424, -251, 21597, 21597, 2153,
	1200, -1000, -1000, -1000, -1000, 1409, 1369, -1000, 1356, -1000,
	2479, -1000, 1389, -1000, 251, -1000, 523, 1792, -1000, 2336,
	1389, 53365, 1389, 79, 2422, -1000, 1627, -1000, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875, 1875,
	1875, 1875, 1875, 1875, 1875, 1875, 1875, -1000, -1000, 53365,
	2289, -1000, -1000, 2306, 1477, 164, -1000, 1408, 1808, -1000,
	-1000, 249, -1000, 21597, -1000, 37481, 1342, 1326, -1000, -1000,
	-1000, -1000, -522, -1000, -1000, -1000, -1000, -1000, -1000, 386,
	1805, -1000, 925, 53365, 54809, -1000, 2059, -1000, -1000, -1000,
	21597, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21597, -1000,
	1377, 2055, -1000, -358, -1000, -488, 21597, -241, -1000, -1000,
	-241, -1000, -1000, -1000, -1000, -1000, 21597, -1000, -1000, 21597,
	-1000, 21597, -1000, -1000, 1473, -1000, -1000, -1000, -1000, -1000,
	1473, 1473, -1000, -251, -1000, 1794, -1000, 53365, 1389, 1784,
	-1000, 1180, -1000, -1000, -1000, -1000, -1000, 54087, 1792, 53365,
	-1000, 1469, 1377, 1875, 2336, -1000, 1435, -1000, 386, -1000,
	1889, 1939, -1000, -1000, -1000, 19431, -1000, -1000, -1000, -1000,
	-1000, 250, -180, 15809, 11441, 1407, -1000, -177, 1627, 1380,
	-1000, -457, -1000, -1000, -1000, -1000, 295, -1000, -1000, 1784,
	-1000, -1000, 1761, 1683, 1412, 36759, -1000, -1000, -1000, -1000,
	-251, -1000, -1000, 2304, -1000, -1000, 1769, -1000, -1000, 31705,
	52643, -1000, -168, 331, -180, 21597, 1887, 1377, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -35, -1000, -1000, 522,
	-1000, -1000, -1000, 2005, -194, -1000, -1000, -1000, 321, -472,
	-301, -303, 23763, -1000, 21597, -1000, 21597, -1000, 21597, -1000,
	-1000, -1000, 53365, 1875, -1000, 1376, -1000, 4346, -326, 2048,
	-1000, -101, -1000, -1000, -1000, 1080, 1315, -1000, -1000, -1000,
	-1000, -1000, -1000, 2174, 53365, -1000, 393, -1000, -1000, 15081,
	-184, -206, 982, -1000, -1000, -1000, -1000, -1000, 1035, 1385,
	1286, 1627, -1000, 53365, -1000, 52643, -320, 862, 6008, -1000,
	2035, 2002, 2443, -1000, -1000, -1000, -1000, -1000, -1000, -526,
	1352, 237, -1000, -1000, -1000, 321, -322, -1000, 21597, -1000,
	21597, -1000, 1377, -1000, -1000, 2288, 79, -1000, 2475, -1000,
	2463, 989, 989, -1000, 1156, -526, -1000, -1000, -1000, -1000,
	1627, 1627, -1000, -343, -1000, -1000, -1000, -1000, -1000, 389,
	1219, -1000, -1000, -1000, -1000, -1000, 6008, -1000, -1000, -1000,
	257, 257, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3163, 3162, 28, 5, 35, 34, 3159, 3155, 3152,
	176, 3140, 3137, 3135, 3132, 3131, 3128, 2538, 2513, 2505,
	3127, 3126, 3125, 3121, 3120, 3119, 3116, 3111, 3109, 37,
	106, 41, 113, 209, 198, 3108, 178, 164, 200, 3107,
	3105, 3104, 119, 193, 84, 81, 191, 3103, 3101, 73,
	3100, 3098, 3097, 189, 188, 184, 1057, 3096, 187, 112,
	51, 3093, 3092, 3091, 3089, 3088, 3087, 3086, 3085, 3083,
	3082, 3081, 3080, 3079, 3076, 3075, 3072, 3065, 3060, 301,
	3055, 3053, 18, 3050, 75, 3045, 3042, 3041, 3040, 3039,
	7, 3032, 3031, 25, 42, 3026, 3025, 46, 3024, 3020,
	3019, 3018, 3016, 69, 3014, 22, 3012, 39, 3011, 3010,
	121, 3009, 2994, 2986, 43, 2985, 2980, 2979, 11, 170,
	2977, 2976, 139, 2974, 2967, 2966, 177, 206, 2963, 2959,
	2956, 179, 105, 110, 2951, 2950, 98, 192, 2949, 123,
	2943, 2942, 2924, 153, 2913, 3798, 2911, 2909, 62, 58,
	199, 2908, 2903, 163, 67, 53, 16, 17, 2902, 2894,
	64, 66, 2893, 104, 2892, 2891, 101, 76, 2884, 95,
	100, 2883, 2880, 21, 6, 2870, 1, 4, 2, 80,
	2869, 2863, 114, 2855, 2853, 2852, 96, 2851, 2850, 1035,
	2832, 90, 132, 102, 77, 2830, 173, 130, 2827, 2823,
	2822, 2820, 2818, 49, 2817, 2813, 2811, 138, 250, 165,
	2810, 147, 336, 52, 144, 2809, 195, 78, 197, 169,
	2805, 2804, 140, 136, 2803, 2802, 56, 167, 190, 2801,
	92, 128, 118, 171, 91, 131, 2800, 2798, 57, 70,
	2796, 2792, 2791, 2790, 166, 2789, 2780, 61, 2776, 54,
	2774, 185, 2772, 137, 68, 2771, 172, 168, 2768, 72,
	2766, 2765, 82, 94, 97, 38, 2764, 159, 162, 120,
	175, 2763, 2756, 55, 2747, 2746, 2745, 196, 300, 2744,
	2738, 311, 182, 142, 151, 85, 2737, 334, 2734, 2728,
	15, 4937, 7382, 2725, 36, 161, 2721, 2718, 7142, 19,
	45, 29, 2712, 205, 2710, 2706, 2705, 2697, 215, 220,
	109, 160, 59, 2694, 2693, 2692, 63, 2689, 2685, 2679,
	2676, 2669, 2667, 71, 33, 32, 31, 217, 60, 20,
	99, 155, 154, 65, 2662, 2656, 2650, 124, 87, 2649,
	158, 157, 126, 156, 2646, 180, 143, 117, 2636, 93,
	30, 2635, 2634, 2631, 2625, 89, 2623, 2615, 2614, 2612,
	152, 145, 116, 79, 2601, 83, 115, 149, 146, 48,
	2595, 47, 2588, 2582, 26, 186, 23, 2579, 12, 103,
	108, 2577, 6807, 183, 2576, 8, 302, 150, 2575, 2571,
	9, 10, 13, 2561, 2560, 2559, 2556, 133, 2546, 2536,
	2532, 2526, 27, 50, 24, 14, 111, 74, 2525, 2521,
	141, 2519, 2517, 2515, 0, 1003, 125, 2506, 202,
}

//line sql.y:8575
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalType {
	v, _ := st.union.(IntervalType)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) killTypeUnion() KillType {
	v, _ := st.union.(KillType)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 412, 413, 413, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 259, 382, 383, 383, 257, 257, 28, 74, 36,
	36, 35, 35, 38, 38, 37, 31, 31, 31, 32,
	32, 32, 32, 32, 32, 32, 32, 33, 33, 33,
	33, 33, 33, 29, 29, 29, 29, 30, 30, 30,
	30, 30, 15, 16, 34, 34, 17, 17, 108, 108,
	18, 19, 19, 19, 19, 416, 416, 184, 184, 182,
	182, 183, 183, 262, 262, 20, 266, 266, 268, 268,
	268, 268, 258, 258, 258, 21, 21, 267, 267, 269,
	269, 269, 272, 272, 272, 272, 311, 311, 311, 22,
	22, 22, 22, 22, 129, 129, 385, 385, 384, 378,
	378, 377, 377, 376, 381, 381, 380, 380, 379, 40,
	41, 50, 50, 50, 50, 51, 52, 386, 386, 351,
	57, 57, 56, 56, 56, 56, 56, 56, 58, 58,
	54, 54, 53, 53, 55, 55, 353, 353, 339, 339,
	352, 352, 352, 352, 352, 352, 352, 338, 338, 140,
	140, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 401, 401,
	401, 400, 400, 237, 237, 237, 237, 237, 237, 237,
	237, 149, 149, 160, 160, 160, 160, 160, 160, 147,
	147, 148, 146, 146, 146, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	154, 154, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 159, 159, 155, 155, 155, 156,
	156, 156, 157, 157, 402, 402, 402, 402, 316, 316,
	316, 316, 319, 319, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 318, 318, 318, 318, 318, 318, 318,
	320, 320, 320, 320, 320, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 322, 322, 322, 322, 322, 322, 322, 322, 337,
	337, 323, 323, 331, 331, 332, 332, 333, 333, 333,
	334, 334, 334, 335, 335, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 330, 330, 329, 329, 329, 340,
	365, 365, 364, 364, 362, 362, 362, 362, 362, 362,
	362, 362, 349, 349, 359, 359, 359, 359, 359, 348,
	348, 344, 344, 344, 345, 345, 346, 346, 343, 343,
	347, 347, 361, 361, 360, 360, 341, 341, 342, 342,
	367, 403, 403, 403, 403, 403, 404, 404, 368, 393,
	395, 395, 395, 394, 394, 391, 392, 390, 390, 390,
	390, 390, 84, 84, 84, 285, 285, 286, 286, 357,
	357, 356, 356, 356, 358, 358, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 355, 355, 355,
	355, 355, 355, 355, 355, 355, 355, 280, 280, 280,
	389, 389, 389, 389, 389, 389, 388, 388, 388, 354,
	354, 354, 354, 387, 387, 59, 59, 217, 217, 406,
	406, 407, 407, 407, 47, 47, 47, 47, 47, 47,
	46, 46, 46, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 48, 48, 43, 43, 43, 43,
	43, 43, 43, 43, 43, 43, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 110, 110, 111, 111, 111, 111,
	113, 113, 113, 370, 370, 60, 60, 3, 3, 172,
	174, 175, 175, 173, 173, 173, 173, 173, 173, 62,
	62, 61, 61, 177, 176, 178, 178, 178, 1, 1,
	2, 2, 4, 4, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 375, 375, 375, 375,
	375, 375, 375, 375, 375, 375, 336, 336, 336, 369,
	369, 371, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 116, 115, 115, 114, 117, 117, 117, 117,
	117, 117, 117, 117, 373, 373, 373, 63, 63, 374,
	324, 325, 326, 5, 6, 350, 372, 124, 124, 24,
	39, 39, 25, 25, 25, 25, 26, 26, 64, 67,
	67, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 279, 279, 288, 288, 278, 278, 303,
	303, 303, 281, 281, 281, 282, 282, 399, 399, 399,
	275, 275, 66, 66, 66, 304, 304, 304, 304, 69,
	69, 408, 408, 409, 409, 410, 410, 410, 70, 71,
	71, 306, 306, 307, 307, 72, 73, 85, 85, 85,
	85, 85, 85, 85, 86, 86, 86, 86, 109, 109,
	109, 10, 10, 10, 10, 81, 81, 81, 9, 9,
	11, 68, 68, 75, 396, 396, 397, 398, 398, 398,
	398, 76, 78, 27, 27, 27, 27, 27, 27, 135,
	135, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 130, 130, 130, 123, 123, 417, 79,
	80, 80, 127, 127, 127, 128, 120, 120, 120, 126,
	126, 126, 12, 12, 13, 261, 261, 14, 14, 132,
	132, 134, 134, 134, 134, 134, 136, 136, 136, 136,
	136, 136, 136, 131, 131, 133, 133, 133, 133, 296,
	296, 296, 295, 295, 166, 166, 168, 167, 167, 169,
	169, 170, 170, 170, 170, 215, 215, 192, 192, 254,
	254, 255, 255, 253, 253, 260, 260, 256, 256, 256,
	256, 263, 263, 171, 171, 171, 171, 179, 179, 180,
	180, 181, 181, 305, 305, 301, 301, 301, 300, 300,
	185, 185, 185, 187, 186, 186, 186, 186, 188, 188,
	190, 190, 189, 189, 191, 196, 196, 195, 195, 193,
	193, 193, 193, 194, 194, 194, 194, 197, 197, 145,
	145, 145, 145, 145, 145, 145, 145, 158, 158, 158,
	158, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 244, 244, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 220, 220, 219, 219, 87, 87,
	87, 88, 88, 89, 89, 89, 89, 89, 90, 90,
	90, 90, 90, 90, 90, 92, 92, 91, 91, 210,
	210, 293, 293, 93, 94, 94, 97, 97, 96, 95,
	95, 101, 101, 98, 98, 100, 100, 99, 102, 102,
	103, 104, 104, 276, 276, 198, 198, 206, 206, 206,
	206, 199, 199, 199, 199, 199, 199, 199, 207, 207,
	207, 214, 208, 208, 204, 204, 202, 202, 202, 202,
	202, 202, 202, 202, 202, 202, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 203, 203, 203, 203, 203, 163, 163, 163,
	163, 225, 225, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 152, 152,
	164, 164, 164, 164, 165, 165, 165, 165, 165, 165,
	165, 313, 313, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 418, 418, 327, 327, 327, 205, 205, 205, 205,
	205, 125, 125, 125, 125, 125, 310, 310, 310, 314,
	314, 314, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 315, 315, 223,
	223, 121, 121, 221, 221, 222, 224, 224, 216, 216,
	216, 216, 218, 218, 201, 201, 201, 226, 226, 227,
	227, 105, 106, 106, 107, 107, 228, 228, 230, 229,
	229, 231, 232, 232, 232, 233, 233, 234, 234, 234,
	49, 49, 49, 49, 49, 44, 44, 44, 44, 45,
	45, 45, 45, 137, 137, 137, 137, 139, 139, 138,
	138, 82, 82, 83, 83, 83, 143, 143, 144, 144,
	144, 141, 141, 142, 142, 251, 251, 235, 235, 235,
	242, 242, 242, 238, 238, 240, 240, 240, 241, 241,
	241, 239, 248, 248, 250, 250, 249, 249, 245, 245,
	246, 246, 247, 247, 247, 243, 243, 200, 200, 200,
	200, 200, 252, 252, 252, 252, 264, 264, 211, 211,
	213, 213, 212, 212, 162, 265, 265, 273, 270, 270,
	271, 271, 297, 297, 297, 274, 274, 287, 287, 283,
	283, 284, 284, 277, 277, 289, 289, 289, 77, 209,
	209, 366, 366, 363, 292, 292, 294, 294, 298, 298,
	302, 302, 299, 299, 8, 411, 411, 411, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 290,
	290, 290, 290, 290, 290, 290, 290, 290, 290, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 291, 291,
	291, 291, 291, 414, 415, 308, 309, 309, 309,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 0, 1, 1, 1, 2, 3, 2,
	3, 0, 1, 3, 1, 4, 3, 3, 4, 3,
	2, 3, 4, 3, 4, 2, 7, 1, 3, 3,
	3, 3, 3, 1, 2, 1, 1, 3, 2, 3,
	3, 2, 5, 7, 10, 9, 7, 8, 1, 1,
	10, 11, 9, 8, 8, 1, 1, 1, 3, 1,
	3, 1, 3, 0, 4, 3, 1, 3, 3, 3,
	3, 3, 1, 1, 2, 5, 4, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 6, 12, 2, 0, 2, 0, 2, 1, 0,
	2, 1, 3, 3, 0, 1, 1, 3, 3, 6,
	4, 7, 8, 8, 8, 6, 3, 1, 1, 5,
	0, 1, 1, 1, 1, 2, 2, 2, 0, 1,
	4, 4, 4, 4, 4, 4, 2, 4, 1, 3,
	1, 1, 3, 4, 3, 3, 3, 5, 10, 0,
	2, 0, 2, 3, 5, 3, 4, 2, 3, 2,
	3, 3, 3, 3, 2, 2, 4, 4, 1, 1,
	1, 1, 1, 0, 2, 2, 3, 3, 2, 2,
	2, 1, 1, 2, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 3, 3, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 5,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 1, 3, 0, 3, 5,
	0, 1, 1, 0, 1, 0, 3, 3, 2, 2,
	2, 1, 2, 2, 0, 1, 0, 2, 2, 5,
	0, 1, 1, 2, 1, 3, 2, 1, 1, 3,
	3, 3, 0, 1, 4, 3, 3, 4, 2, 0,
	2, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 4, 3, 1, 3, 1,
	7, 6, 7, 7, 8, 8, 0, 1, 5, 2,
	1, 1, 1, 0, 1, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 1, 2, 0, 1, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 0, 1, 0, 1, 0, 2, 0,
	2, 0, 2, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 5, 5, 4, 4, 4, 6, 5, 5,
	5, 2, 2, 2, 2, 3, 3, 3, 4, 3,
	3, 1, 3, 5, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 4, 4, 2,
	11, 3, 6, 8, 6, 6, 6, 13, 8, 6,
	10, 5, 5, 5, 7, 5, 5, 5, 5, 5,
	7, 7, 5, 5, 0, 6, 5, 6, 4, 5,
	0, 8, 9, 0, 3, 0, 1, 0, 3, 8,
	4, 1, 3, 3, 6, 7, 7, 8, 4, 0,
	1, 0, 1, 3, 3, 1, 1, 2, 1, 1,
	0, 2, 0, 2, 5, 3, 7, 4, 4, 4,
	4, 3, 3, 3, 7, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 0, 2, 2, 1,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 3, 3, 0, 2, 2, 2,
	2, 2, 2, 2, 4, 4, 3, 0, 1, 4,
	3, 4, 4, 3, 3, 3, 2, 1, 3, 3,
	3, 5, 7, 7, 6, 5, 3, 2, 3, 5,
	5, 3, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 2, 4,
	4, 4, 4, 4, 2, 3, 3, 3, 3, 5,
	2, 3, 3, 2, 3, 4, 4, 4, 3, 4,
	4, 5, 3, 0, 1, 0, 1, 1, 1, 0,
	2, 2, 0, 2, 2, 0, 2, 0, 1, 1,
	1, 1, 2, 1, 3, 1, 1, 1, 1, 1,
	3, 0, 1, 1, 3, 3, 2, 2, 1, 1,
	5, 0, 1, 0, 1, 2, 3, 0, 3, 3,
	3, 3, 3, 1, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 4, 4,
	4, 2, 2, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 6, 4, 7, 6, 1,
	3, 2, 2, 2, 2, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 1, 0, 1, 1, 0,
	1, 1, 5, 5, 4, 0, 2, 4, 4, 0,
	1, 0, 1, 2, 3, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 3, 1, 1, 2, 3, 7, 0,
	3, 0, 1, 1, 3, 1, 3, 1, 1, 3,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 1, 1, 2, 6,
	5, 6, 6, 0, 2, 3, 3, 0, 2, 3,
	3, 3, 2, 3, 1, 3, 6, 3, 4, 3,
	1, 3, 4, 5, 6, 3, 4, 5, 6, 3,
	4, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	5, 5, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 3, 1, 1, 1, 2, 2, 2,
	2, 1, 1, 2, 7, 7, 6, 6, 2, 2,
	5, 6, 3, 3, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 4, 2, 4, 0, 1, 2, 5, 0,
	3, 0, 1, 4, 4, 2, 0, 1, 1, 2,
	2, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	5, 1, 3, 0, 3, 1, 1, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 6, 4, 4, 8, 6,
	8, 6, 5, 4, 10, 2, 2, 1, 2, 2,
	2, 2, 2, 4, 5, 5, 5, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 8,
	4, 8, 8, 6, 5, 4, 4, 4, 4, 4,
	7, 4, 4, 6, 6, 6, 8, 6, 6, 4,
	4, 3, 4, 6, 6, 4, 4, 6, 4, 6,
	4, 4, 4, 4, 4, 4, 6, 4, 6, 4,
	4, 4, 6, 4, 6, 4, 4, 6, 4, 6,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 4,
	4, 6, 4, 6, 4, 8, 6, 4, 4, 6,
	4, 6, 8, 4, 6, 8, 4, 4, 6, 8,
	6, 4, 6, 6, 8, 10, 7, 8, 8, 9,
	4, 4, 4, 4, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 4, 4, 4, 4, 4, 4,
	6, 4, 6, 5, 9, 6, 9, 8, 6, 8,
	8, 8, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 6, 8, 10, 12, 14, 6, 8,
	8, 10, 12, 14, 6, 8, 10, 12, 6, 8,
	4, 4, 3, 4, 6, 6, 4, 6, 4, 6,
	8, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 2, 3, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 0,
	5, 5, 2, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 2, 1, 1, 0, 1, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 1,
	3, 5, 1, 1, 1, 2, 2, 0, 3, 0,
	2, 2, 1, 3, 0, 1, 0, 1, 3, 1,
	3, 2, 0, 1, 1, 0, 1, 2, 4, 4,
	0, 2, 2, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 0, 3, 3, 3, 0, 3, 1,
	1, 0, 4, 0, 1, 1, 0, 3, 1, 3,
	2, 1, 1, 0, 1, 2, 4, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 2, 1, 2, 3, 3, 0, 2,
	1, 2, 3, 4, 3, 0, 1, 2, 1, 5,
	4, 4, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 4, 1, 1, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 0, 3, 0, 1, 0, 1, 1, 5, 0,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -412, -79, -417, -7, -29, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -25, -26, -64, -67,
	-65, -66, -69, -70, -71, -72, -73, -9, -11, -68,
	-27, -28, -74, -75, -76, -77, -78, -12, -13, -14,
	-8, -32, -31, -30, 11, 12, -108, -35, 34, -40,
	-50, 228, -51, -41, 229, -52, 231, 230, 268, 232,
	380, 261, 76, 316, 317, 319, 320, 321, 322, -109,
	684, 266, 267, 234, 38, 47, 35, 36, 39, 238,
	274, 275, 237, 134, -33, -36, 10, -414, 13, 470,
	263, 262, 30, -34, 579, 88, -80, -413, 732, -251,
	-235, 24, 35, 31, -234, -230, -127, -235, 22, 20,
	8, -79, -79, -79, 14, 15, -79, -351, -353, 88,
	161, 88, -79, -57, -56, -54, -53, -55, -58, 33,
	-47, -48, -375, -46, -43, 233, 230, 278, 124, 125,
	268, 269, 270, 232, 252, 267, 271, 266, 287, -42,
	83, 35, 579, 582, -358, 229, 235, 236, 231, 471,
	127, 126, 77, -355, 375, 611, 702, -58, 704, 102,
	105, 703, 46, 242, 705, 706, 707, 618, 708, 251,
	709, 710, 711, 712, 718, 659, 719, 720, 721, 128,
	8, -79, -302, -298, 92, -291, 576, 254, 609, 424,
	610, 303, 83, 43, 515, 585, 372, 375, 611, 500,
	702, 381, 316, 332, 326, 505, 506, 507, 355, 347,
	577, 612, 586, 306, 255, 291, 696, 345, 137, 704,
	310, 613, 269, 382, 383, 614, 384, 102, 319, 421,
	717, 309, 615, 715, 105, 703, 324, 81, 499, 53,
	699, 46, 264, 429, 430, 343, 237, 339, 705, 292,
	616, 588, 285, 127, 124, 724, 38, 335, 52, 32,
	714, 126, 51, 706, 152, 617, 707, 618, 386, 362,
	690, 50, 387, 270, 619, 86, 275, 581, 313, 698,
	388, 520, 336, 389, 302, 713, 234, 620, 679, 671,
	672, 390, 391, 691, 367, 363, 368, 522, 621, 413,
	504, 392, 675, 676, 731, 54, 622, 623, 692, 125,
	624, 80, 708, 82, 330, 331, 625, 300, 253, 525,
	526, 415, 359, 482, 489, 490, 112, 113, 485, 114,
	491, 115, 492, 493, 494, 483, 116, 109, 484, 495,
	496, 360, 361, 117, 497, 111, 110, 486, 488, 118,
	498, 251, 37, 393, 578, 304, 60, 308, 279, 416,
	48, 365, 728, 47, 686, 527, 626, 689, 358, 354,
	479, 55, 627, 628, 629, 630, 501, 709, 357, 329,
	353, 723, 4, 297, 502, 710, 64, 236, 370, 369,
	371, 286, 412, 350, 631, 632, 633, 258, 84, 634,
	340, 23, 635, 636, 394, 293, 637, 58, 638, 639,
	419, 267, 640, 56, 711, 41, 641, 272, 725, 712,
	642, 643, 644, 685, 645, 274, 646, 396, 647, 673,
	674, 395, 364, 366, 528, 281, 397, 380, 239, 580,
	648, 314, 334, 271, 716, 649, 259, 516, 517, 518,
	519, 697, 524, 523, 273, 278, 266, 420, 260, 650,
	651, 652, 653, 654, 307, 670, 655, 656, 320, 718,
	480, 45, 657, 658, 659, 660, 661, 301, 296, 414,
	423, 63, 85, 377, 662, 663, 695, 328, 325, 294,
	461, 463, 464, 465, 466, 467, 462, 469, 664, 317,
	57, 719, 720, 721, 288, 722, 508, 509, 510, 511,
	11, 562, 545, 573, 546, 563, 547, 556, 548, 564,
	572, 574, 529, 537, 530, 538, 568, 551, 565, 557,
	550, 549, 571, 554, 558, 531, 539, 569, 555, 532,
	540, 533, 541, 534, 542, 567, 566, 559, 570, 535,
	543, 561, 536, 544, 560, 552, 553, 432, 729, 730,
	503, 399, 128, 298, 299, 49, 351, 280, 665, 311,
	666, 341, 342, 476, 477, 356, 327, 352, 682, 318,
	680, 282, 400, 481, 268, 667, 422, 295, 373, 378,
	312, 584, 521, 287, 401, 694, 583, 512, 513, 349,
	346, 289, 514, 668, 684, 402, 243, 283, 284, 669,
	681, 403, 404, 305, 405, 406, 407, 408, 409, 411,
	315, 410, 683, 677, 678, 290, 460, 582, 323, 344,
	379, 442, 443, 444, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 478,
	241, -79, 241, -189, -298, 241, 180, -270, 383, -288,
	385, 398, 393, 403, 391, -279, 394, 396, 281, -399,
	413, 241, 400, 228, 386, 395, 404, 405, 305, 411,
	406, 315, 410, 290, 407, 408, 409, -382, 180, 707,
	722, 137, 348, 390, 388, 414, 686, 92, -304, 92,
	93, 94, -291, 318, -306, 323, -292, -382, -291, 321,
	-79, -79, -308, -308, -130, 686, 688, -208, -145, 145,
	-158, -259, -161, 93, -150, -153, -202, -203, -204, -205,
	-159, -218, -257, 169, 170, 177, 146, -214, -162, 28,
	575, 472, 471, 180, 33, 223, 70, 71, 474, 148,
	59, 13, 437, 438, -160, 427, 428, 439, 433, 434,
	499, 501, 502, 503, 500, 505, 506, 507, 508, 509,
	510, 511, 512, 513, 514, 504, 515, 476, 477, 119,
	478, 109, 111, 110, 479, 480, 481, 345, 527, 528,
	522, 525, 526, 524, 523, 360, 361, 482, 545, 546,
	550, 549, 547, 548, 551, 554, 555, 556, 557, 558,
	559, 561, 560, 552, 553, 530, 529, 531, 532, 533,
	534, 535, 536, 538, 537, 539, 540, 541, 542, 543,
	544, 562, 563, 564, 565, 566, 568, 567, 572, 571,
	569, 570, 574, 573, 483, 484, 112, 113, 114, 115,
	116, 117, 118, 485, 488, 486, 487, 489, 490, 491,
	496, 497, 492, 493, 494, 495, 498, 371, 369, 370,
	366, 365, 364, -89, -101, 600, 599, -102, 424, 429,
	430, 432, -151, -152, -164, -165, -292, -298, 246, 426,
	240, 175, 470, -154, -148, -216, 108, 94, -31, -212,
	425, 435, 436, 440, 431, 441, 587, 589, 603, 604,
	606, 591, 596, 595, 598, 516, 517, 518, 519, 520,
	521, 671, 672, 673, 674, 675, 676, 677, 678, -382,
	-291, 92, -156, -155, -198, 95, 100, 103, 104, 106,
	-405, 264, 341, 342, 120, -414, 700, 91, 96, 97,
	98, 99, 121, 122, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 222, 46, 399, 399, -189,
	-79, -79, -79, -79, -411, 703, 580, -228, -127, -128,
	-230, 9, -33, -31, -414, 10, -79, -31, -32, -30,
	-36, -38, 605, -37, -298, 101, -235, -251, 14, 164,
	44, 52, -233, -234, -34, -31, -145, 21, 25, 26,
	-133, 171, -145, -298, -133, -277, 245, -79, -79, -266,
	-311, 318, -268, 414, 686, 413, -258, -271, 92, -257,
	-270, 412, 93, -352, 161, -338, -342, -292, 256, -368,
	252, -189, -361, -360, -292, -414, -129, -287, 242, 250,
	249, 138, -386, 141, 298, 426, 240, -53, -54, -55,
	-270, 179, 706, -110, 273, 277, 89, 89, -342, -341,
	-340, -387, 277, 256, -367, -359, 248, 257, -348, 249,
	250, -343, 242, 139, -387, -343, 247, 257, 252, 256,
	277, 277, 128, 277, 128, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 272, -349, 153, -349, 583, 583,
	-355, -387, 252, 242, -387, -387, 248, -289, -343, 244,
	27, 244, 37, 37, -349, -349, -349, -270, 179, -349,
	-349, -349, -349, 285, 285, -349, -349, -349, -349, -349,
	-349, -349, -349, -349, -349, -349, -349, -349, -349, -349,
	-349, -349, 241, -386, -137, 410, 305, 83, -56, 287,
	-39, -189, -287, 242, 243, -386, 274, -189, 224, -189,
	689, -281, 161, 17, -281, -278, 399, 397, 384, 389,
	-281, -281, -281, -281, 288, 382, -344, 242, 37, 253,
	399, 288, 382, 288, 289, 288, 289, 392, 402, 288,
	-303, 16, 164, 426, 387, 391, 281, 241, 282, 243,
	401, 289, -303, 91, -282, 161, 288, 399, 284, -281,
	-281, -309, -414, -294, -292, -290, 233, 25, 144, 27,
	29, 147, 180, 131, 21, 148, 39, 235, 348, 252,
	179, 248, 471, 228, 74, 587, 427, 434, 425, 433,
	437, 473, 474, 426, 385, 33, 15, 589, 30, 262,
	26, 40, 173, 230, 151, 590, 265, 28, 263, 119,
	122, 591, 24, 77, 257, 16, 250, 42, 18, 592,
	593, 19, 246, 245, 164, 242, 72, 13, 223, 31,
	160, 68, 594, 139, 134, 595, 596, 597, 598, 132,
	70, 161, 22, 726, 435, 436, 35, 687, 575, 276,
	175, 75, 61, 688, 145, 431, 599, 600, 120, 601,
	123, 78, 693, 141, 20, 73, 44, 602, 277, 603,
	247, 727, 604, 417, 605, 162, 231, 470, 71, 163,
	700, 606, 701, 240, 398, 10, 475, 34, 261, 249,
	130, 69, 441, 607, 241, 150, 244, 133, 121, 8,
	9, 138, 36, 14, 76, 79, 438, 439, 440, 59,
	129, 579, 149, 17, 608, 418, 143, -382, 689, -309,
	-309, 34, 93, -408, -409, -410, 579, 417, 244, -292,
	-189, -85, 679, 232, -86, 685, 25, 239, -135, 399,
	-122, 180, 707, 690, 691, 692, 689, 396, 697, 695,
	693, 288, 694, 89, 141, 143, 144, 4, -145, 160,
	-199, 153, 154, 155, 156, 157, 158, 159, 165, 164,
	145, 147, 161, -244, 142, 166, 167, 168, 169, 170,
	171, 172, 174, 173, 175, 176, 162, 163, 179, 226,
	227, -153, -153, -153, -153, -214, -220, -219, -414, -216,
	-382, -291, -298, -414, -414, -153, -276, -414, -150, -414,
	-414, -414, -414, -223, -145, -414, -414, -418, -414, -418,
	-418, -418, -327, -414, -327, -327, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, -414, -414, -414, -414, 224,
	-414, -414, -414, -414, -414, -327, -327, -327, -327, -327,
	-327, -414, -414, -414, -414, -414, -414, -414, -414, -414,
	-414, -414, -414, -414, -414, 104, 100, 103, 95, -218,
	106, 91, 91, 91, 91, -31, -32, -208, -414, -308,
	-396, -397, -192, -189, -414, 305, -292, -292, 274, 97,
	-233, -34, -31, -34, -228, -234, -230, -31, -79, -120,
	-134, 65, 66, -136, 26, 40, 69, 67, 25, -415,
	90, -415, -251, -415, 89, -38, -254, 88, 63, 45,
	91, 91, 89, 23, -229, -231, -145, 16, -296, 4,
	-295, 27, -292, 91, 224, 16, -190, 31, -189, -277,
	-277, 89, 92, 318, -267, -269, 415, 417, 153, -297,
	-292, 91, 33, 90, 89, -189, -316, -319, -321, -320,
	-322, -317, -318, 345, 346, 180, 349, 351, 352, 353,
	354, 355, 356, 357, 358, 359, 362, 34, 264, 341,
	342, 343, 344, 363, 364, 365, 366, 368, 369, 370,
	371, 326, 347, 577, 327, 328, 329, 330, 331, 332,
	334, 335, 338, 336, 337, 339, 340, -383, -382, 88,
	90, 89, -323, 88, -145, -137, 241, -382, 242, 242,
	242, -79, 470, -349, -349, -349, 272, 21, -46, -43,
	-375, 20, -42, -43, 233, 124, 125, 230, 88, -338,
	88, -347, -383, -382, 88, 139, 247, 138, -346, -343,
	-346, -347, -382, -216, -382, 139, 139, -382, -382, -263,
	-292, -263, -263, 25, -263, 25, -263, 25, 97, -292,
	-263, 25, -263, 25, -263, 25, -263, 25, -263, 25,
	33, 80, 81, 82, 33, 84, 85, 86, -216, -382,
	-382, -216, -338, -216, -189, -382, -270, 97, 97, 97,
	-349, -349, 97, 91, 91, 91, -349, -349, 97, 91,
	-300, -298, 91, 91, -388, 258, 302, 304, 97, 97,
	97, 97, 33, 91, -389, 33, 714, 713, 715, 716,
	717, 91, 97, 33, 97, 33, 97, -292, 88, -189,
	-143, 292, 228, 230, 233, 78, 91, 308, 309, 306,
	311, 312, 153, 46, 89, 244, 241, -382, -283, 246,
	-283, -292, -299, -298, -290, 244, 381, 91, -145, -345,
	16, 164, -303, -303, -281, -189, -345, -303, -281, -189,
	-281, -281, -281, -281, -303, -303, -303, -281, -298, -298,
	-189, -189, -189, -189, -189, -189, -189, -309, -282, -281,
	689, 91, -275, 16, 78, -309, -309, 89, 324, 418,
	419, -307, 321, -81, -292, 91, -10, -29, -18, -17,
	-19, 153, -10, 89, 579, -182, -189, 689, 689, 689,
	689, 689, 689, -145, -145, -145, -145, 601, -206, 120,
	145, 121, 122, -161, -145, -207, -212, -214, 107, 164,
	147, 161, -244, -150, -153, -150, -150, -150, -150, -150,
	-150, 223, -150, 223, -150, -150, -150, -150, -150, -150,
	-310, -292, 91, 180, -157, -156, 106, -405, -157, 576,
	89, -219, 224, -145, -145, -382, -118, 443, 444, 445,
	446, 448, 449, 450, 453, 454, 458, 459, 442, 460,
	447, 452, 455, 456, 457, 451, 344, -145, -131, -133,
	-131, -145, -221, -222, 149, -216, -145, -415, -415, 97,
	171, -126, 26, 40, -126, -126, -126, -126, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -126, -145,
	-119, 442, 460, 447, 452, 455, 456, 457, 451, 344,
	461, 462, 463, 464, 465, 466, 467, 468, 469, -119,
	-118, -145, -145, -145, -145, -145, -145, -87, -145, 131,
	132, 133, -208, -145, -150, -145, -145, -145, -415, -145,
	-145, -145, -209, -208, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-381, -380, -379, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -208, -208, -208, -208,
	-208, -145, -415, -145, -163, -148, 97, -259, 106, 93,
	-145, -145, -145, -145, -145, -145, -132, -131, -294, -299,
	-290, -291, -131, -132, -132, -131, -131, -145, -145, -145,
	-145, -145, -145, -145, -145, -415, -145, -145, -145, -145,
	-145, -251, -415, -208, 89, -398, 417, 418, 687, -301,
	277, -300, 27, -209, 91, 16, -261, 79, -292, -233,
	-233, 65, 66, 61, -131, -136, -415, -37, 27, -253,
	-292, 64, 91, -328, -270, 372, 373, 180, -145, -145,
	89, -232, 29, 30, -189, -295, 171, -299, -189, -262,
	277, -189, -167, -169, -170, -171, -192, -215, -414, -172,
	-31, 597, 594, 16, -182, -183, -191, -298, -268, -311,
	-267, 89, 416, 418, 419, 78, 123, -145, -329, 179,
	-357, -356, -355, -338, -340, -341, -342, 90, -329, -334,
	378, 377, -323, -323, -323, -323, -323, -328, -328, -328,
	-328, 88, 88, -323, -323, -323, -323, -331, 88, -331,
	-331, -332, -331, 88, -332, -333, 88, -333, -368, -145,
	-365, -364, -362, -363, 251, 102, 669, 625, 579, 618,
	659, 79, -360, -232, 97, -415, -143, -284, 246, -366,
	-363, -382, -382, -382, -284, 92, 91, 92, 91, 92,
	91, -111, -60, -1, 726, 727, 728, 89, 21, -339,
	-338, -59, 302, -371, -372, 277, -367, -361, -347, 139,
	-346, -347, -347, -382, 89, 31, 128, 128, 128, 128,
	579, 230, 34, -285, 617, 145, 669, 625, -338, -59,
	244, 244, -310, -310, -310, 91, 91, -280, 722, -182,
	-139, 294, 153, 283, 283, 241, 241, 296, -189, 307,
	310, 308, 309, 306, 311, 312, 25, 25, 25, 25,
	25, 295, 297, 299, 285, -189, -189, -283, 78, -184,
	-189, 28, -298, 91, 91, -189, -281, -281, -189, -281,
	-281, -189, -410, 325, -292, 359, 680, 681, 683, 682,
	-122, 417, 89, 579, 24, -123, 24, -414, 120, 121,
	122, -207, -150, -153, -150, 144, 265, -150, -150, -414,
	-216, -415, -294, 27, 89, 79, -415, 169, 89, 89,
	-415, -415, 89, 16, -224, -222, 151, -145, -415, 89,
	-415, -415, -208, -145, -145, -145, -145, -415, -415, -415,
	-415, -415, -415, -415, -415, -415, -415, -208, -415, 89,
	89, 16, -314, 27, -415, -415, -415, -415, -415, -223,
	-415, 16, -415, 79, 89, 164, 89, -415, -415, -415,
	89, 89, -415, -415, 89, -415, 89, -415, -415, -415,
	-415, -415, -415, 89, -415, 89, -415, -415, -415, 89,
	-415, 89, -415, -415, 89, -415, 89, -415, 89, -415,
	89, -415, 89, -415, 89, -415, 89, -415, 89, -415,
	89, -415, 89, -415, 89, -415, 89, -415, 89, -415,
	89, -415, 89, -415, 89, -415, 89, -415, 89, -415,
	-415, -415, 89, -415, 89, -415, 89, -415, -415, 89,
	-415, 89, -415, 89, -415, 89, 89, -415, 89, 89,
	89, -415, 89, 89, 89, 89, -415, -415, -415, -415,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	-415, -415, -415, -415, -415, -415, 89, -94, 602, -415,
	-415, 89, -415, 89, 89, 89, 89, 89, -415, -414,
	224, -415, -415, -415, -415, -415, 89, 89, 89, 89,
	89, 89, -415, -415, -415, 89, 89, -415, 89, -415,
	89, -415, -397, 686, 418, -196, -195, -193, 76, 245,
	77, -414, -300, -415, -157, -259, -260, -259, -201, -292,
	97, 106, -235, -166, -168, 16, -136, -214, 90, 89,
	-328, -239, -245, -278, -292, 91, 180, -330, 180, -330,
	372, 373, -231, 224, -197, 17, -200, 34, 59, -29,
	-414, -414, 34, 89, -185, -187, -186, -188, 68, 72,
	74, 69, 70, 71, 75, -305, 27, -31, -167, -31,
	-414, -189, -182, -416, 16, 79, -416, 89, 224, -269,
	-272, 420, 417, 423, -382, 91, -110, 89, -355, -342,
	-236, -140, 42, -335, 379, -328, 586, -328, -337, 91,
	-337, 97, 97, 97, 90, -49, -44, -45, 35, 83,
	-362, -349, 91, 41, -349, -349, -292, 90, -232, -139,
	-189, 145, 78, -366, -366, -366, -298, -2, 725, 731,
	139, 88, 384, 20, -253, 89, 90, -217, 303, 90,
	-112, -292, 90, 88, -347, -347, -292, -414, 241, 33,
	33, 669, 625, 617, -59, -217, -216, -382, -329, 724,
	723, 90, 243, 301, -144, 437, -141, 91, 92, -189,
	-189, -189, -189, -189, 233, 230, 407, -406, 313, -406,
	286, 244, -182, -189, 89, -84, 260, 255, -303, -303,
	35, -189, 417, 698, 696, -145, 144, 265, -161, -153,
	-118, -118, -150, -312, 180, 345, 264, 343, 339, 359,
	350, 377, 341, 378, 336, 335, 334, -312, -310, -150,
	-208, -133, -145, -145, 152, -145, 150, -145, -415, -415,
	-415, -415, -415, -228, -145, -145, -145, -415, 180, 345,
	16, -145, -310, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -379, -145,
	-208, -145, -208, -145, -145, -145, -145, -145, -380, -380,
	-380, -380, -380, -208, -208, -208, -208, -145, -414, -292,
	-97, -96, -95, 652, 245, -94, -163, -97, -163, 223,
	-145, 223, 223, 223, -145, -132, -294, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -193, -343, -343,
	-343, -263, 89, -274, 24, 16, 59, 59, -166, -197,
	-167, -136, -292, -242, 679, -248, 48, -246, -247, 49,
	-243, 50, 58, -330, -330, 171, -233, -145, -264, 78,
	-265, -273, -216, -211, -213, -212, -414, -252, -415, -292,
	-263, -265, -169, -170, -170, -169, -170, 68, 68, 68,
	73, 68, 73, 68, -186, -298, -415, -145, -301, 79,
	-167, -167, -191, -298, 171, 417, 421, 422, -355, -404,
	120, 145, 33, 78, 375, 102, -402, 179, 614, 664,
	669, 625, 618, 659, -403, 247, 138, 139, 259, 27,
	43, 90, 89, 90, 89, 90, 90, 89, -286, -285,
	-45, -44, -349, -349, 97, -382, 91, 91, 243, 28,
	-189, 78, 78, 78, -113, 729, 97, 88, -3, 83,
	-145, 88, 21, -338, -216, -373, -324, -374, -325, -326,
	-5, -6, -350, -116, 59, 102, -63, 46, 242, 709,
	710, 128, -414, 722, -365, -253, -369, -371, -189, -149,
	-414, -160, -147, -146, -148, -154, 169, 170, 264, 341,
	342, -217, -189, -138, 292, 300, 88, -142, 93, -385,
	79, 283, 375, 283, 91, -407, 314, 91, -407, -189,
	-84, -49, -189, -281, -281, 35, -382, -415, -161, -153,
	-125, 164, 579, -315, 585, -323, -323, -323, -333, -323,
	331, -323, 331, -323, -415, -415, -415, 89, -415, 24,
	-415, -145, 89, -121, 475, 89, 89, -415, 88, 88,
	-145, -415, -415, -415, 89, -415, -415, -415, -415, -415,
	-415, -415, -415, -415, -415, -415, -415, -415, 89, -415,
	89, -415, 89, -415, 89, -415, 89, -415, 89, -415,
	89, -415, 89, -415, 89, -415, 89, -415, 89, -415,
	89, -415, 89, -415, 89, -415, 89, -415, 89, -415,
	-415, 89, -415, -415, -415, 89, -415, 89, -415, 89,
	-415, -415, -415, 89, -313, 670, -415, -415, -415, -415,
	-415, -415, -415, -415, -415, -415, -415, -93, -293, -292,
	-94, 634, 634, -415, -94, -225, 89, -150, -415, -150,
	-150, -150, -415, -415, -415, 89, -415, 89, 89, -415,
	89, -415, 89, -415, -415, -415, -415, 89, -194, 24,
	-194, -194, -415, -259, -189, -197, -226, 18, -239, 53,
	351, -250, -249, 57, 49, -247, 21, 51, 21, 32,
	-264, 89, 153, 89, -415, -415, 89, 59, 224, -415,
	-197, -180, -179, 78, 79, -181, 78, -179, 68, 68,
	-254, 89, -262, -167, -197, -197, 224, 120, -414, -149,
	14, 91, 91, -382, -401, 713, 714, 33, 97, -349,
	-349, 139, 139, -189, 88, -328, 91, -328, 97, 97,
	33, 84, 85, 86, 33, 80, 81, 82, -189, -189,
	-189, -189, -370, 88, 21, -145, 88, 153, 90, -253,
	-253, 279, 164, -349, 707, 285, 285, -349, -349, -349,
	-115, -114, 729, 90, -415, 89, -336, 579, 582, -145,
	-155, -155, -254, 90, -378, 579, -384, -292, -292, -292,
	-292, 97, 99, -415, 577, 75, 580, -415, -328, -145,
	-145, -145, -233, 91, -145, -145, 97, 97, -415, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -145,
	-145, -145, -145, -145, -145, -145, -145, -145, -145, -208,
	-145, -415, -177, -176, -178, 690, 120, 33, -312, -415,
	-210, 277, -100, -99, -98, 16, -415, -145, -118, -118,
	-118, -118, -145, -145, -145, -145, -145, -145, -414, 68,
	20, 18, -414, -414, -301, -226, -227, 19, 21, -240,
	55, -238, 54, -238, -249, 21, 21, 91, 21, 91,
	139, -273, -145, -213, 59, -29, -292, -211, -292, -228,
	-145, 88, -145, -157, -197, -197, -145, -203, 499, 501,
	502, 503, 500, 505, 506, 507, 508, 509, 510, 511,
	512, 513, 514, 504, 515, 476, 477, 478, 109, 111,
	110, 479, 480, 481, 345, 527, 528, 522, 525, 526,
	524, 523, 360, 361, 482, 545, 546, 550, 549, 547,
	548, 551, 554, 555, 556, 557, 558, 559, 561, 560,
	552, 553, 530, 529, 531, 532, 533, 534, 535, 536,
	538, 537, 539, 540, 541, 542, 543, 544, 562, 563,
	564, 565, 566, 568, 567, 572, 571, 569, 570, 574,
	573, 483, 484, 112, 113, 114, 115, 116, 117, 118,
	485, 488, 486, 489, 490, 491, 496, 497, 492, 493,
	494, 495, 498, 371, 369, 370, 366, 365, 364, 424,
	429, 430, 432, 516, 517, 518, 519, 520, 521, 671,
	672, 673, 674, 675, 676, 677, 678, 91, 91, 88,
	-145, 90, 90, -254, -369, -60, 90, -255, -253, 97,
	90, 280, -212, -414, 91, -349, -349, -349, 97, 97,
	-300, -415, 89, -292, -403, -371, 583, 583, -415, 27,
	-377, -376, -294, 88, 79, 64, 578, 581, -415, -415,
	89, -415, -415, -415, 90, 90, -415, -415, -415, -415,
	-415, -415, -415, -415, -415, -415, -415, -415, -415, -415,
	-415, -415, -415, -415, -415, -415, -415, -415, 89, -415,
	-176, -178, -415, 78, -157, -228, 21, -97, 302, 304,
	-97, -415, -415, -415, -415, -415, 89, -415, -415, 89,
	-415, 89, -415, -415, -256, -415, -292, 247, 21, 21,
	-256, -256, -196, -227, -107, -106, -105, 608, -145, -208,
	-241, 56, 78, 123, 91, 91, 91, 14, -211, 224,
	-233, -253, -174, 384, -228, -415, -253, 90, 27, 90,
	731, 139, 90, -212, -124, -414, 276, -300, 91, 91,
	-114, -117, -29, 89, 153, -253, -189, 64, -145, -208,
	-415, 78, 590, 690, -92, -91, -88, 701, 727, -208,
	-94, -94, -145, -145, -145, 89, -415, -415, -415, -107,
	89, -104, -103, -292, 78, 123, -265, -292, 90, -415,
	-414, -233, 90, -237, -29, 88, -3, 276, -324, -374,
	-325, -326, -5, -6, -350, -82, 579, -376, -354, -298,
	-294, 91, 97, 90, 579, -415, -415, -90, 147, 699,
	667, -155, 223, -415, 89, -415, 89, -415, 89, -292,
	247, -105, 89, 27, -301, -175, -173, -292, 631, -394,
	-393, 575, -404, -400, 120, 145, 102, -402, 669, 625,
	129, 130, -82, -145, 88, -415, -83, 291, 686, 224,
	-385, 580, -90, 700, 645, 620, 645, 620, -150, -145,
	-145, -145, -103, -414, -415, 89, 24, -316, -62, 642,
	-391, -392, 78, -395, 390, 641, 662, 120, 91, 90,
	-253, 252, -299, -378, 581, 144, -118, -415, 89, -415,
	89, -415, -93, -173, 638, -329, -157, -392, 78, -391,
	78, 15, 14, -4, 730, 90, 293, -90, 645, 620,
	-145, -145, -415, -61, 28, -174, -390, 260, 255, 258,
	34, -390, 97, -4, -415, -415, 642, 254, 33, 120,
	-157, -177, -176, -176,
}

var yyDef = [...]int{
	878, -2, -2, 880, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	39, 73, 75, 76, 878, 878, 878, 0, 878, 0,
	0, 878, -2, -2, 878, 1610, 0, 878, 0, 0,
	0, -2, 793, 799, 0, 808, -2, 0, 0, 878,
	878, 2235, 2235, 873, 0, 0, 0, 0, 0, 878,
	878, 878, 878, 1615, 1476, 52, 878, 0, 88, 89,
	828, 829, 830, 67, 0, 2233, 879, 1, 3, 74,
	78, 0, 0, 0, 60, 1485, 0, 81, 0, 0,
	882, 0, 0, 1593, 878, 878, 0, 129, 130, 0,
	0, 0, -2, 133, -2, 162, 163, 164, 0, 169,
	604, 527, 579, 525, 564, -2, 513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 530,
	402, 402, 0, 0, -2, 513, 513, 513, 1595, 0,
	0, 0, 561, 464, 402, 402, 402, 0, 402, 402,
	402, 402, 0, 0, 402, 402, 402, 402, 402, 402,
	402, 402, 402, 402, 402, 402, 402, 402, 402, 402,
	402, 1503, 168, 1611, 1608, 1609, 1769, 1770, 1771, 1772,
	1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782,
	1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792,
	1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802,
	1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812,
	1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822,
	1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832,
	1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842,
	1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852,
	1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862,
	1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872,
	1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882,
	1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892,
	1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902,
	1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912,
	1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922,
	1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932,
	1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942,
	1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952,
	1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962,
	1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972,
	1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982,
	1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992,
	1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
	2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,
	2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022,
	2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032,
	2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042,
	2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052,
	2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062,
	2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072,
	2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082,
	2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092,
	2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102,
	2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112,
	2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122,
	2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132,
	2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142,
	2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152,
	2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162,
	2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172,
	2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182,
	2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192,
	2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202,
	2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212,
	2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222,
	2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232,
	0, 1587, 0, 717, 982, 0, 0, 782, 782, 0,
	782, 782, 782, 782, 0, 0, 0, 731, 0, 0,
	0, 0, 779, 0, 747, 748, 0, 779, 0, 754,
	785, 0, 0, 760, 782, 782, 763, 2236, 0, 2236,
	2236, 1578, 0, 776, 774, 788, 789, 42, 792, 795,
	796, 797, 798, 801, 0, 812, 815, 1604, 1605, 0,
	817, 824, 841, 842, 0, 874, 875, 47, 1132, 0,
	1004, 0, 1010, -2, 1021, 1038, 1039, 1040, 1041, 1042,
	1044, 1045, 1046, 0, 0, 0, 0, 1051, 1052, 0,
	0, 0, 0, 0, 1113, 0, 0, 0, 0, 1449,
	0, 0, 1411, 1411, 1147, 1411, 1411, 1413, 1413, 1413,
	1821, 1959, 1967, 2143, 1782, 1788, 1789, 1790, 2089, 2090,
	2091, 2092, 2180, 2181, 2185, 1883, 1777, 2156, 2157, 0,
	2232, 1920, 1928, 1929, 1953, 2053, 2166, 1800, 1948, 2017,
	1880, 1902, 1903, 2035, 2036, 1924, 1925, 1906, 2095, 2097,
	2113, 2114, 2099, 2101, 2110, 2116, 2121, 2100, 2112, 2117,
	2130, 2134, 2137, 2138, 2139, 2107, 2105, 2118, 2122, 2124,
	2126, 2132, 2135, 2108, 2106, 2119, 2123, 2125, 2127, 2133,
	2136, 2094, 2098, 2102, 2111, 2129, 2109, 2128, 2103, 2115,
	2120, 2131, 2104, 2096, 1918, 1921, 1909, 1910, 1912, 1914,
	1919, 1926, 1932, 1911, 1931, 1930, 0, 1907, 1908, 1913,
	1923, 1927, 1915, 1916, 1917, 1922, 1933, 1973, 1972, 1971,
	2016, 1944, 2015, 0, 0, 0, 0, 0, 1772, 1826,
	1827, 2140, 1333, 1334, 1335, 1336, 0, 0, 0, 0,
	0, 0, 0, 294, 295, 1462, 1463, 46, 1131, 1574,
	1413, 1413, 1413, 1413, 1413, 1413, 1073, 1074, 1075, 1076,
	1077, 1101, 1102, 1108, 1109, 2030, 2031, 2032, 2033, 1864,
	2175, 1872, 1873, 2012, 2013, 1885, 1886, 2206, 2207, -2,
	-2, -2, 235, 236, 237, 238, 239, 240, 241, 242,
	0, 1825, 2154, 2155, 231, 0, 0, 299, 300, 296,
	297, 298, 1115, 1116, 252, 253, 254, 255, 256, 257,
	258, 259, 260, 261, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 272, 273, 274, 275, 276, 277,
	278, 279, 280, 281, 282, 283, 284, 285, 286, 287,
	288, 289, 290, 291, 292, 293, 2235, 0, 851, 0,
	0, 0, 0, 0, 0, 1616, 1617, 1485, 0, 0,
	1477, 885, 1476, 65, 0, 878, -2, 0, 0, 0,
	0, 49, 0, 54, 939, 881, 80, 79, 1525, 0,
	0, 0, 61, 1486, 69, 71, 1487, 0, 883, 884,
	0, 915, 919, 0, 0, 0, 1594, 1593, 1593, 105,
	0, 0, 106, 126, 127, 128, 0, 0, 112, 113,
	1580, 1581, 45, 0, 0, 180, 181, 0, 43, 429,
	0, 176, 0, 422, 361, 0, 1503, 0, 0, 0,
	0, 0, 878, 0, 1588, 157, 158, 165, 166, 167,
	402, 402, 402, 576, 0, 0, 168, 168, 534, 535,
	536, 0, 0, -2, 427, 0, 514, 0, 0, 416,
	416, 420, 418, 419, 0, 0, 0, 0, 0, 0,
	0, 0, 553, 0, 554, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 665, 0, 403, 0, 574, 575,
	465, 0, 0, 0, 0, 0, 0, 0, 0, 1596,
	1597, 0, 551, 552, 0, 0, 0, 402, 402, 0,
	0, 0, 0, 402, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 1516, 0, 0, 0, -2, 0,
	709, 0, 0, 0, 1589, 1589, 0, 716, 0, 718,
	0, 721, 0, 0, 722, 0, 779, 779, 777, 778,
	724, 725, 726, 727, 782, 0, 0, 411, 412, 413,
	779, 782, 0, 782, 782, 782, 782, 779, 779, 779,
	782, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2236, 785, 782, 0, 755, 0, 756, 757, 758, 761,
	762, 764, 2237, 2238, 1606, 1607, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701,
	1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711,
	1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
	1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731,
	1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741,
	1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751,
	1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761,
	1762, 1763, 1764, 1765, 1766, 1767, 1768, 2236, 2236, 768,
	772, 1579, 794, 800, 802, 803, 0, 0, 813, 816,
	835, 51, 1871, 823, 51, 825, 826, 827, 853, 854,
	859, 0, 0, 0, 0, 865, 866, 867, 0, 0,
	870, 871, 872, 0, 0, 0, 0, 0, 1002, 0,
	0, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1022, 1023, 0, 0,
	0, 1047, 1048, 1049, 1050, 1053, 0, 1064, 0, 1066,
	1458, -2, 0, 0, 0, 1058, 1059, 0, 0, 0,
	0, 0, 0, 0, 1450, 0, 0, 1145, 0, 1146,
	1148, 1149, 1150, 0, 1151, 1152, 889, 889, 889, 889,
	889, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 889, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1599, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 899, 0,
	0, 899, 899, 0, 0, 223, 224, 225, 226, 227,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 244, 245, 246, 247,
	248, 301, 249, 250, 251, 1131, 0, 0, 0, 48,
	843, 844, 0, 965, 1599, 0, 0, 895, 0, 1614,
	59, 68, 70, 72, 1485, 63, 1485, 0, 901, 0,
	0, -2, -2, 902, 908, 909, 910, 911, 912, 56,
	2234, 57, 0, 77, 0, 50, 0, 0, 0, 0,
	375, 1528, 0, 0, 1478, 1479, 1482, 0, 916, 1965,
	920, 0, 922, 923, 0, 0, 103, 0, 981, 0,
	0, 0, 114, 0, 116, 117, 0, 0, 0, 386,
	1582, 1583, 1584, -2, 409, 0, 386, 370, 309, 310,
	311, 361, 313, 361, 361, 361, 361, 375, 375, 375,
	375, 344, 345, 346, 347, 348, 0, 0, 330, 361,
	361, 361, 361, 351, 352, 353, 354, 355, 356, 357,
	358, 314, 315, 316, 317, 318, 319, 320, 321, 322,
	363, 363, 363, 363, 363, 367, 367, 0, 44, 0,
	390, 0, 1482, 0, 0, 1516, 1591, 1601, 0, 0,
	0, 1591, 135, 0, 0, 0, 577, 615, 528, 565,
	578, 0, 531, 532, -2, 0, 0, 513, 0, 515,
	0, 410, 0, -2, 0, 420, 0, 416, 420, 417,
	420, 408, 421, 555, 556, 557, 0, 559, 560, 645,
	951, 0, 0, 0, 0, 0, 651, 652, 653, 0,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	566, 567, 568, 569, 570, 571, 572, 573, 0, 0,
	0, 0, 515, 0, 562, 0, 0, 466, 467, 468,
	0, 0, 471, 472, 473, 474, 0, 0, 477, 478,
	479, 968, 969, 480, 481, 506, 507, 508, 482, 483,
	484, 485, 486, 487, 488, 500, 501, 502, 503, 504,
	505, 489, 490, 491, 492, 493, 494, 497, 0, 150,
	1507, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1589, 0, 0, 0,
	0, 898, 983, 1612, 1613, 0, 0, 783, 784, 0,
	414, 415, 782, 782, 728, 769, 0, 782, 732, 770,
	733, 735, 734, 736, 749, 750, 782, 739, 780, 781,
	740, 741, 742, 743, 744, 745, 746, 765, 751, 752,
	753, 786, 0, 790, 791, 766, 767, 0, 0, 806,
	807, 0, 814, 838, 836, 837, 839, 831, 832, 833,
	834, 0, 840, 0, 0, 856, 99, 861, 862, 863,
	864, 876, 869, 1133, 999, 1000, 1001, 0, 1003, 1007,
	0, 1117, 1119, 1009, 1005, 1011, 1128, 1129, 1130, 0,
	0, 0, 0, 0, 1015, 1019, 1024, 1025, 1026, 1027,
	1028, 0, 1029, 0, 1032, 1033, 1034, 1035, 1036, 1037,
	1043, 1426, 1427, 1428, 1062, 302, 303, 0, 1063, 0,
	0, 0, 0, 0, 0, 0, 0, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1132, 0, 913,
	0, 0, 1456, 1453, 0, 0, 0, 1412, 1414, 0,
	0, 0, 890, 891, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 0,
	0, 1429, 0, 0, 0, 0, 0, 1449, 0, 1068,
	1069, 1070, 0, 0, 0, 0, 0, 0, 1191, 0,
	0, 0, 0, 1600, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1337, 1338, 1339, 1340, 41,
	0, 0, 0, 0, 0, 0, 0, 900, 1460, 0,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1362, 0, 0, 0, 0,
	0, 0, 1572, 0, 0, 846, 847, 849, 0, 985,
	0, 966, 0, 0, 852, 0, 894, 0, 897, 62,
	64, 906, 907, 0, 924, 903, 58, 53, 0, 0,
	943, 1526, 375, 1548, 0, 384, 384, 381, 1488, 1489,
	0, 1481, 1483, 1484, 82, 921, 917, 0, 997, 0,
	0, 980, 0, 927, 929, 930, 931, 963, 0, 934,
	935, 0, 0, 0, 0, 0, 101, 982, 107, 0,
	115, 0, 0, 120, 121, 108, 109, 110, 111, 0,
	604, -2, 461, 182, 184, 185, 186, 177, -2, 373,
	371, 372, 312, 375, 375, 338, 339, 340, 341, 342,
	343, 0, 0, 331, 332, 333, 334, 323, 0, 324,
	325, 326, 365, 0, 327, 328, 0, 329, 428, 0,
	1490, 391, 392, 394, 402, 0, 397, 398, 0, 402,
	402, 0, 423, 424, 0, 1482, 1507, 0, 0, 0,
	1602, 1601, 1601, 1601, 0, 170, 171, 172, 173, 174,
	175, 640, 0, 0, 616, 638, 639, 168, 0, 0,
	178, 517, 516, 0, 672, 0, 426, 0, 0, 420,
	420, 405, 406, 558, 0, 0, 647, 648, 649, 650,
	0, 0, 0, 544, 455, 0, 545, 546, 515, 517,
	0, 0, 386, 469, 470, 475, 476, 495, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 591,
	592, 593, 596, 598, 519, 602, 595, 597, 599, 519,
	603, 1504, 1505, 1506, 0, 0, 710, 0, 0, 452,
	97, 1590, 715, 719, 720, 779, 738, 771, 779, 730,
	737, 759, 804, 805, 810, 818, 819, 820, 821, 822,
	860, 0, 0, 0, 0, 868, 0, 0, 1008, 1118,
	1120, 1012, 0, 1016, 1020, 0, 0, 0, 0, 0,
	1067, 1065, 1460, 0, 0, 0, 1114, 0, 0, 0,
	1136, 1137, 0, 0, 0, 1454, 0, 0, 1143, 0,
	1415, 1153, 0, 0, 0, 0, 0, 1159, 1160, 1161,
	1162, 1163, 1164, 1165, 1166, 1167, 1168, 1476, 1170, 0,
	0, 0, 0, 0, 1175, 1176, 1177, 1178, 1179, 0,
	1181, 0, 1182, 0, 0, 0, 0, 1189, 1190, 1192,
	0, 0, 1195, 1196, 0, 1198, 0, 1200, 1201, 1202,
	1203, 1204, 1205, 0, 1207, 0, 1209, 1210, 1211, 0,
	1213, 0, 1215, 1216, 0, 1218, 0, 1220, 0, 1223,
	0, 1226, 0, 1229, 0, 1232, 0, 1235, 0, 1238,
	0, 1241, 0, 1244, 0, 1247, 0, 1250, 0, 1253,
	0, 1256, 0, 1259, 0, 1262, 0, 1265, 0, 1268,
	1269, 1270, 0, 1272, 0, 1274, 0, 1277, 1278, 0,
	1280, 0, 1283, 0, 1286, 0, 0, 1287, 0, 0,
	0, 1291, 0, 0, 0, 0, 1300, 1301, 1302, 1303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1314, 1315, 1316, 1317, 1318, 1319, 0, 1321, 0, 1096,
	0, 0, 1096, 0, 0, 0, 0, 0, 1134, 899,
	0, 1416, 1417, 1418, 1419, 1420, 0, 0, 0, 0,
	0, 0, 1360, 1361, 1363, 0, 0, 1366, 0, 1368,
	0, 1573, 845, 848, 850, 937, 986, 987, 0, 0,
	0, 0, 967, 1598, 892, 893, 896, 945, 0, 1464,
	0, 0, 924, 997, 925, 0, 904, 55, 940, 0,
	1530, 1529, 1542, 1555, 384, 384, 378, 379, 385, 380,
	382, 383, 1480, 0, 1485, 0, 1566, 0, 0, 1558,
	0, 0, 0, 0, 0, 0, 0, 0, 970, 0,
	0, 973, 0, 0, 0, 0, 964, 935, 0, 936,
	0, -2, 0, 0, 95, 96, 0, 0, 0, 118,
	119, 0, 0, 125, 387, 388, 159, 168, 463, 183,
	436, 0, 0, 308, 374, 335, 336, 337, 0, 359,
	0, 0, 0, 0, 457, 131, 1494, 1493, 402, 402,
	393, 0, 396, 0, 0, 0, 1603, 362, 425, 0,
	149, 0, 0, 0, 0, 0, 155, 610, 0, 0,
	617, 0, 0, 0, 526, 0, 537, 538, 0, 644,
	-2, 706, 390, 0, 404, 407, 952, 0, 0, 539,
	0, 542, 543, 456, 517, 548, 549, 563, 550, 498,
	499, 496, 0, 0, 1517, 1518, 1523, 1521, 1522, 136,
	584, 586, 585, 589, 0, 0, 0, 521, 0, 521,
	582, 0, 452, 1490, 0, 714, 453, 454, 782, 782,
	855, 100, 0, 858, 0, 0, 0, 0, 1013, 1017,
	1030, 1031, 1421, 1447, 361, 361, 1434, 361, 367, 1437,
	361, 1439, 361, 1442, 361, 1445, 1446, 0, 0, 1060,
	0, 914, 0, 0, 1142, 1457, 0, 0, 1154, 1155,
	1156, 1157, 1158, 1451, 0, 0, 0, 1174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 148,
	0, 0, 0, 0, 0, 0, 1371, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1091, 1095,
	0, 1097, 1098, 0, 0, 1323, 0, 0, 1341, 0,
	0, 0, 0, 0, 0, 0, 1461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 988, 993, 993,
	993, 0, 0, 0, 1585, 1586, 1465, 1466, 997, 1467,
	926, 905, 944, 1548, 0, 1541, 0, -2, 1550, 0,
	0, 0, 1556, 376, 377, 918, 83, 998, 86, 0,
	1566, 1575, 0, 1557, 1568, 1570, 0, 0, 0, 1562,
	0, 997, 928, 959, 961, 0, 956, 971, 972, 974,
	0, 976, 0, 978, 979, 939, 933, 0, 103, 0,
	997, 997, 102, 0, 984, 122, 123, 124, 462, 187,
	192, 0, 0, 0, 197, 0, 199, 0, 0, 0,
	204, 205, 402, 402, 437, 0, 305, 307, 0, 0,
	190, 375, 0, 375, 0, 366, 368, 0, 438, 458,
	1491, 1492, 0, 0, 395, 399, 400, 401, 0, 1592,
	151, 0, 0, 0, 613, 0, 641, 0, 0, 0,
	0, 0, 0, 179, 518, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 0, 402, 0, 0, 0, 402,
	402, 402, 0, 698, 389, 0, 0, 669, 666, 540,
	0, 221, 222, 229, 230, 232, 0, 0, 0, 0,
	0, 547, 939, 1508, 1509, 1510, 0, 1520, 1524, 139,
	0, 0, 0, 0, 594, 600, 0, 520, 601, 711,
	712, 713, 98, 723, 729, 857, 877, 1006, 1014, 1018,
	0, 0, 0, 0, 1448, 1432, 375, 1435, 1436, 1438,
	1440, 1441, 1443, 1444, 1056, 1057, 1061, 0, 1139, 0,
	1141, 1455, 0, 1485, 0, 0, 0, 1173, 0, 0,
	0, 1184, 1183, 1185, 0, 1187, 1188, 1193, 1194, 1197,
	1199, 1206, 1208, 1212, 1214, 1217, 1219, 1221, 0, 1224,
	0, 1227, 0, 1230, 0, 1233, 0, 1236, 0, 1239,
	0, 1242, 0, 1245, 0, 1248, 0, 1251, 0, 1254,
	0, 1257, 0, 1260, 0, 1263, 0, 1266, 0, 1271,
	1273, 0, 1276, 1279, 1281, 0, 1284, 0, 1288, 0,
	1290, 1292, 1293, 0, 0, 0, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1320, 0, 1089, 1092,
	1322, 1099, 1100, 1105, 1325, 0, 0, 0, 1328, 0,
	0, 0, 1332, 1135, 1343, 0, 1348, 0, 0, 1354,
	0, 1358, 0, 1364, 1365, 1367, 1369, 0, 0, 0,
	0, 0, 965, 946, 66, 1467, 1469, 0, 1535, 1533,
	1533, 1543, 1544, 0, 0, 1551, 0, 0, 0, 0,
	87, 0, 0, 0, 1571, 0, 0, 0, 0, 104,
	1476, 953, 960, 0, 0, 954, 0, 955, 975, 977,
	932, 0, 997, 997, 93, 94, 0, 193, 0, 195,
	0, 198, 200, 201, 202, 208, 209, 210, 203, 0,
	0, 304, 306, 0, 0, 349, 360, 350, 0, 0,
	1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 939, 152,
	153, 154, 605, 0, 615, 0, 941, 0, 608, 0,
	529, 0, 0, 0, 402, 402, 402, 0, 0, 0,
	0, 683, 0, 0, 646, 0, 654, 0, 0, 0,
	233, 234, 0, 1519, 583, 0, 137, 138, 0, 0,
	588, 522, 523, 1054, 0, 0, 0, 1055, 1433, 0,
	0, 0, 0, 1452, 0, 0, 0, 0, 1180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1296, 0, 0, 0, 635, 636, 0, 1372, 1094,
	1476, 0, 1096, 1106, 1107, 0, 1096, 1342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 994,
	0, 0, 0, 0, 985, 1469, 1474, 0, 0, 1538,
	0, 1531, 1534, 1532, 1545, 0, 0, 1552, 0, 1554,
	0, 1576, 1577, 1569, 0, 1561, 1564, 1560, 1563, 1485,
	957, 0, 962, 0, 1476, 92, 0, 196, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 207, 0,
	0, 364, 369, 0, 0, 0, 606, 0, 942, 618,
	609, 0, 696, 0, 700, 0, 0, 0, 703, 704,
	705, 682, 0, 686, 430, 670, 667, 668, 541, 0,
	140, 141, 0, 0, 0, 1422, 0, 1425, 1138, 1140,
	0, 1169, 1171, 1172, 1430, 1431, 1186, 1222, 1225, 1228,
	1231, 1234, 1237, 1240, 1243, 1246, 1249, 1252, 1255, 1258,
	1261, 1264, 1267, 1275, 1282, 1285, 1289, 1294, 0, 1297,
	0, 0, 1298, 0, 637, 1085, 0, 0, 1103, 1104,
	0, 1327, 1329, 1330, 1331, 1344, 0, 1349, 1350, 0,
	1355, 0, 1359, 1370, 0, 990, 947, 948, 995, 996,
	0, 0, 938, 1474, 85, 1475, 1472, 0, 1470, 1468,
	1527, 0, 1536, 1537, 1546, 1547, 1553, 0, 1559, 0,
	90, 0, 0, 0, 1485, 194, 0, 213, 0, 614,
	0, 617, 607, 694, 695, 0, 707, 699, 701, 702,
	684, -2, 1511, 0, 0, 0, 590, 1423, 0, 0,
	1299, 0, 633, 634, 1093, 1086, 0, 1071, 1072, 1090,
	1324, 1326, 0, 0, 0, 0, 989, 991, 992, 84,
	0, 1471, 1111, 0, 1539, 1540, 1567, 1565, 958, 965,
	0, 91, 443, 436, 1511, 0, 0, 0, 687, 688,
	689, 690, 691, 692, 693, 580, 1513, 142, 143, 0,
	510, 511, 512, 136, 0, 1144, 1295, 1087, 0, 0,
	0, 0, 0, 1345, 0, 1351, 0, 1356, 0, 949,
	950, 1473, 0, 0, 619, 0, 621, 0, -2, 431,
	444, 0, 188, 214, 215, 0, 0, 218, 219, 220,
	211, 212, 132, 0, 0, 708, 0, 1514, 1515, 0,
	139, 0, 0, 1078, 1079, 1080, 1081, 1083, 0, 0,
	0, 0, 1112, 1091, 620, 0, 0, 386, 0, 630,
	432, 433, 0, 439, 440, 441, 442, 216, 217, 642,
	0, 0, 509, 587, 1424, 0, 0, 1346, 0, 1352,
	0, 1357, 0, 622, 623, 631, 0, 434, 0, 435,
	0, 0, 0, 611, 0, 642, 1512, 1088, 1082, 1084,
	0, 0, 1110, 0, 632, 628, 445, 447, 448, 0,
	0, 446, 643, 612, 1347, 1353, 0, 449, 450, 451,
	624, 625, 626, 627,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 146, 3, 3, 3, 174, 166, 3,
	88, 90, 171, 169, 89, 170, 224, 172, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 732,
	154, 153, 155, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 176, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 142, 3, 177,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 143, 144, 145,
	147, 148, 149, 150, 151, 152, 156, 157, 158, 159,
	160, 161, 162, 163, 164, 165, 167, 168, 173, 175,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:599
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:612
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:613
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:617
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:656
		{
			setParseTree(yylex, nil)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:662
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:668
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:673
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:677
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:683
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:687
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:693
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:699
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:705
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:709
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:714
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:718
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:724
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:728
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:734
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:744
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:782
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:788
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:795
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:801
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:808
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 66:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:812
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:818
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:822
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:826
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:830
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:834
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:838
		{
			yyLOCAL = &Except{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:848
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:853
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:857
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:863
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:867
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:872
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:878
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:884
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:891
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:897
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:905
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:909
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:915
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:927
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:939
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:943
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:949
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:955
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:959
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:963
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:967
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:972
		{
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:973
		{
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:977
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:981
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:987
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:991
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:997
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1001
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1006
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1010
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1016
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1022
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1026
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1032
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1036
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1040
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1044
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1050
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1054
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1058
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1064
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1068
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1074
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1078
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1084
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1088
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1092
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1098
		{
			yyVAL.str = RepeatableReadStr
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1102
		{
			yyVAL.str = ReadCommittedStr
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1106
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1110
		{
			yyVAL.str = SerializableStr
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1116
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1120
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1124
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1130
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1136
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1143
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1152
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1156
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1163
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1167
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1172
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1176
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1182
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1187
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1192
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1198
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1203
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1209
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1214
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1218
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1224
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1228
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1234
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1240
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1247
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1254
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1259
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1264
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1269
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1276
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1283
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1294
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1301
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1305
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1311
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1315
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1319
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1323
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1327
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1331
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1337
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1341
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1347
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1351
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1357
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1361
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1367
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1371
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1377
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1381
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1387
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1391
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1397
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1402
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1407
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1411
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1416
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1420
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1424
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 187:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1435
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1444
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1453
		{
			yyVAL.str = ""
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1457
		{
			yyVAL.str = ""
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1466
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1470
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1476
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1482
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1487
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyDollar[1].columnTypeOptionsUnion().DefaultLiteral = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1493
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1498
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1503
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1508
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1513
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1517
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1522
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1526
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1531
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1537
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1543
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1547
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1553
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1557
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1561
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1567
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1571
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1576
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1580
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1585
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1591
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1597
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1602
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1607
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1613
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1621
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1628
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1632
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1636
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1640
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1644
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1648
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1658
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1665
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1669
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1675
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1679
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1683
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1687
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1691
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1695
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1699
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1703
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1707
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1711
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1715
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1719
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1723
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1727
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1732
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1736
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1740
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = Armscii8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = ASCIIStr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = Big5Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.str = UBinaryStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.str = Cp1250Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1766
		{
			yyVAL.str = Cp1251Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.str = Cp1256Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.str = Cp1257Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.str = Cp850Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = Cp852Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = Cp866Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = Cp932Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.str = Dec8Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.str = EucjpmsStr
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.str = EuckrStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.str = Gb18030Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.str = Gb2312Str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.str = GbkStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = Geostd8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = GreekStr
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = HebrewStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = Hp8Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.str = Keybcs2Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.str = Koi8rStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.str = Koi8uStr
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.str = Latin1Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.str = Latin2Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.str = Latin5Str
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.str = Latin7Str
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1862
		{
			yyVAL.str = MacceStr
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.str = MacromanStr
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.str = SjisStr
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.str = Swe7Str
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.str = Tis620Str
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1882
		{
			yyVAL.str = Ucs2Str
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.str = UjisStr
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.str = Utf16Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.str = Utf16leStr
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1898
		{
			yyVAL.str = Utf32Str
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.str = Utf8mb3Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.str = Utf8mb4Str
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.str = Utf8mb3Str
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1920
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1924
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1928
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1934
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1938
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1942
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1948
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1952
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1958
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1962
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1966
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1970
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1976
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1987
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1992
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2036
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2080
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2084
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2088
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2092
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2096
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2102
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2106
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2112
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2116
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2120
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2124
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2128
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2132
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2136
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2140
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2148
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2152
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2156
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2160
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2165
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2191
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2195
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2205
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2210
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2215
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2219
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2224
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2228
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2237
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2241
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2248
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2252
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2258
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2266
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2270
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2274
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2279
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2283
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2288
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2292
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2296
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2300
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2304
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2309
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2314
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2319
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2324
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2330
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2334
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2339
		{
			yyVAL.str = ""
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2343
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2347
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2353
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2358
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2362
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2368
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2372
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2378
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2382
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2387
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2391
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2395
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2399
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2403
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2407
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2413
		{
			yyVAL.str = ""
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2417
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2423
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2427
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2431
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2435
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2439
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2444
		{
			yyVAL.str = ""
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2448
		{
			yyVAL.str = yyDollar[2].str
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2454
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2458
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2462
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2468
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2477
		{
			yyVAL.str = "key"
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2481
		{
			yyVAL.str = yyDollar[1].str
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2487
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2491
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2496
		{
			yyVAL.str = ""
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2500
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2506
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2510
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2516
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2520
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2526
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2530
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2536
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2540
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2546
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2552
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2556
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2560
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2564
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2568
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2573
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2577
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2583
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2589
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2595
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2599
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2603
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2608
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2612
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2618
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2624
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2630
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2634
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2638
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2642
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2646
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2651
		{
			yyVAL.str = ""
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2655
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2659
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2665
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2669
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2674
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2678
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2683
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2687
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2693
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2697
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2701
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2707
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2711
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2717
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2721
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2725
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2729
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2733
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2737
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2741
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2745
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2749
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2753
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2757
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2761
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2765
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2769
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2773
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2777
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2781
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2785
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2789
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2793
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2797
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2801
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2805
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2809
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2813
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2817
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2821
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2825
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2829
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2833
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2837
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2842
		{
			yyVAL.str = ""
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2846
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2850
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2869
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2873
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2877
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2881
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2886
		{
			yyVAL.str = ""
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2892
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2896
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2901
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2905
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2910
		{
			yyVAL.str = ""
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2914
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2919
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2923
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2927
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2932
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2936
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2940
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2944
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2948
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 529:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2952
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2958
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2962
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2966
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2972
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2976
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2980
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2984
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2988
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2992
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2996
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3000
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion(), DefaultLiteral: true}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3004
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3008
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3013
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3018
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3022
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3026
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3030
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3034
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3038
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3042
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3046
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3050
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3054
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3058
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3062
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3066
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3070
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3074
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3078
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3082
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3086
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3090
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3094
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3100
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3104
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3110
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3114
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3118
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3122
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3126
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3130
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3134
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3138
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3142
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3146
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3152
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3159
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3166
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3173
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3179
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3189
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3196
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3203
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3215
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3225
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3229
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3233
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3246
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3256
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3260
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3271
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3278
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3285
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3292
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3300
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3306
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3319
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3326
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3332
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3341
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3349
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3356
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3363
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3367
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3376
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3384
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3393
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3400
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3408
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3412
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3421
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3432
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3436
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3441
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3445
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3450
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3454
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3460
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3466
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3472
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3476
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3482
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3486
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3492
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3498
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3504
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3510
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3516
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3520
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3524
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3528
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3534
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3540
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3546
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3550
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3554
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3560
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3564
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3569
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3573
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3578
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3582
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3588
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3592
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3596
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3600
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3604
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3608
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3612
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3616
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3620
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3624
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3628
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3632
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3636
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3640
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3644
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3648
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3652
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3656
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3660
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3664
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3668
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3672
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3677
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3681
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3685
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3691
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3695
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3701
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3706
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3710
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3715
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3720
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3725
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3730
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3735
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3741
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3747
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3752
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3758
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3764
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3768
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3774
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3779
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3783
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3788
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3793
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3798
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3803
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3809
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3815
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3822
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3829
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3836
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3844
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3848
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3854
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3860
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3866
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3872
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3878
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3884
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3890
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3896
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3902
		{
			yyVAL.str = ""
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3906
		{
			yyVAL.str = ""
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3912
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3918
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3922
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 712:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3941
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3945
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3951
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3955
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3961
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3967
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3971
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3977
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3981
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3985
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3989
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3993
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4005
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4009
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4013
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4017
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4021
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4025
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4029
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4033
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4037
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4041
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4045
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4049
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4053
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4057
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4065
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4069
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4073
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4077
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4085
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4089
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4093
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4097
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4101
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4105
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4109
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4113
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4117
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4121
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4125
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4129
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4133
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4137
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4141
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4145
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4152
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4156
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4160
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4164
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4168
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4172
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4176
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4180
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4184
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4190
		{
			yyVAL.str = ""
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4194
		{
			yyVAL.str = "extended "
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4200
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4204
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4210
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4214
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4220
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4224
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4228
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4234
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4238
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4242
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4248
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4252
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4258
		{
			yyVAL.empty = struct{}{}
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4262
		{
			yyVAL.empty = struct{}{}
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4266
		{
			yyVAL.empty = struct{}{}
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4272
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4276
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4282
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4286
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4290
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4297
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4301
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4305
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4309
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4316
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4320
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4325
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4329
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4335
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4339
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4345
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4349
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4353
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4360
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4366
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4370
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4375
		{
			yyVAL.empty = struct{}{}
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4377
		{
			yyVAL.empty = struct{}{}
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4380
		{
			yyVAL.empty = struct{}{}
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4382
		{
			yyVAL.empty = struct{}{}
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4386
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4392
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4397
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4401
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4405
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4409
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4413
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4417
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4421
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4426
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4430
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4434
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4438
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4444
		{
			yyVAL.str = yyDollar[1].str
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4448
		{
			yyVAL.str = yyDollar[1].str
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4452
		{
			yyVAL.str = yyDollar[1].str
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4458
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4462
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4466
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4470
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4475
		{
			yyVAL.str = ""
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4479
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4483
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4489
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4493
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4499
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4505
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4509
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4515
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4521
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4525
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4531
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4537
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4541
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4545
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4549
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4555
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4561
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4567
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4571
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4575
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4579
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4583
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4587
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4593
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4597
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4603
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4607
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4611
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4615
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4619
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4623
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4627
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4631
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4635
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4639
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4643
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4647
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4652
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4656
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4660
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4665
		{
			yyVAL.str = ""
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4669
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4674
		{
			setAllowComments(yylex, true)
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4678
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4684
		{
			yyVAL.strs = nil
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4688
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4694
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4698
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4702
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4708
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4713
		{
			yyVAL.str = ""
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4717
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4721
		{
			yyVAL.str = SQLCacheStr
		}
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4726
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4730
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4734
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4740
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4744
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4754
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4759
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4763
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4769
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4773
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4778
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4782
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4787
		{
			yyVAL.strs = nil
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4791
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4795
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4799
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4803
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4809
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4813
		{
			yyVAL.str = SQLCacheStr
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4817
		{
			yyVAL.str = DistinctStr
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4821
		{
			yyVAL.str = DistinctStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4825
		{
			yyVAL.str = StraightJoinHint
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4829
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4833
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4839
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4843
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4849
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4853
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4857
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4861
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4866
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4870
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4874
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4881
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4886
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4890
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4896
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4902
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4906
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4916
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4920
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4924
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4928
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4934
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4938
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4944
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4948
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4953
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4957
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4962
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4966
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4972
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4976
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4982
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4986
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4992
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4996
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5000
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5004
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5010
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5014
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5027
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5031
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5035
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5039
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5045
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5047
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5051
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5053
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5057
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5059
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5062
		{
			yyVAL.empty = struct{}{}
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5064
		{
			yyVAL.empty = struct{}{}
		}
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5067
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5071
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5075
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5082
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5088
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5092
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5096
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5102
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5108
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5112
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5116
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5120
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5126
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5130
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5140
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5144
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5150
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5154
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5160
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5165
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5169
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5175
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5179
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 989:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5185
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5189
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5193
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5197
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5202
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5206
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5210
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5214
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5220
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5224
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5231
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5235
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5239
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5243
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5247
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5251
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5255
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5259
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5265
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5269
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5273
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5277
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5283
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5287
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5291
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5295
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5299
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5303
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5307
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5311
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5315
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5319
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5323
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5329
		{
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5332
		{
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5338
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5342
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5346
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5350
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5354
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5358
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5362
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5366
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Interval: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5370
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5374
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5378
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5382
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5386
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5390
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5394
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5400
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5404
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5408
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5412
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5416
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5420
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5424
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5428
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5432
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5436
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5440
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5444
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5448
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5452
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5456
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5460
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5464
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5468
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5472
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5476
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5484
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5488
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Interval: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5492
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5496
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5500
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5506
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5510
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5516
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5520
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5526
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5530
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5534
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5540
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5544
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5551
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5555
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5559
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5563
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5567
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5573
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5577
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5581
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5585
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5589
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5593
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5597
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5602
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5606
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5612
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5616
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5621
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5625
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5630
		{
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5633
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5639
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5645
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5649
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5654
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5661
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5667
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5671
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5677
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5681
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5687
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5691
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5696
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5703
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5709
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5713
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5719
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5725
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5729
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5735
		{
			yyVAL.str = ""
		}
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5739
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5745
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5749
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5756
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5760
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5764
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5768
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5774
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5778
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5782
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5786
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5790
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5794
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5798
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5804
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5808
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5812
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5819
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5825
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5829
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5839
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5843
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5853
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5857
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5861
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5865
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5869
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5873
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5877
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5881
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5885
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5889
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5900
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5904
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5910
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5914
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5918
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5923
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5928
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5932
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5936
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5940
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5944
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5948
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5952
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5960
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5964
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5968
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5972
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5976
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5980
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5984
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5988
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5992
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5996
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6000
		{
			yyLOCAL = &AnyValue{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6004
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6008
		{
			yyLOCAL = &TimestampDiffExpr{Unit: yyDollar[3].intervalTypeUnion(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6012
		{
			yyLOCAL = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6016
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6020
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6024
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6028
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6032
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6036
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6040
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6044
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6048
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6052
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6056
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6060
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6064
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6068
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6076
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6080
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6088
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6092
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6096
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6100
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6104
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6108
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6112
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6116
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6120
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6124
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6128
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6132
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6136
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6140
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6144
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6148
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6152
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6156
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6160
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6164
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6168
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6172
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6176
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6180
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6184
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6188
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6192
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6196
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6200
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6204
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6208
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6212
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6216
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6220
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6224
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6228
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6232
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6236
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6240
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6244
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6248
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6252
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6256
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6260
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6264
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6268
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6272
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6276
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6280
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6284
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6288
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6292
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6296
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6300
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6304
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6308
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6312
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6316
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6320
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6324
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6328
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6332
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6336
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6340
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6344
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6348
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6352
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6356
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6360
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6364
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6368
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6372
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6376
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6380
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6384
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6388
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6392
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6396
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6400
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6404
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6408
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6412
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6416
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6420
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6424
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6428
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6432
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6436
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6440
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6444
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6448
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6452
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6456
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6460
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6464
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6468
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6472
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6476
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6480
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6484
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6488
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6492
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6496
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6500
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6504
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6508
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6512
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6516
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6520
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6524
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6528
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6532
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6536
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6540
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6544
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6548
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6552
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6556
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6560
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6564
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6568
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6572
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6576
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6580
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6584
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6588
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6592
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6596
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6600
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6604
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6608
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6612
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6616
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6620
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6624
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6628
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6632
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6636
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6640
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6644
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6648
		{
			yyLOCAL = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].exprUnion(), Interval: yyDollar[5].exprUnion(), Unit: IntervalNone}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6658
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6662
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6666
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6670
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6675
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6679
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6685
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6689
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6693
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6697
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6701
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6706
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6710
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6714
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6718
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6722
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6726
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6731
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6735
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6739
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6743
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6750
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6754
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6760
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6764
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6768
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6772
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6778
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6782
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6786
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6790
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6794
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6798
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6802
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6807
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6811
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6817
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6821
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6825
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6829
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6833
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6837
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6841
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6845
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6849
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6853
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6857
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6861
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6865
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6869
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6873
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6877
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6881
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6885
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6889
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6893
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6899
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6903
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6907
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6911
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6915
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6919
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6923
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6927
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6931
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6935
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6939
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6943
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6947
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6951
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6955
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6959
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6963
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalType
//line sql.y:6967
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:6977
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:6981
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:6985
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6995
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6999
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7003
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7007
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7011
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7017
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7021
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7025
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7029
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:7033
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7039
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7043
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7047
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1429:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7053
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7057
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7061
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7067
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7071
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7075
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7079
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7083
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7089
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7093
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7097
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7101
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7105
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7109
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7113
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7117
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7121
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7125
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7131
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7135
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7140
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7144
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7149
		{
			yyVAL.str = string("")
		}
	case 1452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7153
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7159
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7163
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7169
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7174
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7178
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7184
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7188
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7192
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7196
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7202
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7206
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7212
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7221
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7225
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7230
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7234
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7239
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7243
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7249
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7255
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7259
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1474:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7264
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7268
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7273
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7277
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7283
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7289
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7293
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7299
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7304
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7308
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7312
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7317
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7321
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7327
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7331
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7335
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7340
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7344
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7348
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7352
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7356
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7363
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7367
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7371
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7375
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7381
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7385
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7389
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7393
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7398
		{
			yyVAL.str = ""
		}
	case 1504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7402
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7406
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7410
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7415
		{
			yyVAL.str = ""
		}
	case 1508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7419
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7425
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7429
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7434
		{
			yyVAL.str = ""
		}
	case 1512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7438
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7443
		{
			yyVAL.str = "cascaded"
		}
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7447
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7451
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7456
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7460
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7466
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7472
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7478
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7487
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7491
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7496
		{
			yyVAL.str = ""
		}
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7500
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7506
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7510
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7516
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7520
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7524
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7529
		{
			yyVAL.str = ""
		}
	case 1531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7533
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7537
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7542
		{
			yyVAL.str = ""
		}
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7546
		{
			yyVAL.str = " header"
		}
	case 1535:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7551
		{
			yyVAL.str = ""
		}
	case 1536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7555
		{
			yyVAL.str = " manifest on"
		}
	case 1537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7559
		{
			yyVAL.str = " manifest off"
		}
	case 1538:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7564
		{
			yyVAL.str = ""
		}
	case 1539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7568
		{
			yyVAL.str = " overwrite on"
		}
	case 1540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7572
		{
			yyVAL.str = " overwrite off"
		}
	case 1541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7578
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1542:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7583
		{
			yyVAL.str = ""
		}
	case 1543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7587
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7593
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7597
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7603
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7607
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7612
		{
			yyVAL.str = ""
		}
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7616
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7622
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7626
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7632
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1553:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7636
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7640
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7645
		{
			yyVAL.str = ""
		}
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7649
		{
			yyVAL.str = " optionally"
		}
	case 1557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7662
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7666
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7670
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7674
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7678
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7684
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7688
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7692
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1565:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7696
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7701
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7705
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7711
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7715
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7721
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7725
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7731
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7735
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7740
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7750
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7754
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7760
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7767
		{
			yyVAL.str = "charset"
		}
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7777
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7781
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7785
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7794
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7796
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7799
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7801
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7804
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7806
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7809
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7811
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7814
		{
			yyVAL.empty = struct{}{}
		}
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7816
		{
			yyVAL.empty = struct{}{}
		}
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7818
		{
			yyVAL.empty = struct{}{}
		}
	case 1598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7822
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7827
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7831
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7836
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7838
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7842
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7848
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7852
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7859
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7865
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7869
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7875
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7879
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7886
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7892
		{
			yyLOCAL = &Kill{Type: yyDollar[2].killTypeUnion(), ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7898
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7902
		{
			yyLOCAL = ConnectionType
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL KillType
//line sql.y:7906
		{
			yyLOCAL = QueryType
		}
		yyVAL.union = yyLOCAL
	case 2233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8550
		{
		}
	case 2234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8555
		{
		}
	case 2235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8559
		{
			skipToEnd(yylex)
		}
	case 2236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8564
		{
			skipToEnd(yylex)
		}
	case 2237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8568
		{
			skipToEnd(yylex)
		}
	case 2238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8572
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
